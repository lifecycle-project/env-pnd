{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"coord",
				"coord_flip"
			],
			[
				"vio",
				"violinPlot"
			],
			[
				"ind",
				"include_meta"
			],
			[
				"include",
				"include_meta"
			],
			[
				"always",
				"always_include_sub"
			],
			[
				"alwa",
				"always_include_sub"
			],
			[
				"asl",
				"alspac_all"
			],
			[
				"alspa",
				"alspac_all"
			],
			[
				"lc",
				"lc_data_v3"
			],
			[
				"ethn",
				"ethn2_m"
			],
			[
				"lc.data",
				"lc_data_v1_2.RData"
			],
			[
				"outcome",
				"outcome_folder"
			],
			[
				"core_",
				"core_folder"
			],
			[
				"not",
				"not_avilable.vars"
			],
			[
				"cohort",
				"cohort_sub"
			],
			[
				"core",
				"core_trim_lc2"
			],
			[
				"asthma_",
				"asthma_current_ISAAC_"
			],
			[
				"asthma_current_",
				"asthma_current_ISAAC"
			],
			[
				"lc1",
				"lc1_missing"
			],
			[
				"required",
				"required_vars"
			],
			[
				"map",
				"map_dfr"
			],
			[
				"b",
				"bind_rows"
			],
			[
				"require",
				"required_vars"
			],
			[
				"alspac_",
				"alspac_sub"
			],
			[
				"data_input",
				"data_input_format"
			],
			[
				"alspac",
				"alspac_raw"
			],
			[
				"als",
				"alspac_all.csv"
			],
			[
				"A",
				"ArmadilloDriver"
			],
			[
				"co",
				"2_1_core_1_0"
			],
			[
				"bp_non",
				"bp_nonrep.data"
			],
			[
				"armadill",
				"armadillo.load_table"
			],
			[
				"year",
				"yearrep_fixed"
			],
			[
				"data",
				"datafile"
			],
			[
				"heigh",
				"height_outcome"
			],
			[
				"datas",
				"datasources = \tArguments"
			],
			[
				"birth_",
				"birth_length"
			],
			[
				"height",
				"height_m"
			],
			[
				"et",
				"ethnicity_mother"
			],
			[
				"birth",
				"birth_subset"
			],
			[
				"subj",
				"subjHasData"
			],
			[
				"class",
				"classDiscrepancy"
			],
			[
				"test",
				"test-server-login"
			],
			[
				"compl",
				"complete.cases"
			],
			[
				"extra",
				"extra_imp.vars"
			],
			[
				"measure",
				"measurement_1"
			],
			[
				"lr_",
				"lr_tab_cc"
			],
			[
				"fscore",
				"fscore_cc.RData"
			],
			[
				"monito",
				"monitor_y"
			],
			[
				"war",
				"warmth_scores"
			],
			[
				"warmth",
				"warmth_f"
			],
			[
				"warmt",
				"warmth_scores"
			],
			[
				"tpf_",
				"tpf_pred.data"
			],
			[
				"monit",
				"monitor_y"
			],
			[
				"tpf",
				"tpf_comb.data"
			],
			[
				"warm",
				"warm_alpha"
			],
			[
				"measureme",
				"measurement_3"
			],
			[
				"meas",
				"measurement_1"
			],
			[
				"tpf_pre",
				"tpf_pred.data"
			],
			[
				"cisR_",
				"cisr_dep_18"
			],
			[
				"imp",
				"imp_sub.data"
			],
			[
				"model",
				"model_df"
			],
			[
				"sdq_imp",
				"sdq_imp_fit_1"
			],
			[
				"sdq_im",
				"sdq_imp_fit_1"
			],
			[
				"parent",
				"parent_comb.data"
			],
			[
				"varna",
				"varnames_sex"
			],
			[
				"tee",
				"teen-parenting"
			],
			[
				"emoqual",
				"emo_qual_rp"
			],
			[
				"te",
				"teen-parenting"
			],
			[
				"pred",
				"predicted_2f"
			],
			[
				"Se",
				"Self-harm"
			],
			[
				"paren",
				"parent_comb.data"
			],
			[
				"knowl",
				"knowl_tf1"
			],
			[
				"stab",
				"stab_mon.fit"
			],
			[
				"correlat",
				"correlation_matrix"
			],
			[
				"correlation",
				"correlations"
			],
			[
				"cor_",
				"cor_mh.data"
			],
			[
				"pare",
				"parent_comb.data"
			],
			[
				"final",
				"final_mod.tab"
			],
			[
				"cont",
				"cont_early"
			],
			[
				"par",
				"parent_comb.data"
			],
			[
				"ear",
				"earlyfact.data"
			],
			[
				"vars",
				"vars_in"
			],
			[
				"long",
				"longtable"
			],
			[
				"book",
				"booktabs"
			],
			[
				"tpd",
				"tpf_ord.data"
			],
			[
				"tp",
				"tpf_ord.data"
			],
			[
				"disc",
				"discipline_kw"
			],
			[
				"tpf_yo",
				"tpf_young.vars"
			],
			[
				"kw",
				"kw4010"
			],
			[
				"strip",
				"stripcol"
			],
			[
				"st",
				"stripe_color"
			],
			[
				"useful",
				"useful-code-r"
			],
			[
				"acce",
				"acceptance_y.mod"
			],
			[
				"fac_",
				"fac_yng.vars"
			],
			[
				"fac",
				"fac_yng.vars"
			],
			[
				"mfq_",
				"mfq_adj_plot"
			],
			[
				"kable",
				"kable_styling"
			],
			[
				"semh_",
				"semh_linked.data"
			],
			[
				"connect",
				"connect_14.vars"
			],
			[
				"pp",
				"ppfu_long.data"
			],
			[
				"ppfu",
				"ppfu_long.data"
			],
			[
				"ppfu_",
				"ppfu_long.data"
			],
			[
				"fact",
				"factor_key"
			],
			[
				"mat_pers_bin",
				"mat_pers_bin_num"
			],
			[
				"mat_pers",
				"mat_pers.data"
			],
			[
				"exp",
				"exponentiate"
			],
			[
				"mat_",
				"mat_finprob_early"
			],
			[
				"mat",
				"mat_moderators"
			],
			[
				"mat_f",
				"mat_finprob_late"
			],
			[
				"mat_p",
				"mat_pers_symp"
			],
			[
				"latex",
				"latex_options"
			],
			[
				"col",
				"col_fact_names"
			],
			[
				"col_",
				"col_var_names"
			],
			[
				"dec",
				"decreasing = \tArguments"
			],
			[
				"full",
				"full_width = \tArguments"
			],
			[
				"para",
				"parameterestimates\t{lavaan}"
			],
			[
				"school",
				"school-enjoyment-mh"
			],
			[
				"sec",
				"sec15.fit"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/timcadman/OneDrive - University of Bristol/repos/trajectories-tutorial/R/tutorial.rmd",
			"settings":
			{
				"buffer_size": 31880,
				"line_ending": "Unix"
			}
		},
		{
			"file": "reports/31-may-21/env_pnd_desc_03_06_21.Rmd",
			"redo_stack":
			[
				[
					1011,
					1,
					"right_delete",
					null,
					"AwAAAD8qAAAAAAAAQCoAAAAAAAAAAAAAPyoAAAAAAABAKgAAAAAAAAAAAAA/KgAAAAAAAEAqAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPyoAAAAAAAA/KgAAAAAAAAAAAAAAAPC/"
				],
				[
					1003,
					1,
					"right_delete",
					null,
					"BgAAAFgRAAAAAAAAWREAAAAAAAAAAAAAWBEAAAAAAABZEQAAAAAAAAAAAABYEQAAAAAAAFkRAAAAAAAAAAAAAFgRAAAAAAAAWREAAAAAAAAAAAAAWBEAAAAAAABZEQAAAAAAAAAAAABYEQAAAAAAAFkRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBEAAAAAAABYEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1001,
					1,
					"insert",
					{
						"characters": "exposure"
					},
					"CAAAAFURAAAAAAAAVREAAAAAAAABAAAAZVQRAAAAAAAAVBEAAAAAAAABAAAAclMRAAAAAAAAUxEAAAAAAAABAAAAdVIRAAAAAAAAUhEAAAAAAAABAAAAc1ERAAAAAAAAUREAAAAAAAABAAAAb1ARAAAAAAAAUBEAAAAAAAABAAAAcE8RAAAAAAAATxEAAAAAAAABAAAAeE4RAAAAAAAAThEAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAVhEAAAAAAABWEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1000,
					1,
					"left_delete",
					null,
					"CAAAAE4RAAAAAAAATxEAAAAAAAAAAAAATxEAAAAAAABQEQAAAAAAAAAAAABQEQAAAAAAAFERAAAAAAAAAAAAAFERAAAAAAAAUhEAAAAAAAAAAAAAUhEAAAAAAABTEQAAAAAAAAAAAABTEQAAAAAAAFQRAAAAAAAAAAAAAFQRAAAAAAAAVREAAAAAAAAAAAAAVREAAAAAAABWEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThEAAAAAAABOEQAAAAAAAAAAAAAAAPC/"
				],
				[
					992,
					1,
					"paste",
					null,
					"AQAAAEARAAAAAAAAQBEAAAAAAAB3AAAAJT4lIApncm91cF9ieSh2YXJpYWJsZSwgdGltZSwgY29ob3J0KSAlPiUgCm11dGF0ZShuID0gbigpKSAlPiUgCm11dGF0ZShjb2hvcnRfbiA9IHBhc3RlMChjb2hvcnRfbmVhdCwgIlxuIiwgIm4gPSAiLCBuKSk",
					"AQAAAAAAAAABAAAAtxEAAAAAAAC3EQAAAAAAAAAAAAAAAPC/"
				],
				[
					991,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8RAAAAAAAAPxEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAQBEAAAAAAABAEQAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 16991,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1531,
					1,
					"insert",
					{
						"characters": "0,"
					},
					"AgAAAAEoAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAADKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAPC/"
				],
				[
					1532,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAAMoAAAAAAAABCgAAAAAAAAAAAAABCgAAAAAAAAFKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAygAAAAAAAADKAAAAAAAAAAAAAAAAPC/"
				],
				[
					1538,
					1,
					"right_delete",
					null,
					"AQAAAAgoAAAAAAAACCgAAAAAAACBAAAAICBzY2FsZV94X2Rpc2NyZXRlKGV4cGFuZCA9IGMoMCwgMCkpICsgCiAgc2NhbGVfeV9jb250aW51b3VzKGV4cGFuZCA9IGMoMCwgMCksIGxpbWl0cyA9IGMoMCwgMTAwKSwgYnJlYWtzID0gYyhzZXEoMCwgMTAwLCAxMCkpKSAr",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACCgAAAAAAACJKAAAAAAAAP///////+9/"
				],
				[
					1540,
					2,
					"right_delete",
					null,
					"AgAAAAcoAAAAAAAABygAAAAAAAABAAAACgcoAAAAAAAABygAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABygAAAAAAAAHKAAAAAAAAAAAAAAAAAAA"
				],
				[
					1543,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAAYoAAAAAAAABygAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABigAAAAAAAAGKAAAAAAAAP///////+9/"
				],
				[
					1544,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAAcoAAAAAAAACCgAAAAAAAAAAAAACCgAAAAAAAAJKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABygAAAAAAAAHKAAAAAAAAAAAAAAAAPC/"
				],
				[
					1552,
					1,
					"right_delete",
					null,
					"AQAAALUnAAAAAAAAtScAAAAAAAABAAAAcg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtScAAAAAAAC1JwAAAAAAAAAAAAAAAPC/"
				],
				[
					1559,
					6,
					"right_delete",
					null,
					"BgAAANYnAAAAAAAA1icAAAAAAAAaAAAAYnJlYWtzID0gc2VxKDAsIDEwMCwgMTApLCDWJwAAAAAAANYnAAAAAAAAAQAAAArWJwAAAAAAANYnAAAAAAAAAQAAACDWJwAAAAAAANYnAAAAAAAAAQAAACDWJwAAAAAAANYnAAAAAAAAAQAAACDWJwAAAAAAANYnAAAAAAAAAQAAACA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8CcAAAAAAADWJwAAAAAAAAAAAAAAADxA"
				],
				[
					1568,
					2,
					"right_delete",
					null,
					"AgAAAI0qAAAAAAAAjSoAAAAAAAABAAAACo0qAAAAAAAAjSoAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjSoAAAAAAACNKgAAAAAAAAAAAAAAAPC/"
				],
				[
					1571,
					1,
					"right_delete",
					null,
					"AQAAAIMpAAAAAAAAgykAAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgykAAAAAAACDKQAAAAAAAAAAAAAAAPC/"
				],
				[
					1572,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAIMpAAAAAAAAhCkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgykAAAAAAACDKQAAAAAAAAAAAAAAAPC/"
				],
				[
					1579,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEcpAAAAAAAASCkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARykAAAAAAABHKQAAAAAAAAAAAAAAAPC/"
				],
				[
					1580,
					1,
					"insert",
					{
						"characters": " size"
					},
					"BQAAAEgpAAAAAAAASSkAAAAAAAAAAAAASSkAAAAAAABKKQAAAAAAAAAAAABKKQAAAAAAAEspAAAAAAAAAAAAAEspAAAAAAAATCkAAAAAAAAAAAAATCkAAAAAAABNKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASCkAAAAAAABIKQAAAAAAAAAAAAAAAPC/"
				],
				[
					1581,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAE0pAAAAAAAATikAAAAAAAAAAAAATikAAAAAAABPKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATSkAAAAAAABNKQAAAAAAAAAAAAAAAPC/"
				],
				[
					1582,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAE8pAAAAAAAAUCkAAAAAAAAAAAAAUCkAAAAAAABRKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATykAAAAAAABPKQAAAAAAAAAAAAAAAPC/"
				],
				[
					1587,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAFEpAAAAAAAAUikAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUSkAAAAAAABRKQAAAAAAAAAAAAAAAPC/"
				],
				[
					1588,
					2,
					"left_delete",
					null,
					"AgAAAFEpAAAAAAAAUSkAAAAAAAABAAAAMlApAAAAAAAAUCkAAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUikAAAAAAABSKQAAAAAAAAAAAAAAAPC/"
				],
				[
					1589,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAFApAAAAAAAAUSkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUCkAAAAAAABQKQAAAAAAAAAAAAAAAPC/"
				],
				[
					1596,
					1,
					"left_delete",
					null,
					"AQAAAKQrAAAAAAAApCsAAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApSsAAAAAAAClKwAAAAAAAAAAAAAAAPC/"
				],
				[
					1597,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAKQrAAAAAAAApSsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApCsAAAAAAACkKwAAAAAAAAAAAAAAAPC/"
				],
				[
					1601,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGgrAAAAAAAAaSsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaCsAAAAAAABoKwAAAAAAAAAAAAAAAPC/"
				],
				[
					1602,
					1,
					"insert",
					{
						"characters": " size"
					},
					"BQAAAGkrAAAAAAAAaisAAAAAAAAAAAAAaisAAAAAAABrKwAAAAAAAAAAAABrKwAAAAAAAGwrAAAAAAAAAAAAAGwrAAAAAAAAbSsAAAAAAAAAAAAAbSsAAAAAAABuKwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaSsAAAAAAABpKwAAAAAAAAAAAAAAAPC/"
				],
				[
					1603,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAG4rAAAAAAAAbysAAAAAAAAAAAAAbysAAAAAAABwKwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbisAAAAAAABuKwAAAAAAAAAAAAAAAPC/"
				],
				[
					1604,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAHArAAAAAAAAcSsAAAAAAAAAAAAAcSsAAAAAAAByKwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcCsAAAAAAABwKwAAAAAAAAAAAAAAAPC/"
				],
				[
					1610,
					1,
					"paste",
					null,
					"AgAAAG8sAAAAAAAAtywAAAAAAAAAAAAAtywAAAAAAAC3LAAAAAAAAE0AAAAgIGNvb3JkX2ZsaXAoKSArCiAgc2NhbGVfeV9jb250aW51b3VzKGV4cGFuZCA9IGMoMCwgMCksIGxpbWl0cyA9IGMoMC44LCAxLjIpKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvCwAAAAAAABvLAAAAAAAAAAAAAAAAPC/"
				],
				[
					1613,
					1,
					"insert",
					{
						"characters": ".8"
					},
					"AgAAAIssAAAAAAAAjCwAAAAAAAAAAAAAjCwAAAAAAACNLAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiywAAAAAAACLLAAAAAAAAAAAAAAAAPC/"
				],
				[
					1615,
					1,
					"insert",
					{
						"characters": "1.2"
					},
					"AwAAAI8sAAAAAAAAkCwAAAAAAAAAAAAAkCwAAAAAAACRLAAAAAAAAAAAAACRLAAAAAAAAJIsAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjywAAAAAAACPLAAAAAAAAAAAAAAAAPC/"
				],
				[
					1616,
					1,
					"right_delete",
					null,
					"AQAAAJIsAAAAAAAAkiwAAAAAAAABAAAAMw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkiwAAAAAAACSLAAAAAAAAAAAAAAAAPC/"
				],
				[
					1624,
					1,
					"left_delete",
					null,
					"AQAAAIwsAAAAAAAAjCwAAAAAAAABAAAAOA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjSwAAAAAAACNLAAAAAAAAAAAAAAAAPC/"
				],
				[
					1625,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAAIwsAAAAAAAAjSwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjCwAAAAAAACMLAAAAAAAAAAAAAAAAPC/"
				],
				[
					1627,
					1,
					"right_delete",
					null,
					"AQAAAJEsAAAAAAAAkSwAAAAAAAABAAAAMg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkSwAAAAAAACRLAAAAAAAAAAAAAAAAPC/"
				],
				[
					1628,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJEsAAAAAAAAkiwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkSwAAAAAAACRLAAAAAAAAAAAAAAAAPC/"
				],
				[
					1643,
					1,
					"paste",
					null,
					"AgAAAGouAAAAAAAAti4AAAAAAAAAAAAAti4AAAAAAAC2LgAAAAAAAE0AAAAgIGNvb3JkX2ZsaXAoKSArCiAgc2NhbGVfeV9jb250aW51b3VzKGV4cGFuZCA9IGMoMCwgMCksIGxpbWl0cyA9IGMoMC44LCAxLjIpKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAty4AAAAAAABqLgAAAAAAAAAAAAAAAAAA"
				],
				[
					1649,
					1,
					"left_delete",
					null,
					"AQAAAIcuAAAAAAAAhy4AAAAAAAABAAAAOQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiC4AAAAAAACILgAAAAAAAAAAAAAAAPC/"
				],
				[
					1650,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAIcuAAAAAAAAiC4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhy4AAAAAAACHLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1652,
					1,
					"right_delete",
					null,
					"AQAAAIwuAAAAAAAAjC4AAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjC4AAAAAAACMLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1653,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAIwuAAAAAAAAjS4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjC4AAAAAAACMLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1660,
					1,
					"right_delete",
					null,
					"AQAAAIcuAAAAAAAAhy4AAAAAAAABAAAANQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhy4AAAAAAACHLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1661,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAIcuAAAAAAAAiC4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhy4AAAAAAACHLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1663,
					1,
					"right_delete",
					null,
					"AQAAAIwuAAAAAAAAjC4AAAAAAAABAAAANQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjC4AAAAAAACMLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1664,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAIwuAAAAAAAAjS4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjC4AAAAAAACMLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1671,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALssAAAAAAAAvCwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuywAAAAAAAC7LAAAAAAAAAAAAAAAAPC/"
				],
				[
					1689,
					4,
					"right_delete",
					null,
					"BAAAAKspAAAAAAAAqykAAAAAAAAhAAAAZmFjZXRfd3JhcCh+ZXhwb3N1cmUsIG5jb2wgPSAxKSArqykAAAAAAACrKQAAAAAAAAEAAAAKqykAAAAAAACrKQAAAAAAAAEAAAAgqykAAAAAAACrKQAAAAAAAAEAAAAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzCkAAAAAAACrKQAAAAAAAAAAAAAAACxA"
				],
				[
					1702,
					1,
					"left_delete",
					null,
					"AQAAAGQuAAAAAAAAZC4AAAAAAAABAAAAOA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZS4AAAAAAABlLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1703,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AQAAAGQuAAAAAAAAZS4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZC4AAAAAAABkLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1705,
					1,
					"right_delete",
					null,
					"AQAAAGkuAAAAAAAAaS4AAAAAAAABAAAAMg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaS4AAAAAAABpLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1706,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAGkuAAAAAAAAai4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaS4AAAAAAABpLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1716,
					1,
					"insert",
					{
						"characters": "_neat"
					},
					"BQAAAAErAAAAAAAAAisAAAAAAAAAAAAAAisAAAAAAAADKwAAAAAAAAAAAAADKwAAAAAAAAQrAAAAAAAAAAAAAAQrAAAAAAAABSsAAAAAAAAAAAAABSsAAAAAAAAGKwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAASsAAAAAAAABKwAAAAAAAAAAAAAAAPC/"
				],
				[
					1723,
					1,
					"insert",
					{
						"characters": "_neat"
					},
					"BQAAAA4tAAAAAAAADy0AAAAAAAAAAAAADy0AAAAAAAAQLQAAAAAAAAAAAAAQLQAAAAAAABEtAAAAAAAAAAAAABEtAAAAAAAAEi0AAAAAAAAAAAAAEi0AAAAAAAATLQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADi0AAAAAAAAOLQAAAAAAAAAAAAAAAPC/"
				],
				[
					1730,
					1,
					"insert",
					{
						"characters": "_nat"
					},
					"BAAAAHUvAAAAAAAAdi8AAAAAAAAAAAAAdi8AAAAAAAB3LwAAAAAAAAAAAAB3LwAAAAAAAHgvAAAAAAAAAAAAAHgvAAAAAAAAeS8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdS8AAAAAAAB1LwAAAAAAAAAAAAAAAPC/"
				],
				[
					1731,
					2,
					"left_delete",
					null,
					"AgAAAHgvAAAAAAAAeC8AAAAAAAABAAAAdHcvAAAAAAAAdy8AAAAAAAABAAAAYQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeS8AAAAAAAB5LwAAAAAAAAAAAAAAAPC/"
				],
				[
					1732,
					1,
					"insert",
					{
						"characters": "eat"
					},
					"AwAAAHcvAAAAAAAAeC8AAAAAAAAAAAAAeC8AAAAAAAB5LwAAAAAAAAAAAAB5LwAAAAAAAHovAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdy8AAAAAAAB3LwAAAAAAAAAAAAAAAPC/"
				],
				[
					1735,
					1,
					"left_delete",
					null,
					"AQAAAPkvAAAAAAAA+S8AAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+i8AAAAAAAD6LwAAAAAAAAAAAAAAAPC/"
				],
				[
					1736,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAPkvAAAAAAAA+i8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+S8AAAAAAAD5LwAAAAAAAAAAAAAAAPC/"
				],
				[
					1739,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAL0vAAAAAAAAvi8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvS8AAAAAAAC9LwAAAAAAAAAAAAAAAPC/"
				],
				[
					1740,
					1,
					"insert",
					{
						"characters": " size"
					},
					"BQAAAL4vAAAAAAAAvy8AAAAAAAAAAAAAvy8AAAAAAADALwAAAAAAAAAAAADALwAAAAAAAMEvAAAAAAAAAAAAAMEvAAAAAAAAwi8AAAAAAAAAAAAAwi8AAAAAAADDLwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvi8AAAAAAAC+LwAAAAAAAAAAAAAAAPC/"
				],
				[
					1741,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMMvAAAAAAAAxC8AAAAAAAAAAAAAxC8AAAAAAADFLwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwy8AAAAAAADDLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1742,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAMUvAAAAAAAAxi8AAAAAAAAAAAAAxi8AAAAAAADHLwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxS8AAAAAAADFLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1748,
					1,
					"paste",
					null,
					"AgAAAP8wAAAAAAAAdzEAAAAAAAAAAAAAdzEAAAAAAAB3MQAAAAAAAAwAAABjb29yZF9mbGlwKCk",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACzEAAAAAAAD/MAAAAAAAAAAAAAAAAPC/"
				],
				[
					1751,
					2,
					"left_delete",
					null,
					"AgAAAEgxAAAAAAAASDEAAAAAAAABAAAAN0cxAAAAAAAARzEAAAAAAAABAAAALg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASTEAAAAAAABJMQAAAAAAAAAAAAAAAPC/"
				],
				[
					1753,
					3,
					"right_delete",
					null,
					"AwAAAEkxAAAAAAAASTEAAAAAAAABAAAAMUkxAAAAAAAASTEAAAAAAAABAAAALkkxAAAAAAAASTEAAAAAAAABAAAAMw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASTEAAAAAAABJMQAAAAAAAAAAAAAAAPC/"
				],
				[
					1754,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAEkxAAAAAAAASjEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASTEAAAAAAABJMQAAAAAAAAAAAAAAAPC/"
				],
				[
					1758,
					4,
					"right_delete",
					null,
					"BAAAAGQwAAAAAAAAZDAAAAAAAAA4AAAAc2NhbGVfeV9jb250aW51b3VzKGV4cGFuZCA9IGMoMCwgMCksIGxpbWl0cyA9IGMoMCwgNSkpICtkMAAAAAAAAGQwAAAAAAAAAQAAAApkMAAAAAAAAGQwAAAAAAAAAQAAACBkMAAAAAAAAGQwAAAAAAAAAQAAACA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnDAAAAAAAABkMAAAAAAAAAAAAAAAACxA"
				],
				[
					1768,
					1,
					"insert",
					{
						"characters": "LAnduse"
					},
					"CAAAALIuAAAAAAAAsy4AAAAAAAAAAAAAsy4AAAAAAACzLgAAAAAAABEAAABCdWlsdCBlbnZpcm9ubWVudLMuAAAAAAAAtC4AAAAAAAAAAAAAtC4AAAAAAAC1LgAAAAAAAAAAAAC1LgAAAAAAALYuAAAAAAAAAAAAALYuAAAAAAAAty4AAAAAAAAAAAAAty4AAAAAAAC4LgAAAAAAAAAAAAC4LgAAAAAAALkuAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsi4AAAAAAADDLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1769,
					6,
					"left_delete",
					null,
					"BgAAALguAAAAAAAAuC4AAAAAAAABAAAAZbcuAAAAAAAAty4AAAAAAAABAAAAc7YuAAAAAAAAti4AAAAAAAABAAAAdbUuAAAAAAAAtS4AAAAAAAABAAAAZLQuAAAAAAAAtC4AAAAAAAABAAAAbrMuAAAAAAAAsy4AAAAAAAABAAAAQQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuS4AAAAAAAC5LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1770,
					1,
					"insert",
					{
						"characters": "and"
					},
					"AwAAALMuAAAAAAAAtC4AAAAAAAAAAAAAtC4AAAAAAAC1LgAAAAAAAAAAAAC1LgAAAAAAALYuAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsy4AAAAAAACzLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1771,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAALYuAAAAAAAAty4AAAAAAAAAAAAAty4AAAAAAAC4LgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAti4AAAAAAAC2LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1772,
					1,
					"left_delete",
					null,
					"AQAAALcuAAAAAAAAty4AAAAAAAABAAAAcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuC4AAAAAAAC4LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1773,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAALcuAAAAAAAAuC4AAAAAAAAAAAAAuC4AAAAAAAC5LgAAAAAAAAAAAAC5LgAAAAAAALouAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAty4AAAAAAAC3LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1776,
					1,
					"insert",
					{
						"characters": "\n##"
					},
					"AwAAADQxAAAAAAAANTEAAAAAAAAAAAAANTEAAAAAAAA2MQAAAAAAAAAAAAA2MQAAAAAAADcxAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANDEAAAAAAAA0MQAAAAAAAAAAAAAAAPC/"
				],
				[
					1777,
					1,
					"insert",
					{
						"characters": " Other"
					},
					"BgAAADcxAAAAAAAAODEAAAAAAAAAAAAAODEAAAAAAAA5MQAAAAAAAAAAAAA5MQAAAAAAADoxAAAAAAAAAAAAADoxAAAAAAAAOzEAAAAAAAAAAAAAOzEAAAAAAAA8MQAAAAAAAAAAAAA8MQAAAAAAAD0xAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANzEAAAAAAAA3MQAAAAAAAAAAAAAAAPC/"
				],
				[
					1778,
					1,
					"insert",
					{
						"characters": " built"
					},
					"BgAAAD0xAAAAAAAAPjEAAAAAAAAAAAAAPjEAAAAAAAA/MQAAAAAAAAAAAAA/MQAAAAAAAEAxAAAAAAAAAAAAAEAxAAAAAAAAQTEAAAAAAAAAAAAAQTEAAAAAAABCMQAAAAAAAAAAAABCMQAAAAAAAEMxAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPTEAAAAAAAA9MQAAAAAAAAAAAAAAAPC/"
				],
				[
					1779,
					1,
					"insert",
					{
						"characters": " environment"
					},
					"DAAAAEMxAAAAAAAARDEAAAAAAAAAAAAARDEAAAAAAABFMQAAAAAAAAAAAABFMQAAAAAAAEYxAAAAAAAAAAAAAEYxAAAAAAAARzEAAAAAAAAAAAAARzEAAAAAAABIMQAAAAAAAAAAAABIMQAAAAAAAEkxAAAAAAAAAAAAAEkxAAAAAAAASjEAAAAAAAAAAAAASjEAAAAAAABLMQAAAAAAAAAAAABLMQAAAAAAAEwxAAAAAAAAAAAAAEwxAAAAAAAATTEAAAAAAAAAAAAATTEAAAAAAABOMQAAAAAAAAAAAABOMQAAAAAAAE8xAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQzEAAAAAAABDMQAAAAAAAAAAAAAAAPC/"
				],
				[
					1780,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAE8xAAAAAAAAUDEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATzEAAAAAAABPMQAAAAAAAAAAAAAAAPC/"
				],
				[
					1786,
					1,
					"paste",
					null,
					"AQAAAFAxAAAAAAAAxDMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUDEAAAAAAABQMQAAAAAAAAAAAAAAAPC/"
				],
				[
					1790,
					1,
					"right_delete",
					null,
					"AQAAAPkuAAAAAAAA+S4AAAAAAAAbAAAAImJkZW5zIiwgImZkZW5zIiwgImZyaWNoIiwg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFC8AAAAAAAD5LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1796,
					1,
					"right_delete",
					null,
					"AQAAAAQvAAAAAAAABC8AAAAAAAAIAAAAIndhbGsiLCA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABC8AAAAAAAAMLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1798,
					5,
					"right_delete",
					null,
					"BQAAABsvAAAAAAAAGy8AAAAAAAABAAAAChsvAAAAAAAAGy8AAAAAAAABAAAAIBsvAAAAAAAAGy8AAAAAAAABAAAAIBsvAAAAAAAAGy8AAAAAAAABAAAAIBsvAAAAAAAAGy8AAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGy8AAAAAAAAbLwAAAAAAAP///////+9/"
				],
				[
					1804,
					1,
					"left_delete",
					null,
					"AQAAAN0wAAAAAAAA3TAAAAAAAAABAAAANQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3jAAAAAAAADeMAAAAAAAAAAAAAAAAPC/"
				],
				[
					1805,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAN0wAAAAAAAA3jAAAAAAAAAAAAAA3jAAAAAAAADfMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3TAAAAAAAADdMAAAAAAAAAAAAAAAAPC/"
				],
				[
					1810,
					1,
					"left_delete",
					null,
					"AQAAAHMzAAAAAAAAczMAAAAAAAABAAAANQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdDMAAAAAAAB0MwAAAAAAAAAAAAAAAPC/"
				],
				[
					1811,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAHMzAAAAAAAAdDMAAAAAAAAAAAAAdDMAAAAAAAB1MwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAczMAAAAAAABzMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1819,
					1,
					"right_delete",
					null,
					"AQAAAIIxAAAAAAAAgjEAAAAAAAALAAAAImxhbmR1c2UiLCA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgjEAAAAAAACNMQAAAAAAAAAAAAAAAPC/"
				],
				[
					1822,
					6,
					"right_delete",
					null,
					"BgAAAIoxAAAAAAAAijEAAAAAAAAXAAAAImx1X2FnciIsICJsdV9mb3JzdCIsICKKMQAAAAAAAIoxAAAAAAAAAQAAAAqKMQAAAAAAAIoxAAAAAAAAAQAAACCKMQAAAAAAAIoxAAAAAAAAAQAAACCKMQAAAAAAAIoxAAAAAAAAAQAAACCKMQAAAAAAAIoxAAAAAAAAAQAAACA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAijEAAAAAAAChMQAAAAAAAP///////+9/"
				],
				[
					1823,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAIoxAAAAAAAAizEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAijEAAAAAAACKMQAAAAAAAAAAAAAAAPC/"
				],
				[
					1831,
					7,
					"left_delete",
					null,
					"BwAAAGUzAAAAAAAAZTMAAAAAAAABAAAAKWQzAAAAAAAAZDMAAAAAAAABAAAAMGMzAAAAAAAAYzMAAAAAAAABAAAAIGIzAAAAAAAAYjMAAAAAAAABAAAALGEzAAAAAAAAYTMAAAAAAAABAAAAMGAzAAAAAAAAYDMAAAAAAAABAAAAKF8zAAAAAAAAXzMAAAAAAAABAAAAYw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZjMAAAAAAABmMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1832,
					1,
					"insert",
					{
						"characters": "NLU"
					},
					"AwAAAF8zAAAAAAAAYDMAAAAAAAAAAAAAYDMAAAAAAABhMwAAAAAAAAAAAABhMwAAAAAAAGIzAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXzMAAAAAAABfMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1833,
					2,
					"left_delete",
					null,
					"AgAAAGEzAAAAAAAAYTMAAAAAAAABAAAAVWAzAAAAAAAAYDMAAAAAAAABAAAATA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYjMAAAAAAABiMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1834,
					1,
					"insert",
					{
						"characters": "ULL"
					},
					"AwAAAGAzAAAAAAAAYTMAAAAAAAAAAAAAYTMAAAAAAABiMwAAAAAAAAAAAABiMwAAAAAAAGMzAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYDMAAAAAAABgMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1842,
					1,
					"insert",
					{
						"characters": "FALSE"
					},
					"BgAAAF8zAAAAAAAAYDMAAAAAAAAAAAAAYDMAAAAAAABgMwAAAAAAAAQAAABOVUxMYDMAAAAAAABhMwAAAAAAAAAAAABhMwAAAAAAAGIzAAAAAAAAAAAAAGIzAAAAAAAAYzMAAAAAAAAAAAAAYzMAAAAAAABkMwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXzMAAAAAAABjMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1849,
					1,
					"left_delete",
					null,
					"AQAAAAUzAAAAAAAABTMAAAAAAAApAAAAc2NhbGVfZmlsbF9tYW51YWwodmFsdWVzID0gcGFsZXR0ZV9zdGQpICs",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALjMAAAAAAAAFMwAAAAAAAAAAAAAAADxA"
				],
				[
					1851,
					4,
					"right_delete",
					null,
					"BAAAAAQzAAAAAAAABDMAAAAAAAABAAAAIAQzAAAAAAAABDMAAAAAAAABAAAACgQzAAAAAAAABDMAAAAAAAABAAAAIAQzAAAAAAAABDMAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABDMAAAAAAAAEMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1852,
					1,
					"left_delete",
					null,
					"AQAAAAMzAAAAAAAAAzMAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABDMAAAAAAAAEMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1856,
					4,
					"right_delete",
					null,
					"BAAAAJUwAAAAAAAAlTAAAAAAAAApAAAAc2NhbGVfZmlsbF9tYW51YWwodmFsdWVzID0gcGFsZXR0ZV9zdGQpICuVMAAAAAAAAJUwAAAAAAAAAQAAAAqVMAAAAAAAAJUwAAAAAAAAAQAAACCVMAAAAAAAAJUwAAAAAAAAAQAAACA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvjAAAAAAAACVMAAAAAAAAAAAAAAAADxA"
				],
				[
					1857,
					1,
					"left_delete",
					null,
					"AQAAAJMwAAAAAAAAkzAAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlTAAAAAAAACVMAAAAAAAAAAAAAAAAPC/"
				],
				[
					1863,
					1,
					"paste",
					null,
					"AgAAALQwAAAAAAAAxzAAAAAAAAAAAAAAxzAAAAAAAADHMAAAAAAAABUAAAAgICAgZXhwYW5kID0gYygwLCAwKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyTAAAAAAAAC0MAAAAAAAAAAAAAAAAPC/"
				],
				[
					1866,
					1,
					"paste",
					null,
					"AgAAAHcuAAAAAAAAii4AAAAAAAAAAAAAii4AAAAAAACKLgAAAAAAABUAAAAgICAgZXhwYW5kID0gYygwLCAwKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjC4AAAAAAAB3LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1869,
					1,
					"paste",
					null,
					"AgAAAHYsAAAAAAAAiSwAAAAAAAAAAAAAiSwAAAAAAACJLAAAAAAAABUAAAAgICAgZXhwYW5kID0gYygwLCAwKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiywAAAAAAAB2LAAAAAAAAAAAAAAAAPC/"
				],
				[
					1872,
					1,
					"paste",
					null,
					"AgAAAEwqAAAAAAAAXyoAAAAAAAAAAAAAXyoAAAAAAABfKgAAAAAAABUAAAAgICAgZXhwYW5kID0gYygwLCAwKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYSoAAAAAAABMKgAAAAAAAAAAAAAAAPC/"
				],
				[
					1875,
					1,
					"paste",
					null,
					"AgAAANInAAAAAAAA5ScAAAAAAAAAAAAA5ScAAAAAAADlJwAAAAAAABcAAAAgICAgZXhwYW5kID0gYygwLCAwKSkgKw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6ScAAAAAAADSJwAAAAAAAAAAAAAAAPC/"
				],
				[
					1876,
					1,
					"left_delete",
					null,
					"AQAAAOQnAAAAAAAA5CcAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5ScAAAAAAADlJwAAAAAAAAAAAAAAAPC/"
				],
				[
					1877,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAAOQnAAAAAAAA5ScAAAAAAAAAAAAA5ScAAAAAAADmJwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5CcAAAAAAADkJwAAAAAAAAAAAAAAAPC/"
				],
				[
					1879,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAOYnAAAAAAAA5ycAAAAAAAAAAAAA5ycAAAAAAADoJwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5icAAAAAAADmJwAAAAAAAAAAAAAAAPC/"
				],
				[
					1883,
					1,
					"paste",
					null,
					"AgAAAGUHAAAAAAAAeAcAAAAAAAAAAAAAeAcAAAAAAAB4BwAAAAAAABMAAAAgIGV4cGFuZCA9IGMoMCwgMCks",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeAcAAAAAAABlBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1887,
					2,
					"right_delete",
					null,
					"AgAAAGcHAAAAAAAAZwcAAAAAAAABAAAAIGcHAAAAAAAAZwcAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZwcAAAAAAABnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1890,
					1,
					"paste",
					null,
					"AgAAAN0HAAAAAAAA8AcAAAAAAAAAAAAA8AcAAAAAAADwBwAAAAAAABMAAAAgIGV4cGFuZCA9IGMoMCwgMCks",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8AcAAAAAAADdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1893,
					1,
					"left_delete",
					null,
					"AQAAAN8HAAAAAAAA3wcAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QcAAAAAAADhBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1905,
					1,
					"right_delete",
					null,
					"AQAAAOEnAAAAAAAA4ScAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4ScAAAAAAADhJwAAAAAAAAAAAAAAAPC/"
				],
				[
					1911,
					1,
					"insert",
					{
						"characters": "\n```"
					},
					"CQAAAAwzAAAAAAAADTMAAAAAAAAAAAAADTMAAAAAAAARMwAAAAAAAAAAAAANMwAAAAAAAA0zAAAAAAAABAAAACAgICANMwAAAAAAAA8zAAAAAAAAAAAAAA8zAAAAAAAAEDMAAAAAAAAAAAAAEDMAAAAAAAARMwAAAAAAAAAAAAARMwAAAAAAABIzAAAAAAAAAAAAAA0zAAAAAAAADTMAAAAAAAACAAAAICANMwAAAAAAABEzAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADDMAAAAAAAAMMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1913,
					2,
					"left_delete",
					null,
					"AgAAAA8zAAAAAAAADzMAAAAAAAACAAAAICANMwAAAAAAAA0zAAAAAAAAAgAAACAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAETMAAAAAAAARMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1919,
					2,
					"right_delete",
					null,
					"AgAAACQzAAAAAAAAJDMAAAAAAAArAAAAMi4gQ29udGFjdCBjb2hvcnQocykgYWJvdXQgaXNzdWVzIHdpdGggZGF0YSQzAAAAAAAAJDMAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATzMAAAAAAAAkMwAAAAAAAAAAAAAAAAAA"
				],
				[
					1920,
					1,
					"right_delete",
					null,
					"AQAAACQzAAAAAAAAJDMAAAAAAAABAAAAMw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJDMAAAAAAAAkMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1921,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAACQzAAAAAAAAJTMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJDMAAAAAAAAkMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1923,
					1,
					"left_delete",
					null,
					"AQAAAEMzAAAAAAAAQzMAAAAAAAABAAAANA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARDMAAAAAAABEMwAAAAAAAAAAAAAAABxA"
				],
				[
					1924,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAEMzAAAAAAAARDMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQzMAAAAAAABDMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1926,
					1,
					"insert",
					{
						"characters": "\n3."
					},
					"AwAAAHQzAAAAAAAAdTMAAAAAAAAAAAAAdTMAAAAAAAB2MwAAAAAAAAAAAAB2MwAAAAAAAHczAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdDMAAAAAAAB0MwAAAAAAAP///////+9/"
				],
				[
					1927,
					1,
					"insert",
					{
						"characters": " Non-linea"
					},
					"CgAAAHczAAAAAAAAeDMAAAAAAAAAAAAAeDMAAAAAAAB5MwAAAAAAAAAAAAB5MwAAAAAAAHozAAAAAAAAAAAAAHozAAAAAAAAezMAAAAAAAAAAAAAezMAAAAAAAB8MwAAAAAAAAAAAAB8MwAAAAAAAH0zAAAAAAAAAAAAAH0zAAAAAAAAfjMAAAAAAAAAAAAAfjMAAAAAAAB/MwAAAAAAAAAAAAB/MwAAAAAAAIAzAAAAAAAAAAAAAIAzAAAAAAAAgTMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdzMAAAAAAAB3MwAAAAAAAAAAAAAAAPC/"
				],
				[
					1928,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAIEzAAAAAAAAgjMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgTMAAAAAAACBMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1929,
					1,
					"insert",
					{
						"characters": " exposure-outcome"
					},
					"EQAAAIIzAAAAAAAAgzMAAAAAAAAAAAAAgzMAAAAAAACEMwAAAAAAAAAAAACEMwAAAAAAAIUzAAAAAAAAAAAAAIUzAAAAAAAAhjMAAAAAAAAAAAAAhjMAAAAAAACHMwAAAAAAAAAAAACHMwAAAAAAAIgzAAAAAAAAAAAAAIgzAAAAAAAAiTMAAAAAAAAAAAAAiTMAAAAAAACKMwAAAAAAAAAAAACKMwAAAAAAAIszAAAAAAAAAAAAAIszAAAAAAAAjDMAAAAAAAAAAAAAjDMAAAAAAACNMwAAAAAAAAAAAACNMwAAAAAAAI4zAAAAAAAAAAAAAI4zAAAAAAAAjzMAAAAAAAAAAAAAjzMAAAAAAACQMwAAAAAAAAAAAACQMwAAAAAAAJEzAAAAAAAAAAAAAJEzAAAAAAAAkjMAAAAAAAAAAAAAkjMAAAAAAACTMwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgjMAAAAAAACCMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1930,
					1,
					"insert",
					{
						"characters": " associations"
					},
					"DQAAAJMzAAAAAAAAlDMAAAAAAAAAAAAAlDMAAAAAAACVMwAAAAAAAAAAAACVMwAAAAAAAJYzAAAAAAAAAAAAAJYzAAAAAAAAlzMAAAAAAAAAAAAAlzMAAAAAAACYMwAAAAAAAAAAAACYMwAAAAAAAJkzAAAAAAAAAAAAAJkzAAAAAAAAmjMAAAAAAAAAAAAAmjMAAAAAAACbMwAAAAAAAAAAAACbMwAAAAAAAJwzAAAAAAAAAAAAAJwzAAAAAAAAnTMAAAAAAAAAAAAAnTMAAAAAAACeMwAAAAAAAAAAAACeMwAAAAAAAJ8zAAAAAAAAAAAAAJ8zAAAAAAAAoDMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkzMAAAAAAACTMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1932,
					3,
					"right_delete",
					null,
					"AwAAABIzAAAAAAAAEjMAAAAAAAABAAAAChIzAAAAAAAAEjMAAAAAAAABAAAAChIzAAAAAAAAEjMAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEjMAAAAAAAASMwAAAAAAAAAAAAAA0HJA"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAABoRAAAAAAAAGxEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoRAAAAAAAAGhEAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAABoRAAAAAAAAGhEAAAAAAAABAAAAIw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsRAAAAAAAAGxEAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFsSAAAAAAAAXBIAAAAAAAAAAAAAXBIAAAAAAABdEgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsSAAAAAAAAWxIAAAAAAAAAAAAAAAAcQA"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "Descriptive"
					},
					"CwAAAFwSAAAAAAAAXRIAAAAAAAAAAAAAXRIAAAAAAABeEgAAAAAAAAAAAABeEgAAAAAAAF8SAAAAAAAAAAAAAF8SAAAAAAAAYBIAAAAAAAAAAAAAYBIAAAAAAABhEgAAAAAAAAAAAABhEgAAAAAAAGISAAAAAAAAAAAAAGISAAAAAAAAYxIAAAAAAAAAAAAAYxIAAAAAAABkEgAAAAAAAAAAAABkEgAAAAAAAGUSAAAAAAAAAAAAAGUSAAAAAAAAZhIAAAAAAAAAAAAAZhIAAAAAAABnEgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwSAAAAAAAAXBIAAAAAAAAAAAAAAAAAAA"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " statistocs"
					},
					"CwAAAGcSAAAAAAAAaBIAAAAAAAAAAAAAaBIAAAAAAABpEgAAAAAAAAAAAABpEgAAAAAAAGoSAAAAAAAAAAAAAGoSAAAAAAAAaxIAAAAAAAAAAAAAaxIAAAAAAABsEgAAAAAAAAAAAABsEgAAAAAAAG0SAAAAAAAAAAAAAG0SAAAAAAAAbhIAAAAAAAAAAAAAbhIAAAAAAABvEgAAAAAAAAAAAABvEgAAAAAAAHASAAAAAAAAAAAAAHASAAAAAAAAcRIAAAAAAAAAAAAAcRIAAAAAAAByEgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcSAAAAAAAAZxIAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					3,
					"left_delete",
					null,
					"AwAAAHESAAAAAAAAcRIAAAAAAAABAAAAc3ASAAAAAAAAcBIAAAAAAAABAAAAY28SAAAAAAAAbxIAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHISAAAAAAAAchIAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAG8SAAAAAAAAcBIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8SAAAAAAAAbxIAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAHASAAAAAAAAcRIAAAAAAAAAAAAAcRIAAAAAAAByEgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHASAAAAAAAAcBIAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					2,
					"left_delete",
					null,
					"AgAAAHESAAAAAAAAcRIAAAAAAAABAAAAc3ASAAAAAAAAcBIAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHISAAAAAAAAchIAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "cs"
					},
					"AgAAAHASAAAAAAAAcRIAAAAAAAAAAAAAcRIAAAAAAAByEgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHASAAAAAAAAcBIAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "##"
					},
					"AgAAAFwSAAAAAAAAXRIAAAAAAAAAAAAAXRIAAAAAAABeEgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwSAAAAAAAAXBIAAAAAAAAAAAAAAAAAAA"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAF0SAAAAAAAAXRIAAAAAAAABAAAAIw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4SAAAAAAAAXhIAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF0SAAAAAAAAXhIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0SAAAAAAAAXRIAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAHYSAAAAAAAAdxIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYSAAAAAAAAdhIAAAAAAAAAAAAAAAAAAA"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAIoSAAAAAAAAixIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoSAAAAAAAAihIAAAAAAAAAAAAAAAAcQA"
				],
				[
					42,
					4,
					"right_delete",
					null,
					"BAAAAHYSAAAAAAAAdhIAAAAAAAARAAAAIyMgTmF0dXJhbCBzcGFjZXN2EgAAAAAAAHYSAAAAAAAAAQAAAAp2EgAAAAAAAHYSAAAAAAAAAQAAAAp2EgAAAAAAAHYSAAAAAAAAAQAAACM",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcSAAAAAAAAdhIAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					3,
					"right_delete",
					null,
					"AwAAABoVAAAAAAAAGhUAAAAAAABZAAAAIyBBaXIgcG9sbHV0aW9uClRoZXJlIG9ubHkgYXBwZWFycyB0byBiZSBwcmVnbmFuY3kgZGF0YSAtIGRvIHlvdSB0aGluayB0aGlzIGlzIGNvcnJlY3Q/ICAaFQAAAAAAABoVAAAAAAAAAQAAAAoaFQAAAAAAABoVAAAAAAAAAQAAAAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMVAAAAAAAAGhUAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					2,
					"right_delete",
					null,
					"AgAAADkWAAAAAAAAORYAAAAAAAAUAAAAIyBSb2FkIHRyYWZmaWMgbm9pc2U5FgAAAAAAADkWAAAAAAAAAQAAAAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0WAAAAAAAAORYAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"cut",
					null,
					"AQAAANQXAAAAAAAA1BcAAAAAAAAZAAAAIyMgTWVhbiBidWlsZGxpbmcgZGVuc2l0eQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0XAAAAAAAA1BcAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"paste",
					null,
					"AgAAAA4XAAAAAAAAJxcAAAAAAAAAAAAAJxcAAAAAAAAnFwAAAAAAAAoAAAAjIExhbmQgdXNl",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgXAAAAAAAADhcAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					3,
					"right_delete",
					null,
					"AwAAAGIXAAAAAAAAYhcAAAAAAAB/AAAASSBoYWQgdG8gc2VuZCBhbiBhZGRpdGlvbmFsIHJlcXVlc3QgYXMgdGhleSB3ZXJlbid0IGluY2x1ZGVkIGluIHRoZSBvcmlnaW5hbCBhcHBsaWNhdGlvbiAodGhleSB3ZXJlIHN1Z2dlc3RlZCBsYXRlciBieSBQYXlhbSkgIGIXAAAAAAAAYhcAAAAAAAABAAAACmIXAAAAAAAAYhcAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIXAAAAAAAA4RcAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAHQSAAAAAAAAdRIAAAAAAAAAAAAAdRIAAAAAAAB2EgAAAAAAAAAAAAB2EgAAAAAAAHcSAAAAAAAAAAAAAHcSAAAAAAAAeBIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQSAAAAAAAAdBIAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " exapl"
					},
					"BgAAAHgSAAAAAAAAeRIAAAAAAAAAAAAAeRIAAAAAAAB6EgAAAAAAAAAAAAB6EgAAAAAAAHsSAAAAAAAAAAAAAHsSAAAAAAAAfBIAAAAAAAAAAAAAfBIAAAAAAAB9EgAAAAAAAAAAAAB9EgAAAAAAAH4SAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgSAAAAAAAAeBIAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					3,
					"left_delete",
					null,
					"AwAAAH0SAAAAAAAAfRIAAAAAAAABAAAAbHwSAAAAAAAAfBIAAAAAAAABAAAAcHsSAAAAAAAAexIAAAAAAAABAAAAYQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4SAAAAAAAAfhIAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "posures"
					},
					"BwAAAHsSAAAAAAAAfBIAAAAAAAAAAAAAfBIAAAAAAAB9EgAAAAAAAAAAAAB9EgAAAAAAAH4SAAAAAAAAAAAAAH4SAAAAAAAAfxIAAAAAAAAAAAAAfxIAAAAAAACAEgAAAAAAAAAAAACAEgAAAAAAAIESAAAAAAAAAAAAAIESAAAAAAAAghIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsSAAAAAAAAexIAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "Desr"
					},
					"BAAAAIYkAAAAAAAAhyQAAAAAAAAAAAAAhyQAAAAAAACIJAAAAAAAAAAAAACIJAAAAAAAAIkkAAAAAAAAAAAAAIkkAAAAAAAAiiQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYkAAAAAAAAhiQAAAAAAAAAAAAAAADwvw"
				],
				[
					72,
					1,
					"left_delete",
					null,
					"AQAAAIkkAAAAAAAAiSQAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIokAAAAAAAAiiQAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "cri[tive"
					},
					"CAAAAIkkAAAAAAAAiiQAAAAAAAAAAAAAiiQAAAAAAACLJAAAAAAAAAAAAACLJAAAAAAAAIwkAAAAAAAAAAAAAIwkAAAAAAAAjSQAAAAAAAAAAAAAjSQAAAAAAACOJAAAAAAAAAAAAACOJAAAAAAAAI8kAAAAAAAAAAAAAI8kAAAAAAAAkCQAAAAAAAAAAAAAkCQAAAAAAACRJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkkAAAAAAAAiSQAAAAAAAAAAAAAAADwvw"
				],
				[
					74,
					5,
					"left_delete",
					null,
					"BQAAAJAkAAAAAAAAkCQAAAAAAAABAAAAZY8kAAAAAAAAjyQAAAAAAAABAAAAdo4kAAAAAAAAjiQAAAAAAAABAAAAaY0kAAAAAAAAjSQAAAAAAAABAAAAdIwkAAAAAAAAjCQAAAAAAAABAAAAWw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEkAAAAAAAAkSQAAAAAAAAAAAAAAADwvw"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAIwkAAAAAAAAjSQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwkAAAAAAAAjCQAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"left_delete",
					null,
					"AQAAAIwkAAAAAAAAjCQAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0kAAAAAAAAjSQAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "ptive"
					},
					"BQAAAIwkAAAAAAAAjSQAAAAAAAAAAAAAjSQAAAAAAACOJAAAAAAAAAAAAACOJAAAAAAAAI8kAAAAAAAAAAAAAI8kAAAAAAAAkCQAAAAAAAAAAAAAkCQAAAAAAACRJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwkAAAAAAAAjCQAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " statistics"
					},
					"CwAAAJEkAAAAAAAAkiQAAAAAAAAAAAAAkiQAAAAAAACTJAAAAAAAAAAAAACTJAAAAAAAAJQkAAAAAAAAAAAAAJQkAAAAAAAAlSQAAAAAAAAAAAAAlSQAAAAAAACWJAAAAAAAAAAAAACWJAAAAAAAAJckAAAAAAAAAAAAAJckAAAAAAAAmCQAAAAAAAAAAAAAmCQAAAAAAACZJAAAAAAAAAAAAACZJAAAAAAAAJokAAAAAAAAAAAAAJokAAAAAAAAmyQAAAAAAAAAAAAAmyQAAAAAAACcJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEkAAAAAAAAkSQAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAJwkAAAAAAAAnSQAAAAAAAAAAAAAnSQAAAAAAACeJAAAAAAAAAAAAACeJAAAAAAAAJ8kAAAAAAAAAAAAAJ8kAAAAAAAAoCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwkAAAAAAAAnCQAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": " outcome:"
					},
					"CQAAAKAkAAAAAAAAoSQAAAAAAAAAAAAAoSQAAAAAAACiJAAAAAAAAAAAAACiJAAAAAAAAKMkAAAAAAAAAAAAAKMkAAAAAAAApCQAAAAAAAAAAAAApCQAAAAAAAClJAAAAAAAAAAAAAClJAAAAAAAAKYkAAAAAAAAAAAAAKYkAAAAAAAApyQAAAAAAAAAAAAApyQAAAAAAACoJAAAAAAAAAAAAACoJAAAAAAAAKkkAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKAkAAAAAAAAoCQAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKkkAAAAAAAAqiQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkkAAAAAAAAqSQAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"right_delete",
					null,
					"AQAAAKokAAAAAAAAqiQAAAAAAAABAAAAUA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKokAAAAAAAAqiQAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAKokAAAAAAAAqyQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKokAAAAAAAAqiQAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "Associat"
					},
					"CAAAALknAAAAAAAAuicAAAAAAAAAAAAAuicAAAAAAAC7JwAAAAAAAAAAAAC7JwAAAAAAALwnAAAAAAAAAAAAALwnAAAAAAAAvScAAAAAAAAAAAAAvScAAAAAAAC+JwAAAAAAAAAAAAC+JwAAAAAAAL8nAAAAAAAAAAAAAL8nAAAAAAAAwCcAAAAAAAAAAAAAwCcAAAAAAADBJwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALknAAAAAAAAuScAAAAAAAAAAAAAAADwvw"
				],
				[
					87,
					8,
					"left_delete",
					null,
					"CAAAAMAnAAAAAAAAwCcAAAAAAAABAAAAdL8nAAAAAAAAvycAAAAAAAABAAAAYb4nAAAAAAAAvicAAAAAAAABAAAAab0nAAAAAAAAvScAAAAAAAABAAAAY7wnAAAAAAAAvCcAAAAAAAABAAAAb7snAAAAAAAAuycAAAAAAAABAAAAc7onAAAAAAAAuicAAAAAAAABAAAAc7knAAAAAAAAuScAAAAAAAABAAAAQQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEnAAAAAAAAwScAAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "Sind"
					},
					"BAAAALknAAAAAAAAuicAAAAAAAAAAAAAuicAAAAAAAC7JwAAAAAAAAAAAAC7JwAAAAAAALwnAAAAAAAAAAAAALwnAAAAAAAAvScAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALknAAAAAAAAuScAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"left_delete",
					null,
					"AQAAALwnAAAAAAAAvCcAAAAAAAABAAAAZA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0nAAAAAAAAvScAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "gele"
					},
					"BAAAALwnAAAAAAAAvScAAAAAAAAAAAAAvScAAAAAAAC+JwAAAAAAAAAAAAC+JwAAAAAAAL8nAAAAAAAAAAAAAL8nAAAAAAAAwCcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwnAAAAAAAAvCcAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					3,
					"left_delete",
					null,
					"AwAAAL8nAAAAAAAAvycAAAAAAAABAAAAZb4nAAAAAAAAvicAAAAAAAABAAAAbL0nAAAAAAAAvScAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAnAAAAAAAAwCcAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "le"
					},
					"AgAAAL0nAAAAAAAAvicAAAAAAAAAAAAAvicAAAAAAAC/JwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0nAAAAAAAAvScAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL8nAAAAAAAAwCcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8nAAAAAAAAvycAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					1,
					"right_delete",
					null,
					"AQAAAMAnAAAAAAAAwCcAAAAAAAABAAAARQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAnAAAAAAAAwCcAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAMAnAAAAAAAAwScAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAnAAAAAAAAwCcAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMgnAAAAAAAAyScAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgnAAAAAAAAyCcAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMonAAAAAAAAyycAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMonAAAAAAAAyicAAAAAAAAAAAAAAADwvw"
				],
				[
					102,
					13,
					"left_delete",
					null,
					"DQAAAN4nAAAAAAAA3icAAAAAAAABAAAAc90nAAAAAAAA3ScAAAAAAAABAAAAbtwnAAAAAAAA3CcAAAAAAAABAAAAb9snAAAAAAAA2ycAAAAAAAABAAAAadonAAAAAAAA2icAAAAAAAABAAAAdNknAAAAAAAA2ScAAAAAAAABAAAAYdgnAAAAAAAA2CcAAAAAAAABAAAAadcnAAAAAAAA1ycAAAAAAAABAAAAY9YnAAAAAAAA1icAAAAAAAABAAAAb9UnAAAAAAAA1ScAAAAAAAABAAAAc9QnAAAAAAAA1CcAAAAAAAABAAAAc9MnAAAAAAAA0ycAAAAAAAABAAAAYdInAAAAAAAA0icAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8nAAAAAAAA3ycAAAAAAAD////////vfw"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "\n4."
					},
					"AwAAANgyAAAAAAAA2TIAAAAAAAAAAAAA2TIAAAAAAADaMgAAAAAAAAAAAADaMgAAAAAAANsyAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgyAAAAAAAA2DIAAAAAAAAAAAAAAHB1QA"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " Meeting"
					},
					"CAAAANsyAAAAAAAA3DIAAAAAAAAAAAAA3DIAAAAAAADdMgAAAAAAAAAAAADdMgAAAAAAAN4yAAAAAAAAAAAAAN4yAAAAAAAA3zIAAAAAAAAAAAAA3zIAAAAAAADgMgAAAAAAAAAAAADgMgAAAAAAAOEyAAAAAAAAAAAAAOEyAAAAAAAA4jIAAAAAAAAAAAAA4jIAAAAAAADjMgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsyAAAAAAAA2zIAAAAAAAAAAAAAAADwvw"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " with"
					},
					"BQAAAOMyAAAAAAAA5DIAAAAAAAAAAAAA5DIAAAAAAADlMgAAAAAAAAAAAADlMgAAAAAAAOYyAAAAAAAAAAAAAOYyAAAAAAAA5zIAAAAAAAAAAAAA5zIAAAAAAADoMgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMyAAAAAAAA4zIAAAAAAAAAAAAAAADwvw"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": " IS"
					},
					"AwAAAOgyAAAAAAAA6TIAAAAAAAAAAAAA6TIAAAAAAADqMgAAAAAAAAAAAADqMgAAAAAAAOsyAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgyAAAAAAAA6DIAAAAAAAAAAAAAAADwvw"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " Global"
					},
					"BwAAAOsyAAAAAAAA7DIAAAAAAAAAAAAA7DIAAAAAAADtMgAAAAAAAAAAAADtMgAAAAAAAO4yAAAAAAAAAAAAAO4yAAAAAAAA7zIAAAAAAAAAAAAA7zIAAAAAAADwMgAAAAAAAAAAAADwMgAAAAAAAPEyAAAAAAAAAAAAAPEyAAAAAAAA8jIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsyAAAAAAAA6zIAAAAAAAAAAAAAAADwvw"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "\n5."
					},
					"AwAAAPIyAAAAAAAA8zIAAAAAAAAAAAAA8zIAAAAAAAD0MgAAAAAAAAAAAAD0MgAAAAAAAPUyAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIyAAAAAAAA8jIAAAAAAAAAAAAAAADwvw"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPUyAAAAAAAA9jIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUyAAAAAAAA9TIAAAAAAAAAAAAAAADwvw"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": " collaborators"
					},
					"DgAAAPIyAAAAAAAA8zIAAAAAAAAAAAAA8zIAAAAAAAD0MgAAAAAAAAAAAAD0MgAAAAAAAPUyAAAAAAAAAAAAAPUyAAAAAAAA9jIAAAAAAAAAAAAA9jIAAAAAAAD3MgAAAAAAAAAAAAD3MgAAAAAAAPgyAAAAAAAAAAAAAPgyAAAAAAAA+TIAAAAAAAAAAAAA+TIAAAAAAAD6MgAAAAAAAAAAAAD6MgAAAAAAAPsyAAAAAAAAAAAAAPsyAAAAAAAA/DIAAAAAAAAAAAAA/DIAAAAAAAD9MgAAAAAAAAAAAAD9MgAAAAAAAP4yAAAAAAAAAAAAAP4yAAAAAAAA/zIAAAAAAAAAAAAA/zIAAAAAAAAAMwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIyAAAAAAAA8jIAAAAAAAD////////vfw"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "Dag"
					},
					"AwAAAAQzAAAAAAAABTMAAAAAAAAAAAAABTMAAAAAAAAGMwAAAAAAAAAAAAAGMwAAAAAAAAczAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQzAAAAAAAABDMAAAAAAAAAAAAAABBxQA"
				],
				[
					120,
					2,
					"left_delete",
					null,
					"AgAAAAYzAAAAAAAABjMAAAAAAAABAAAAZwUzAAAAAAAABTMAAAAAAAABAAAAYQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAczAAAAAAAABzMAAAAAAAAAAAAAAADwvw"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "AG'"
					},
					"AwAAAAUzAAAAAAAABjMAAAAAAAAAAAAABjMAAAAAAAAHMwAAAAAAAAAAAAAHMwAAAAAAAAgzAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUzAAAAAAAABTMAAAAAAAAAAAAAAADwvw"
				],
				[
					122,
					1,
					"left_delete",
					null,
					"AQAAAAczAAAAAAAABzMAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgzAAAAAAAACDMAAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAAczAAAAAAAACDMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAczAAAAAAAABzMAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAAgzAAAAAAAACTMAAAAAAAAAAAAACTMAAAAAAAAKMwAAAAAAAAAAAAAKMwAAAAAAAAszAAAAAAAAAAAAAAszAAAAAAAADDMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgzAAAAAAAACDMAAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " each"
					},
					"BQAAAAwzAAAAAAAADTMAAAAAAAAAAAAADTMAAAAAAAAOMwAAAAAAAAAAAAAOMwAAAAAAAA8zAAAAAAAAAAAAAA8zAAAAAAAAEDMAAAAAAAAAAAAAEDMAAAAAAAARMwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwzAAAAAAAADDMAAAAAAAAAAAAAAADwvw"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " es"
					},
					"AwAAABEzAAAAAAAAEjMAAAAAAAAAAAAAEjMAAAAAAAATMwAAAAAAAAAAAAATMwAAAAAAABQzAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEzAAAAAAAAETMAAAAAAAAAAAAAAADwvw"
				],
				[
					127,
					1,
					"left_delete",
					null,
					"AQAAABMzAAAAAAAAEzMAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQzAAAAAAAAFDMAAAAAAAAAAAAAAADwvw"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "xposure-outcome"
					},
					"DwAAABMzAAAAAAAAFDMAAAAAAAAAAAAAFDMAAAAAAAAVMwAAAAAAAAAAAAAVMwAAAAAAABYzAAAAAAAAAAAAABYzAAAAAAAAFzMAAAAAAAAAAAAAFzMAAAAAAAAYMwAAAAAAAAAAAAAYMwAAAAAAABkzAAAAAAAAAAAAABkzAAAAAAAAGjMAAAAAAAAAAAAAGjMAAAAAAAAbMwAAAAAAAAAAAAAbMwAAAAAAABwzAAAAAAAAAAAAABwzAAAAAAAAHTMAAAAAAAAAAAAAHTMAAAAAAAAeMwAAAAAAAAAAAAAeMwAAAAAAAB8zAAAAAAAAAAAAAB8zAAAAAAAAIDMAAAAAAAAAAAAAIDMAAAAAAAAhMwAAAAAAAAAAAAAhMwAAAAAAACIzAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMzAAAAAAAAEzMAAAAAAAAAAAAAAADwvw"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": " combintation"
					},
					"DQAAACIzAAAAAAAAIzMAAAAAAAAAAAAAIzMAAAAAAAAkMwAAAAAAAAAAAAAkMwAAAAAAACUzAAAAAAAAAAAAACUzAAAAAAAAJjMAAAAAAAAAAAAAJjMAAAAAAAAnMwAAAAAAAAAAAAAnMwAAAAAAACgzAAAAAAAAAAAAACgzAAAAAAAAKTMAAAAAAAAAAAAAKTMAAAAAAAAqMwAAAAAAAAAAAAAqMwAAAAAAACszAAAAAAAAAAAAACszAAAAAAAALDMAAAAAAAAAAAAALDMAAAAAAAAtMwAAAAAAAAAAAAAtMwAAAAAAAC4zAAAAAAAAAAAAAC4zAAAAAAAALzMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIzAAAAAAAAIjMAAAAAAAAAAAAAAADwvw"
				],
				[
					130,
					6,
					"left_delete",
					null,
					"BgAAAC4zAAAAAAAALjMAAAAAAAABAAAAbi0zAAAAAAAALTMAAAAAAAABAAAAbywzAAAAAAAALDMAAAAAAAABAAAAaSszAAAAAAAAKzMAAAAAAAABAAAAdCozAAAAAAAAKjMAAAAAAAABAAAAYSkzAAAAAAAAKTMAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8zAAAAAAAALzMAAAAAAAAAAAAAAADwvw"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "atiuo"
					},
					"BQAAACkzAAAAAAAAKjMAAAAAAAAAAAAAKjMAAAAAAAArMwAAAAAAAAAAAAArMwAAAAAAACwzAAAAAAAAAAAAACwzAAAAAAAALTMAAAAAAAAAAAAALTMAAAAAAAAuMwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkzAAAAAAAAKTMAAAAAAAAAAAAAAADwvw"
				],
				[
					132,
					2,
					"left_delete",
					null,
					"AgAAAC0zAAAAAAAALTMAAAAAAAABAAAAbywzAAAAAAAALDMAAAAAAAABAAAAdQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4zAAAAAAAALjMAAAAAAAAAAAAAAADwvw"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "on"
					},
					"AgAAACwzAAAAAAAALTMAAAAAAAAAAAAALTMAAAAAAAAuMwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwzAAAAAAAALDMAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"left_delete",
					null,
					"AQAAAC0zAAAAAAAALTMAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4zAAAAAAAALjMAAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAC0zAAAAAAAALjMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0zAAAAAAAALTMAAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					12,
					"left_delete",
					null,
					"DAAAAC0zAAAAAAAALTMAAAAAAAABAAAAcywzAAAAAAAALDMAAAAAAAABAAAAbyszAAAAAAAAKzMAAAAAAAABAAAAaSozAAAAAAAAKjMAAAAAAAABAAAAdCkzAAAAAAAAKTMAAAAAAAABAAAAYSgzAAAAAAAAKDMAAAAAAAABAAAAbiczAAAAAAAAJzMAAAAAAAABAAAAaSYzAAAAAAAAJjMAAAAAAAABAAAAYiUzAAAAAAAAJTMAAAAAAAABAAAAbSQzAAAAAAAAJDMAAAAAAAABAAAAbyMzAAAAAAAAIzMAAAAAAAABAAAAYyIzAAAAAAAAIjMAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4zAAAAAAAALjMAAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					16,
					"left_delete",
					null,
					"EAAAACEzAAAAAAAAITMAAAAAAAABAAAAZSAzAAAAAAAAIDMAAAAAAAABAAAAbR8zAAAAAAAAHzMAAAAAAAABAAAAbx4zAAAAAAAAHjMAAAAAAAABAAAAYx0zAAAAAAAAHTMAAAAAAAABAAAAdBwzAAAAAAAAHDMAAAAAAAABAAAAdRszAAAAAAAAGzMAAAAAAAABAAAAbxozAAAAAAAAGjMAAAAAAAABAAAALRkzAAAAAAAAGTMAAAAAAAABAAAAZRgzAAAAAAAAGDMAAAAAAAABAAAAchczAAAAAAAAFzMAAAAAAAABAAAAdRYzAAAAAAAAFjMAAAAAAAABAAAAcxUzAAAAAAAAFTMAAAAAAAABAAAAbxQzAAAAAAAAFDMAAAAAAAABAAAAcBMzAAAAAAAAEzMAAAAAAAABAAAAeBIzAAAAAAAAEjMAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIzAAAAAAAAIjMAAAAAAAAAAAAAAADwvw"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "class"
					},
					"BQAAABIzAAAAAAAAEzMAAAAAAAAAAAAAEzMAAAAAAAAUMwAAAAAAAAAAAAAUMwAAAAAAABUzAAAAAAAAAAAAABUzAAAAAAAAFjMAAAAAAAAAAAAAFjMAAAAAAAAXMwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIzAAAAAAAAEjMAAAAAAAAAAAAAAADwvw"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAABczAAAAAAAAGDMAAAAAAAAAAAAAGDMAAAAAAAAZMwAAAAAAAAAAAAAZMwAAAAAAABozAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABczAAAAAAAAFzMAAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAABozAAAAAAAAGzMAAAAAAAAAAAAAGzMAAAAAAAAcMwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABozAAAAAAAAGjMAAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"left_delete",
					null,
					"AQAAABszAAAAAAAAGzMAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwzAAAAAAAAHDMAAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "exposure"
					},
					"CAAAABszAAAAAAAAHDMAAAAAAAAAAAAAHDMAAAAAAAAdMwAAAAAAAAAAAAAdMwAAAAAAAB4zAAAAAAAAAAAAAB4zAAAAAAAAHzMAAAAAAAAAAAAAHzMAAAAAAAAgMwAAAAAAAAAAAAAgMwAAAAAAACEzAAAAAAAAAAAAACEzAAAAAAAAIjMAAAAAAAAAAAAAIjMAAAAAAAAjMwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABszAAAAAAAAGzMAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					8,
					"left_delete",
					null,
					"CAAAAJMQAAAAAAAAkxAAAAAAAAABAAAAIJIQAAAAAAAAkhAAAAAAAAABAAAALJEQAAAAAAAAkRAAAAAAAAABAAAAIpAQAAAAAAAAkBAAAAAAAAABAAAAUo8QAAAAAAAAjxAAAAAAAAABAAAATo4QAAAAAAAAjhAAAAAAAAABAAAARY0QAAAAAAAAjRAAAAAAAAABAAAAR4wQAAAAAAAAjBAAAAAAAAABAAAAIg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUEAAAAAAAAJQQAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"left_delete",
					null,
					"AQAAACEOAAAAAAAAIQ4AAAAAAAAIAAAAIkVERU4iLCA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApDgAAAAAAACEOAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA4OAAAAAAAADw4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAODgAAAAAAAA4OAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAA8OAAAAAAAAEQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPDgAAAAAAAA8OAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "DNBC"
					},
					"BAAAABAOAAAAAAAAEQ4AAAAAAAAAAAAAEQ4AAAAAAAASDgAAAAAAAAAAAAASDgAAAAAAABMOAAAAAAAAAAAAABMOAAAAAAAAFA4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQDgAAAAAAABAOAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABUOAAAAAAAAFg4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVDgAAAAAAABUOAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAHAOAAAAAAAAcQ4AAAAAAAAAAAAAcQ4AAAAAAAByDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwDgAAAAAAAHAOAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"paste",
					null,
					"AQAAAHIOAAAAAAAAfA4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByDgAAAAAAAHIOAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "$cohort"
					},
					"BwAAAHwOAAAAAAAAfQ4AAAAAAAAAAAAAfQ4AAAAAAAB+DgAAAAAAAAAAAAB+DgAAAAAAAH8OAAAAAAAAAAAAAH8OAAAAAAAAgA4AAAAAAAAAAAAAgA4AAAAAAACBDgAAAAAAAAAAAACBDgAAAAAAAIIOAAAAAAAAAAAAAIIOAAAAAAAAgw4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8DgAAAAAAAHwOAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"paste",
					null,
					"AgAAAHIOAAAAAAAAgA4AAAAAAAAAAAAAgA4AAAAAAACADgAAAAAAAAoAAABkZXNjX2NsZWFu",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8DgAAAAAAAHIOAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "$categ"
					},
					"BgAAAIAOAAAAAAAAgQ4AAAAAAAAAAAAAgQ4AAAAAAACCDgAAAAAAAAAAAACCDgAAAAAAAIMOAAAAAAAAAAAAAIMOAAAAAAAAhA4AAAAAAAAAAAAAhA4AAAAAAACFDgAAAAAAAAAAAACFDgAAAAAAAIYOAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACADgAAAAAAAIAOAAAAAAAAAAAAAAAA8L8"
				],
				[
					143,
					1,
					"insert_completion",
					{
						"completion": "categorical",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "categorical"
					},
					"AgAAAIEOAAAAAAAAgQ4AAAAAAAAFAAAAY2F0ZWeBDgAAAAAAAIwOAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGDgAAAAAAAIYOAAAAAAAAAAAAAAAA8L8"
				],
				[
					160,
					1,
					"paste",
					null,
					"AgAAAHIOAAAAAAAAgQ4AAAAAAAAAAAAAgQ4AAAAAAACBDgAAAAAAABoAAABleHBvc3VyZXMuZGVzYyRjYXRlZ29yaWNhbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMDgAAAAAAAHIOAAAAAAAAAAAAAAAA8L8"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "levels("
					},
					"BwAAAHIOAAAAAAAAcw4AAAAAAAAAAAAAcw4AAAAAAAB0DgAAAAAAAAAAAAB0DgAAAAAAAHUOAAAAAAAAAAAAAHUOAAAAAAAAdg4AAAAAAAAAAAAAdg4AAAAAAAB3DgAAAAAAAAAAAAB3DgAAAAAAAHgOAAAAAAAAAAAAAHgOAAAAAAAAeQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByDgAAAAAAAHIOAAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAI8OAAAAAAAAkA4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPDgAAAAAAAI8OAAAAAAAA////////738"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "_nawt"
					},
					"BQAAAI8OAAAAAAAAkA4AAAAAAAAAAAAAkA4AAAAAAACRDgAAAAAAAAAAAACRDgAAAAAAAJIOAAAAAAAAAAAAAJIOAAAAAAAAkw4AAAAAAAAAAAAAkw4AAAAAAACUDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPDgAAAAAAAI8OAAAAAAAAAAAAAAAA8L8"
				],
				[
					190,
					3,
					"left_delete",
					null,
					"AwAAAJMOAAAAAAAAkw4AAAAAAAABAAAAdJIOAAAAAAAAkg4AAAAAAAABAAAAd5EOAAAAAAAAkQ4AAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUDgAAAAAAAJQOAAAAAAAAAAAAAAAA8L8"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "eat"
					},
					"AwAAAJEOAAAAAAAAkg4AAAAAAAAAAAAAkg4AAAAAAACTDgAAAAAAAAAAAACTDgAAAAAAAJQOAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRDgAAAAAAAJEOAAAAAAAAAAAAAAAA8L8"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "class"
					},
					"BQAAAJYOAAAAAAAAlw4AAAAAAAAAAAAAlw4AAAAAAACYDgAAAAAAAAAAAACYDgAAAAAAAJkOAAAAAAAAAAAAAJkOAAAAAAAAmg4AAAAAAAAAAAAAmg4AAAAAAACbDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWDgAAAAAAAJYOAAAAAAAAAAAAAAAA8L8"
				],
				[
					195,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJsOAAAAAAAAnQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbDgAAAAAAAJsOAAAAAAAAAAAAAAAA8L8"
				],
				[
					204,
					1,
					"paste",
					null,
					"AQAAAJwOAAAAAAAAtw4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcDgAAAAAAAJwOAAAAAAAAAAAAAAAA8L8"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "str"
					},
					"BAAAAJYOAAAAAAAAlw4AAAAAAAAAAAAAlw4AAAAAAACXDgAAAAAAAAUAAABjbGFzc5cOAAAAAAAAmA4AAAAAAAAAAAAAmA4AAAAAAACZDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbDgAAAAAAAJYOAAAAAAAAAAAAAAAA8L8"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": " %>%"
					},
					"BAAAADwOAAAAAAAAPQ4AAAAAAAAAAAAAPQ4AAAAAAAA+DgAAAAAAAAAAAAA+DgAAAAAAAD8OAAAAAAAAAAAAAD8OAAAAAAAAQA4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8DgAAAAAAADwOAAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "\nmutate"
					},
					"CgAAAEAOAAAAAAAAQQ4AAAAAAAAAAAAAQQ4AAAAAAABFDgAAAAAAAAAAAABBDgAAAAAAAEEOAAAAAAAABAAAACAgICBBDgAAAAAAAEEOAAAAAAAAAAAAAEEOAAAAAAAAQg4AAAAAAAAAAAAAQg4AAAAAAABDDgAAAAAAAAAAAABDDgAAAAAAAEQOAAAAAAAAAAAAAEQOAAAAAAAARQ4AAAAAAAAAAAAARQ4AAAAAAABGDgAAAAAAAAAAAABGDgAAAAAAAEcOAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABADgAAAAAAAEAOAAAAAAAAAAAAAAAA8L8"
				],
				[
					219,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEcOAAAAAAAASQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHDgAAAAAAAEcOAAAAAAAAAAAAAAAA8L8"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": "cohort_neat"
					},
					"CwAAAEgOAAAAAAAASQ4AAAAAAAAAAAAASQ4AAAAAAABKDgAAAAAAAAAAAABKDgAAAAAAAEsOAAAAAAAAAAAAAEsOAAAAAAAATA4AAAAAAAAAAAAATA4AAAAAAABNDgAAAAAAAAAAAABNDgAAAAAAAE4OAAAAAAAAAAAAAE4OAAAAAAAATw4AAAAAAAAAAAAATw4AAAAAAABQDgAAAAAAAAAAAABQDgAAAAAAAFEOAAAAAAAAAAAAAFEOAAAAAAAAUg4AAAAAAAAAAAAAUg4AAAAAAABTDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIDgAAAAAAAEgOAAAAAAAAAAAAAAAA8L8"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFMOAAAAAAAAVA4AAAAAAAAAAAAAVA4AAAAAAABVDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTDgAAAAAAAFMOAAAAAAAAAAAAAAAA8L8"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": " factor"
					},
					"BwAAAFUOAAAAAAAAVg4AAAAAAAAAAAAAVg4AAAAAAABXDgAAAAAAAAAAAABXDgAAAAAAAFgOAAAAAAAAAAAAAFgOAAAAAAAAWQ4AAAAAAAAAAAAAWQ4AAAAAAABaDgAAAAAAAAAAAABaDgAAAAAAAFsOAAAAAAAAAAAAAFsOAAAAAAAAXA4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVDgAAAAAAAFUOAAAAAAAAAAAAAAAA8L8"
				],
				[
					223,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFwOAAAAAAAAXg4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcDgAAAAAAAFwOAAAAAAAAAAAAAAAA8L8"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "cohort_neat,"
					},
					"DAAAAF0OAAAAAAAAXg4AAAAAAAAAAAAAXg4AAAAAAABfDgAAAAAAAAAAAABfDgAAAAAAAGAOAAAAAAAAAAAAAGAOAAAAAAAAYQ4AAAAAAAAAAAAAYQ4AAAAAAABiDgAAAAAAAAAAAABiDgAAAAAAAGMOAAAAAAAAAAAAAGMOAAAAAAAAZA4AAAAAAAAAAAAAZA4AAAAAAABlDgAAAAAAAAAAAABlDgAAAAAAAGYOAAAAAAAAAAAAAGYOAAAAAAAAZw4AAAAAAAAAAAAAZw4AAAAAAABoDgAAAAAAAAAAAABoDgAAAAAAAGkOAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdDgAAAAAAAF0OAAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": " ordered"
					},
					"CAAAAGkOAAAAAAAAag4AAAAAAAAAAAAAag4AAAAAAABrDgAAAAAAAAAAAABrDgAAAAAAAGwOAAAAAAAAAAAAAGwOAAAAAAAAbQ4AAAAAAAAAAAAAbQ4AAAAAAABuDgAAAAAAAAAAAABuDgAAAAAAAG8OAAAAAAAAAAAAAG8OAAAAAAAAcA4AAAAAAAAAAAAAcA4AAAAAAABxDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpDgAAAAAAAGkOAAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAHEOAAAAAAAAcg4AAAAAAAAAAAAAcg4AAAAAAABzDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxDgAAAAAAAHEOAAAAAAAAAAAAAAAA8L8"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMOAAAAAAAAdA4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzDgAAAAAAAHMOAAAAAAAAAAAAAAAA8L8"
				],
				[
					228,
					2,
					"left_delete",
					null,
					"AgAAAHMOAAAAAAAAcw4AAAAAAAABAAAAIHIOAAAAAAAAcg4AAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0DgAAAAAAAHQOAAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAHIOAAAAAAAAcw4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByDgAAAAAAAHIOAAAAAAAAAAAAAAAA8L8"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": " TRUE"
					},
					"BQAAAHMOAAAAAAAAdA4AAAAAAAAAAAAAdA4AAAAAAAB1DgAAAAAAAAAAAAB1DgAAAAAAAHYOAAAAAAAAAAAAAHYOAAAAAAAAdw4AAAAAAAAAAAAAdw4AAAAAAAB4DgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzDgAAAAAAAHMOAAAAAAAAAAAAAAAA8L8"
				],
				[
					247,
					2,
					"left_delete",
					null,
					"AgAAALAOAAAAAAAAsA4AAAAAAABFAAAAbGV2ZWxzKHZpb2xpbi5wbG90RGF0YSRjb2hvcnRfbmVhdCkKc3RyKHZpb2xpbi5wbG90RGF0YSRjb2hvcnRfbmVhdCkKrw4AAAAAAACvDgAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1DgAAAAAAALAOAAAAAAAAAAAAAAAA8L8"
				],
				[
					253,
					1,
					"insert",
					{
						"characters": "eat"
					},
					"AwAAAD4IAAAAAAAAPwgAAAAAAAAAAAAAPwgAAAAAAABACAAAAAAAAAAAAABACAAAAAAAAEEIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+CAAAAAAAAD4IAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"right_delete",
					null,
					"AQAAAOAkAAAAAAAA4CQAAAAAAAAWAAAAOiBwb3N0bmF0YWwgZGVwcmVzc2lvbg",
					"AQAAAAAAAAABAAAA4CQAAAAAAAD2JAAAAAAAAP///////+9/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "Here"
					},
					"BAAAAOEkAAAAAAAA4iQAAAAAAAAAAAAA4iQAAAAAAADjJAAAAAAAAAAAAADjJAAAAAAAAOQkAAAAAAAAAAAAAOQkAAAAAAAA5SQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4SQAAAAAAADhJAAAAAAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAAOUkAAAAAAAA5iQAAAAAAAAAAAAA5iQAAAAAAADnJAAAAAAAAAAAAADnJAAAAAAAAOgkAAAAAAAAAAAAAOgkAAAAAAAA6SQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5SQAAAAAAADlJAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAOkkAAAAAAAA6iQAAAAAAAAAAAAA6iQAAAAAAADrJAAAAAAAAAAAAADrJAAAAAAAAOwkAAAAAAAAAAAAAOwkAAAAAAAA7SQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6SQAAAAAAADpJAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " frequencie"
					},
					"CwAAAO0kAAAAAAAA7iQAAAAAAAAAAAAA7iQAAAAAAADvJAAAAAAAAAAAAADvJAAAAAAAAPAkAAAAAAAAAAAAAPAkAAAAAAAA8SQAAAAAAAAAAAAA8SQAAAAAAADyJAAAAAAAAAAAAADyJAAAAAAAAPMkAAAAAAAAAAAAAPMkAAAAAAAA9CQAAAAAAAAAAAAA9CQAAAAAAAD1JAAAAAAAAAAAAAD1JAAAAAAAAPYkAAAAAAAAAAAAAPYkAAAAAAAA9yQAAAAAAAAAAAAA9yQAAAAAAAD4JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7SQAAAAAAADtJAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAPgkAAAAAAAA+SQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+CQAAAAAAAD4JAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAPkkAAAAAAAA+iQAAAAAAAAAAAAA+iQAAAAAAAD7JAAAAAAAAAAAAAD7JAAAAAAAAPwkAAAAAAAAAAAAAPwkAAAAAAAA/SQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+SQAAAAAAAD5JAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " postnatal"
					},
					"CgAAAP0kAAAAAAAA/iQAAAAAAAAAAAAA/iQAAAAAAAD/JAAAAAAAAAAAAAD/JAAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAASUAAAAAAAAAAAAAASUAAAAAAAACJQAAAAAAAAAAAAACJQAAAAAAAAMlAAAAAAAAAAAAAAMlAAAAAAAABCUAAAAAAAAAAAAABCUAAAAAAAAFJQAAAAAAAAAAAAAFJQAAAAAAAAYlAAAAAAAAAAAAAAYlAAAAAAAAByUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/SQAAAAAAAD9JAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " depresion"
					},
					"CgAAAAclAAAAAAAACCUAAAAAAAAAAAAACCUAAAAAAAAJJQAAAAAAAAAAAAAJJQAAAAAAAAolAAAAAAAAAAAAAAolAAAAAAAACyUAAAAAAAAAAAAACyUAAAAAAAAMJQAAAAAAAAAAAAAMJQAAAAAAAA0lAAAAAAAAAAAAAA0lAAAAAAAADiUAAAAAAAAAAAAADiUAAAAAAAAPJQAAAAAAAAAAAAAPJQAAAAAAABAlAAAAAAAAAAAAABAlAAAAAAAAESUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAByUAAAAAAAAHJQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					3,
					"left_delete",
					null,
					"AwAAABAlAAAAAAAAECUAAAAAAAABAAAAbg8lAAAAAAAADyUAAAAAAAABAAAAbw4lAAAAAAAADiUAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAESUAAAAAAAARJQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "sion."
					},
					"BQAAAA4lAAAAAAAADyUAAAAAAAAAAAAADyUAAAAAAAAQJQAAAAAAAAAAAAAQJQAAAAAAABElAAAAAAAAAAAAABElAAAAAAAAEiUAAAAAAAAAAAAAEiUAAAAAAAATJQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADiUAAAAAAAAOJQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABMlAAAAAAAAFCUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEyUAAAAAAAATJQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "We"
					},
					"AwAAABQlAAAAAAAAFSUAAAAAAAAAAAAAFSUAAAAAAAAVJQAAAAAAAGYAAABJIGFtIHdvcmtpbmcgd2l0aCBMdWlzZSB0byBjb2RlIHRoZSBETkJDIFBORCB2YXJpYWJsZS4gV2UgYXJlIGFsc28gd2FpdGluZyBmb3IKb3V0Y29tZSBkYXRhIGZvciBJTk1BLiAVJQAAAAAAABYlAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFCUAAAAAAAB6JQAAAAAAAAAAAAAAUHZA"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABYlAAAAAAAAFyUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFiUAAAAAAAAWJQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					2,
					"left_delete",
					null,
					"AgAAABYlAAAAAAAAFiUAAAAAAAABAAAAIBUlAAAAAAAAFSUAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAFyUAAAAAAAAXJQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAABUlAAAAAAAAFiUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFSUAAAAAAAAVJQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " need"
					},
					"BQAAABYlAAAAAAAAFyUAAAAAAAAAAAAAFyUAAAAAAAAYJQAAAAAAAAAAAAAYJQAAAAAAABklAAAAAAAAAAAAABklAAAAAAAAGiUAAAAAAAAAAAAAGiUAAAAAAAAbJQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFiUAAAAAAAAWJQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " dusc"
					},
					"BQAAABslAAAAAAAAHCUAAAAAAAAAAAAAHCUAAAAAAAAdJQAAAAAAAAAAAAAdJQAAAAAAAB4lAAAAAAAAAAAAAB4lAAAAAAAAHyUAAAAAAAAAAAAAHyUAAAAAAAAgJQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGyUAAAAAAAAbJQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					3,
					"left_delete",
					null,
					"AwAAAB8lAAAAAAAAHyUAAAAAAAABAAAAYx4lAAAAAAAAHiUAAAAAAAABAAAAcx0lAAAAAAAAHSUAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAICUAAAAAAAAgJQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "iscuss"
					},
					"BgAAAB0lAAAAAAAAHiUAAAAAAAAAAAAAHiUAAAAAAAAfJQAAAAAAAAAAAAAfJQAAAAAAACAlAAAAAAAAAAAAACAlAAAAAAAAISUAAAAAAAAAAAAAISUAAAAAAAAiJQAAAAAAAAAAAAAiJQAAAAAAACMlAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHSUAAAAAAAAdJQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " how"
					},
					"BAAAACMlAAAAAAAAJCUAAAAAAAAAAAAAJCUAAAAAAAAlJQAAAAAAAAAAAAAlJQAAAAAAACYlAAAAAAAAAAAAACYlAAAAAAAAJyUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIyUAAAAAAAAjJQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAACclAAAAAAAAKCUAAAAAAAAAAAAAKCUAAAAAAAApJQAAAAAAAAAAAAApJQAAAAAAAColAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJyUAAAAAAAAnJQAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " code"
					},
					"BQAAAColAAAAAAAAKyUAAAAAAAAAAAAAKyUAAAAAAAAsJQAAAAAAAAAAAAAsJQAAAAAAAC0lAAAAAAAAAAAAAC0lAAAAAAAALiUAAAAAAAAAAAAALiUAAAAAAAAvJQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKiUAAAAAAAAqJQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "\nthis"
					},
					"BQAAAC8lAAAAAAAAMCUAAAAAAAAAAAAAMCUAAAAAAAAxJQAAAAAAAAAAAAAxJQAAAAAAADIlAAAAAAAAAAAAADIlAAAAAAAAMyUAAAAAAAAAAAAAMyUAAAAAAAA0JQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALyUAAAAAAAAvJQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAADQlAAAAAAAANSUAAAAAAAAAAAAANSUAAAAAAAA2JQAAAAAAAAAAAAA2JQAAAAAAADclAAAAAAAAAAAAADclAAAAAAAAOCUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANCUAAAAAAAA0JQAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " DNBC"
					},
					"BQAAADglAAAAAAAAOSUAAAAAAAAAAAAAOSUAAAAAAAA6JQAAAAAAAAAAAAA6JQAAAAAAADslAAAAAAAAAAAAADslAAAAAAAAPCUAAAAAAAAAAAAAPCUAAAAAAAA9JQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOCUAAAAAAAA4JQAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAD0lAAAAAAAAPiUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPSUAAAAAAAA9JQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": " associations"
					},
					"DQAAAOsnAAAAAAAA7CcAAAAAAAAAAAAA7CcAAAAAAADtJwAAAAAAAAAAAADtJwAAAAAAAO4nAAAAAAAAAAAAAO4nAAAAAAAA7ycAAAAAAAAAAAAA7ycAAAAAAADwJwAAAAAAAAAAAADwJwAAAAAAAPEnAAAAAAAAAAAAAPEnAAAAAAAA8icAAAAAAAAAAAAA8icAAAAAAADzJwAAAAAAAAAAAADzJwAAAAAAAPQnAAAAAAAAAAAAAPQnAAAAAAAA9ScAAAAAAAAAAAAA9ScAAAAAAAD2JwAAAAAAAAAAAAD2JwAAAAAAAPcnAAAAAAAAAAAAAPcnAAAAAAAA+CcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6ycAAAAAAADrJwAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"paste",
					null,
					"AQAAAD8XAAAAAAAAiRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxcAAAAAAAA/FwAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AgAAAHEXAAAAAAAAchcAAAAAAAAAAAAAchcAAAAAAAByFwAAAAAAABgAAAAsIAogIGxpbWl0cyA9IGMoMzAsIDgwKSk",
					"AQAAAAAAAAABAAAAiRcAAAAAAABxFwAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "_c"
					},
					"AgAAAFQXAAAAAAAAVRcAAAAAAAAAAAAAVRcAAAAAAABWFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBcAAAAAAABUFwAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"paste",
					null,
					"AQAAAHgXAAAAAAAAhxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBcAAAAAAAB4FwAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " %>%"
					},
					"BAAAAIcXAAAAAAAAiBcAAAAAAAAAAAAAiBcAAAAAAACJFwAAAAAAAAAAAACJFwAAAAAAAIoXAAAAAAAAAAAAAIoXAAAAAAAAixcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxcAAAAAAACHFwAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " filter"
					},
					"BwAAAIsXAAAAAAAAjBcAAAAAAAAAAAAAjBcAAAAAAACNFwAAAAAAAAAAAACNFwAAAAAAAI4XAAAAAAAAAAAAAI4XAAAAAAAAjxcAAAAAAAAAAAAAjxcAAAAAAACQFwAAAAAAAAAAAACQFwAAAAAAAJEXAAAAAAAAAAAAAJEXAAAAAAAAkhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAixcAAAAAAACLFwAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJIXAAAAAAAAlBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhcAAAAAAACSFwAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					8,
					"left_delete",
					null,
					"CAAAAJMXAAAAAAAAkxcAAAAAAAABAAAAKZIXAAAAAAAAkhcAAAAAAAABAAAAKJEXAAAAAAAAkRcAAAAAAAABAAAAcpAXAAAAAAAAkBcAAAAAAAABAAAAZY8XAAAAAAAAjxcAAAAAAAABAAAAdI4XAAAAAAAAjhcAAAAAAAABAAAAbI0XAAAAAAAAjRcAAAAAAAABAAAAaYwXAAAAAAAAjBcAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAlBcAAAAAAACUFwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "filter"
					},
					"BgAAAIwXAAAAAAAAjRcAAAAAAAAAAAAAjRcAAAAAAACOFwAAAAAAAAAAAACOFwAAAAAAAI8XAAAAAAAAAAAAAI8XAAAAAAAAkBcAAAAAAAAAAAAAkBcAAAAAAACRFwAAAAAAAAAAAACRFwAAAAAAAJIXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjBcAAAAAAACMFwAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJIXAAAAAAAAlBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhcAAAAAAACSFwAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "cohort"
					},
					"BgAAAJMXAAAAAAAAlBcAAAAAAAAAAAAAlBcAAAAAAACVFwAAAAAAAAAAAACVFwAAAAAAAJYXAAAAAAAAAAAAAJYXAAAAAAAAlxcAAAAAAAAAAAAAlxcAAAAAAACYFwAAAAAAAAAAAACYFwAAAAAAAJkXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxcAAAAAAACTFwAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAJkXAAAAAAAAmhcAAAAAAAAAAAAAmhcAAAAAAACbFwAAAAAAAAAAAACbFwAAAAAAAJwXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmRcAAAAAAACZFwAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJwXAAAAAAAAnRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnBcAAAAAAACcFwAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAJ0XAAAAAAAAnxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRcAAAAAAACdFwAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "alspac"
					},
					"BgAAAJ4XAAAAAAAAnxcAAAAAAAAAAAAAnxcAAAAAAACgFwAAAAAAAAAAAACgFwAAAAAAAKEXAAAAAAAAAAAAAKEXAAAAAAAAohcAAAAAAAAAAAAAohcAAAAAAACjFwAAAAAAAAAAAACjFwAAAAAAAKQXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhcAAAAAAACeFwAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "table)"
					},
					"BgAAAHgXAAAAAAAAeRcAAAAAAAAAAAAAeRcAAAAAAAB6FwAAAAAAAAAAAAB6FwAAAAAAAHsXAAAAAAAAAAAAAHsXAAAAAAAAfBcAAAAAAAAAAAAAfBcAAAAAAAB9FwAAAAAAAAAAAAB9FwAAAAAAAH4XAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBcAAAAAAAB4FwAAAAAAAAAAAAAAAAAA"
				],
				[
					117,
					1,
					"left_delete",
					null,
					"AQAAAH0XAAAAAAAAfRcAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAfhcAAAAAAAB+FwAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAH0XAAAAAAAAfhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfRcAAAAAAAB9FwAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "$variable)"
					},
					"CgAAAI0XAAAAAAAAjhcAAAAAAAAAAAAAjhcAAAAAAACPFwAAAAAAAAAAAACPFwAAAAAAAJAXAAAAAAAAAAAAAJAXAAAAAAAAkRcAAAAAAAAAAAAAkRcAAAAAAACSFwAAAAAAAAAAAACSFwAAAAAAAJMXAAAAAAAAAAAAAJMXAAAAAAAAlBcAAAAAAAAAAAAAlBcAAAAAAACVFwAAAAAAAAAAAACVFwAAAAAAAJYXAAAAAAAAAAAAAJYXAAAAAAAAlxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRcAAAAAAACNFwAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"right_delete",
					null,
					"AQAAAJgXAAAAAAAAmBcAAAAAAAAeAAAAJT4lIGZpbHRlcihjb2hvcnQgPT0gImFsc3BhYyIp",
					"AQAAAAAAAAABAAAAmBcAAAAAAAC2FwAAAAAAAP///////+9/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAADcXAAAAAAAAOBcAAAAAAAAAAAAAOBcAAAAAAAA5FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxcAAAAAAAA3FwAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": " I"
					},
					"AgAAADkXAAAAAAAAOhcAAAAAAAAAAAAAOhcAAAAAAAA7FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAORcAAAAAAAA5FwAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " will"
					},
					"BQAAADsXAAAAAAAAPBcAAAAAAAAAAAAAPBcAAAAAAAA9FwAAAAAAAAAAAAA9FwAAAAAAAD4XAAAAAAAAAAAAAD4XAAAAAAAAPxcAAAAAAAAAAAAAPxcAAAAAAABAFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxcAAAAAAAA7FwAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAEAXAAAAAAAAQRcAAAAAAAAAAAAAQRcAAAAAAABCFwAAAAAAAAAAAABCFwAAAAAAAEMXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQBcAAAAAAABAFwAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"left_delete",
					null,
					"AQAAAEIXAAAAAAAAQhcAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAQxcAAAAAAABDFwAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "dd"
					},
					"AgAAAEIXAAAAAAAAQxcAAAAAAAAAAAAAQxcAAAAAAABEFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQhcAAAAAAABCFwAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": " this."
					},
					"BgAAAEQXAAAAAAAARRcAAAAAAAAAAAAARRcAAAAAAABGFwAAAAAAAAAAAABGFwAAAAAAAEcXAAAAAAAAAAAAAEcXAAAAAAAASBcAAAAAAAAAAAAASBcAAAAAAABJFwAAAAAAAAAAAABJFwAAAAAAAEoXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARBcAAAAAAABEFwAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					3,
					"right_delete",
					null,
					"AwAAAIgXAAAAAAAAiBcAAAAAAAAjAAAACgoKdGFibGUodmlvbGluLnBsb3REYXRhJHZhcmlhYmxlKSCIFwAAAAAAAIgXAAAAAAAAAQAAAAqIFwAAAAAAAIgXAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAiBcAAAAAAACrFwAAAAAAAAAAAAAAEH9A"
				],
				[
					141,
					1,
					"left_delete",
					null,
					"AQAAAN8YAAAAAAAA3xgAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAA4BgAAAAAAADgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					2,
					"left_delete",
					null,
					"AgAAAOAYAAAAAAAA4BgAAAAAAAABAAAAMN8YAAAAAAAA3xgAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA4RgAAAAAAADhGAAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"left_delete",
					null,
					"AQAAAN8YAAAAAAAA3xgAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAA4BgAAAAAAADgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"left_delete",
					null,
					"AQAAAN8YAAAAAAAA3xgAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA4BgAAAAAAADgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "urb"
					},
					"AwAAAK4YAAAAAAAArxgAAAAAAAAAAAAArxgAAAAAAACwGAAAAAAAAAAAAACwGAAAAAAAALEYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArhgAAAAAAACuGAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					3,
					"right_delete",
					null,
					"AwAAALEYAAAAAAAAsRgAAAAAAAABAAAAbrEYAAAAAAAAsRgAAAAAAAABAAAAYbEYAAAAAAAAsRgAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAsRgAAAAAAACxGAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"left_delete",
					null,
					"AQAAAN8YAAAAAAAA3xgAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAA4BgAAAAAAADgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"left_delete",
					null,
					"AQAAAN8YAAAAAAAA3xgAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAA4BgAAAAAAADgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA4BgAAAAAAADhGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"left_delete",
					null,
					"AQAAAN8YAAAAAAAA3xgAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAA4BgAAAAAAADgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3xgAAAAAAADfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"left_delete",
					null,
					"AQAAAGgZAAAAAAAAaBkAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAaRkAAAAAAABpGQAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"left_delete",
					null,
					"AQAAAGcZAAAAAAAAZxkAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAaBkAAAAAAABoGQAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAGcZAAAAAAAAaBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxkAAAAAAABnGQAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"left_delete",
					null,
					"AQAAAPEZAAAAAAAA8RkAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA8hkAAAAAAADyGQAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAPEZAAAAAAAA8hkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RkAAAAAAADxGQAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"paste",
					null,
					"AQAAAEMuAAAAAAAANDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQy4AAAAAAABDLgAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert_snippet",
					{
						"contents": "\"${0:$SELECTION}\""
					},
					"AgAAAHcuAAAAAAAAdy4AAAAAAAAQAAAAYygibm8yIiwgInBtMjUiKXcuAAAAAAAAiS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdy4AAAAAAACHLgAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"insert",
					{
						"characters": "lfen"
					},
					"BQAAAHguAAAAAAAAeS4AAAAAAAAAAAAAeS4AAAAAAAB5LgAAAAAAABAAAABjKCJubzIiLCAicG0yNSIpeS4AAAAAAAB6LgAAAAAAAAAAAAB6LgAAAAAAAHsuAAAAAAAAAAAAAHsuAAAAAAAAfC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeC4AAAAAAACILgAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					3,
					"left_delete",
					null,
					"AwAAAHsuAAAAAAAAey4AAAAAAAABAAAAbnouAAAAAAAAei4AAAAAAAABAAAAZXkuAAAAAAAAeS4AAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAfC4AAAAAAAB8LgAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "den"
					},
					"AwAAAHkuAAAAAAAAei4AAAAAAAAAAAAAei4AAAAAAAB7LgAAAAAAAAAAAAB7LgAAAAAAAHwuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeS4AAAAAAAB5LgAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"right_delete",
					null,
					"AQAAADYvAAAAAAAANi8AAAAAAAAlAAAAKwogIGZhY2V0X3dyYXAofmV4cG9zdXJlLCBuY29sID0gMSkgKw",
					"AQAAAAAAAAABAAAAWy8AAAAAAAA2LwAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAADYvAAAAAAAANy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANi8AAAAAAAA2LwAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"right_delete",
					null,
					"AQAAANMvAAAAAAAA0y8AAAAAAAACAAAALjc",
					"AQAAAAAAAAABAAAA0y8AAAAAAADVLwAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					3,
					"right_delete",
					null,
					"AwAAANUvAAAAAAAA1S8AAAAAAAABAAAAMdUvAAAAAAAA1S8AAAAAAAABAAAALtUvAAAAAAAA1S8AAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAA1S8AAAAAAADVLwAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAANUvAAAAAAAA1i8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1S8AAAAAAADVLwAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAAP0vAAAAAAAA/i8AAAAAAAAAAAAA/i8AAAAAAAACMAAAAAAAAAAAAAD+LwAAAAAAAP4vAAAAAAAABAAAACAgICD+LwAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAADMAAAAAAAAAAAAAD+LwAAAAAAAP4vAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAA/S8AAAAAAAD9LwAAAAAAAAAAAAAAoGBA"
				],
				[
					330,
					1,
					"paste",
					null,
					"AQAAAAEwAAAAAAAAFDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "table*"
					},
					"BgAAAAEwAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAGMAAAAAAAAAAAAAAGMAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAATAAAAAAAAABMAAAAAAAAAAAAAAAACxA"
				],
				[
					333,
					1,
					"left_delete",
					null,
					"AQAAAAYwAAAAAAAABjAAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAABzAAAAAAAAAHMAAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAAYwAAAAAAAABzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABjAAAAAAAAAGMAAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"insert",
					{
						"characters": "$expos"
					},
					"BgAAABowAAAAAAAAGzAAAAAAAAAAAAAAGzAAAAAAAAAcMAAAAAAAAAAAAAAcMAAAAAAAAB0wAAAAAAAAAAAAAB0wAAAAAAAAHjAAAAAAAAAAAAAAHjAAAAAAAAAfMAAAAAAAAAAAAAAfMAAAAAAAACAwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGjAAAAAAAAAaMAAAAAAAAP///////+9/"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": "ure)"
					},
					"BAAAACAwAAAAAAAAITAAAAAAAAAAAAAAITAAAAAAAAAiMAAAAAAAAAAAAAAiMAAAAAAAACMwAAAAAAAAAAAAACMwAAAAAAAAJDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIDAAAAAAAAAgMAAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"right_delete",
					null,
					"AQAAACswAAAAAAAAKzAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAKzAAAAAAAAArMAAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": " index"
					},
					"BgAAADYwAAAAAAAANzAAAAAAAAAAAAAANzAAAAAAAAA4MAAAAAAAAAAAAAA4MAAAAAAAADkwAAAAAAAAAAAAADkwAAAAAAAAOjAAAAAAAAAAAAAAOjAAAAAAAAA7MAAAAAAAAAAAAAA7MAAAAAAAADwwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANjAAAAAAAAA2MAAAAAAAAP///////+9/"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAF4yAAAAAAAAXzIAAAAAAAAAAAAAXzIAAAAAAABgMgAAAAAAAAAAAABgMgAAAAAAAGEyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXjIAAAAAAABeMgAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABIqAAAAAAAAEyoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEioAAAAAAAASKgAAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"paste",
					null,
					"AQAAABMqAAAAAAAAGyoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEyoAAAAAAAATKgAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABsqAAAAAAAAHCoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGyoAAAAAAAAbKgAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEMuAAAAAAAARC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQy4AAAAAAABDLgAAAAAAAAAAAAAAAPC/"
				],
				[
					362,
					1,
					"paste",
					null,
					"AQAAAEQuAAAAAAAATC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARC4AAAAAAABELgAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEwuAAAAAAAATS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATC4AAAAAAABMLgAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"paste",
					null,
					"AQAAAD4wAAAAAAAARjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPjAAAAAAAAA+MAAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEYwAAAAAAAARzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARjAAAAAAAABGMAAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"paste",
					null,
					"AQAAAH4yAAAAAAAAhjIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfjIAAAAAAAB+MgAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIcyAAAAAAAAiDIAAAAAAAAAAAAAiDIAAAAAAACJMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhzIAAAAAAACHMgAAAAAAAAAAAAAAAAAA"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIgyAAAAAAAAiTIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiDIAAAAAAACIMgAAAAAAAAAAAAAAAAAA"
				],
				[
					382,
					1,
					"paste",
					null,
					"AQAAAIgyAAAAAAAAxjQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiDIAAAAAAACIMgAAAAAAAAAAAAAAAAAA"
				],
				[
					385,
					1,
					"right_delete",
					null,
					"AQAAAKIwAAAAAAAAojAAAAAAAAAlAAAAICJsdV9hZ3IiLCAibHVfZm9yc3QiLCAibHVfdXJiX2dyZWVuIg",
					"AQAAAAAAAAABAAAAojAAAAAAAADHMAAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					1,
					"left_delete",
					null,
					"AQAAAKEwAAAAAAAAoTAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAojAAAAAAAACiMAAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					5,
					"right_delete",
					null,
					"BQAAAJMwAAAAAAAAkzAAAAAAAAABAAAACpMwAAAAAAAAkzAAAAAAAAABAAAAIJMwAAAAAAAAkzAAAAAAAAABAAAAIJMwAAAAAAAAkzAAAAAAAAABAAAAIJMwAAAAAAAAkzAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAkzAAAAAAAACTMAAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "Urban"
					},
					"BgAAAGAyAAAAAAAAYTIAAAAAAAAAAAAAYTIAAAAAAABhMgAAAAAAAA4AAABMYW5kIHVzZSBpbmRleGEyAAAAAAAAYjIAAAAAAAAAAAAAYjIAAAAAAABjMgAAAAAAAAAAAABjMgAAAAAAAGQyAAAAAAAAAAAAAGQyAAAAAAAAZTIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYDIAAAAAAABuMgAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": " green"
					},
					"BgAAAGUyAAAAAAAAZjIAAAAAAAAAAAAAZjIAAAAAAABnMgAAAAAAAAAAAABnMgAAAAAAAGgyAAAAAAAAAAAAAGgyAAAAAAAAaTIAAAAAAAAAAAAAaTIAAAAAAABqMgAAAAAAAAAAAABqMgAAAAAAAGsyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZTIAAAAAAABlMgAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": " ladn"
					},
					"BQAAAGsyAAAAAAAAbDIAAAAAAAAAAAAAbDIAAAAAAABtMgAAAAAAAAAAAABtMgAAAAAAAG4yAAAAAAAAAAAAAG4yAAAAAAAAbzIAAAAAAAAAAAAAbzIAAAAAAABwMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAazIAAAAAAABrMgAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					2,
					"left_delete",
					null,
					"AgAAAG8yAAAAAAAAbzIAAAAAAAABAAAAbm4yAAAAAAAAbjIAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAcDIAAAAAAABwMgAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "nd"
					},
					"AgAAAG4yAAAAAAAAbzIAAAAAAAAAAAAAbzIAAAAAAABwMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbjIAAAAAAABuMgAAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": " use"
					},
					"BAAAAHAyAAAAAAAAcTIAAAAAAAAAAAAAcTIAAAAAAAByMgAAAAAAAAAAAAByMgAAAAAAAHMyAAAAAAAAAAAAAHMyAAAAAAAAdDIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcDIAAAAAAABwMgAAAAAAAAAAAAAAAPC/"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAJY0AAAAAAAAlzQAAAAAAAAAAAAAlzQAAAAAAACYNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAljQAAAAAAACWNAAAAAAAAAAAAAAAAPC/"
				],
				[
					403,
					1,
					"paste",
					null,
					"AQAAAJg0AAAAAAAA0TYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmDQAAAAAAACYNAAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": "Agricultar"
					},
					"CwAAAGAyAAAAAAAAYTIAAAAAAAAAAAAAYTIAAAAAAABhMgAAAAAAABQAAABVcmJhbiBncmVlbiBsYW5kIHVzZWEyAAAAAAAAYjIAAAAAAAAAAAAAYjIAAAAAAABjMgAAAAAAAAAAAABjMgAAAAAAAGQyAAAAAAAAAAAAAGQyAAAAAAAAZTIAAAAAAAAAAAAAZTIAAAAAAABmMgAAAAAAAAAAAABmMgAAAAAAAGcyAAAAAAAAAAAAAGcyAAAAAAAAaDIAAAAAAAAAAAAAaDIAAAAAAABpMgAAAAAAAAAAAABpMgAAAAAAAGoyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYDIAAAAAAAB0MgAAAAAAAAAAAAAAAPC/"
				],
				[
					411,
					2,
					"left_delete",
					null,
					"AgAAAGkyAAAAAAAAaTIAAAAAAAABAAAAcmgyAAAAAAAAaDIAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAajIAAAAAAABqMgAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					1,
					"insert",
					{
						"characters": "ural"
					},
					"BAAAAGgyAAAAAAAAaTIAAAAAAAAAAAAAaTIAAAAAAABqMgAAAAAAAAAAAABqMgAAAAAAAGsyAAAAAAAAAAAAAGsyAAAAAAAAbDIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaDIAAAAAAABoMgAAAAAAAAAAAAAAAPC/"
				],
				[
					413,
					1,
					"insert",
					{
						"characters": " land"
					},
					"BQAAAGwyAAAAAAAAbTIAAAAAAAAAAAAAbTIAAAAAAABuMgAAAAAAAAAAAABuMgAAAAAAAG8yAAAAAAAAAAAAAG8yAAAAAAAAcDIAAAAAAAAAAAAAcDIAAAAAAABxMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbDIAAAAAAABsMgAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": " use"
					},
					"BAAAAHEyAAAAAAAAcjIAAAAAAAAAAAAAcjIAAAAAAABzMgAAAAAAAAAAAABzMgAAAAAAAHQyAAAAAAAAAAAAAHQyAAAAAAAAdTIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcTIAAAAAAABxMgAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"right_delete",
					null,
					"AQAAAK8yAAAAAAAArzIAAAAAAAAQAAAACiAgICAibGFuZHVzZSIsIA",
					"AQAAAAAAAAABAAAArzIAAAAAAAC/MgAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"right_delete",
					null,
					"AQAAALcyAAAAAAAAtzIAAAAAAAAcAAAALCAibHVfZm9yc3QiLCAibHVfdXJiX2dyZWVuIg",
					"AQAAAAAAAAABAAAA0zIAAAAAAAC3MgAAAAAAAAAAAAAAAPC/"
				],
				[
					423,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAGs0AAAAAAAAbDQAAAAAAAAAAAAAbDQAAAAAAABtNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAazQAAAAAAABrNAAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					1,
					"paste",
					null,
					"AQAAAG00AAAAAAAAhTYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbTQAAAAAAABtNAAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": "Forest"
					},
					"BwAAAHo0AAAAAAAAezQAAAAAAAAAAAAAezQAAAAAAAB7NAAAAAAAAAwAAABBZ3JpY3VsdHVyYWx7NAAAAAAAAHw0AAAAAAAAAAAAAHw0AAAAAAAAfTQAAAAAAAAAAAAAfTQAAAAAAAB+NAAAAAAAAAAAAAB+NAAAAAAAAH80AAAAAAAAAAAAAH80AAAAAAAAgDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAejQAAAAAAACGNAAAAAAAAAAAAAAAAPC/"
				],
				[
					437,
					1,
					"insert",
					{
						"characters": "forest"
					},
					"BgAAAMc0AAAAAAAAyDQAAAAAAAAAAAAAyDQAAAAAAADJNAAAAAAAAAAAAADJNAAAAAAAAMo0AAAAAAAAAAAAAMo0AAAAAAAAyzQAAAAAAAAAAAAAyzQAAAAAAADMNAAAAAAAAAAAAADMNAAAAAAAAM00AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxzQAAAAAAADHNAAAAAAAAAAAAAAAAPC/"
				],
				[
					438,
					3,
					"right_delete",
					null,
					"AwAAAM00AAAAAAAAzTQAAAAAAAABAAAAYc00AAAAAAAAzTQAAAAAAAABAAAAZ800AAAAAAAAzTQAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAzTQAAAAAAADNNAAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BQAAANU2AAAAAAAA1jYAAAAAAAAAAAAA1jYAAAAAAADYNgAAAAAAAAAAAADYNgAAAAAAANg2AAAAAAAAJgAAAAogICAgImxhbmR1c2UiLCAibHVfYWdyIiwgImx1X2ZvcnN0Iiwg1jYAAAAAAADWNgAAAAAAAAIAAAAgINY2AAAAAAAA2jYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+zYAAAAAAADVNgAAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					3,
					"left_delete",
					null,
					"AwAAANg2AAAAAAAA2DYAAAAAAAACAAAAICDWNgAAAAAAANY2AAAAAAAAAgAAACAg1TYAAAAAAADVNgAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAA2jYAAAAAAADaNgAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					2,
					"right_delete",
					null,
					"AgAAABIwAAAAAAAAEjAAAAAAAAAmAAAACiAgdGFibGUoc2luZ2xlX3JlZy5wbG90RGF0YSRleHBvc3VyZSkSMAAAAAAAABIwAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAODAAAAAAAAASMAAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFwuAAAAAAAAXS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXC4AAAAAAABcLgAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"insert",
					{
						"characters": " eval"
					},
					"BQAAAF0uAAAAAAAAXi4AAAAAAAAAAAAAXi4AAAAAAABfLgAAAAAAAAAAAABfLgAAAAAAAGAuAAAAAAAAAAAAAGAuAAAAAAAAYS4AAAAAAAAAAAAAYS4AAAAAAABiLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXS4AAAAAAABdLgAAAAAAAAAAAAAAAPC/"
				],
				[
					456,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGIuAAAAAAAAYy4AAAAAAAAAAAAAYy4AAAAAAABkLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYi4AAAAAAABiLgAAAAAAAAAAAAAAAPC/"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": " FALSE"
					},
					"BgAAAGQuAAAAAAAAZS4AAAAAAAAAAAAAZS4AAAAAAABmLgAAAAAAAAAAAABmLgAAAAAAAGcuAAAAAAAAAAAAAGcuAAAAAAAAaC4AAAAAAAAAAAAAaC4AAAAAAABpLgAAAAAAAAAAAABpLgAAAAAAAGouAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZC4AAAAAAABkLgAAAAAAAAAAAAAAAPC/"
				],
				[
					469,
					2,
					"right_delete",
					null,
					"AgAAACU0AAAAAAAAJTQAAAAAAAABAAAAMSU0AAAAAAAAJTQAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAJTQAAAAAAAAlNAAAAAAAAAAAAAAAAPC/"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAACU0AAAAAAAAJjQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJTQAAAAAAAAlNAAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					2,
					"right_delete",
					null,
					"AgAAADs2AAAAAAAAOzYAAAAAAAABAAAAMTs2AAAAAAAAOzYAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAOzYAAAAAAAA7NgAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAADs2AAAAAAAAPDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOzYAAAAAAAA7NgAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					2,
					"left_delete",
					null,
					"AgAAAFA4AAAAAAAAUDgAAAAAAAABAAAAME84AAAAAAAATzgAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAUTgAAAAAAABROAAAAAAAAAAAAAAAAPC/"
				],
				[
					494,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAE84AAAAAAAAUDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATzgAAAAAAABPOAAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					1,
					"right_delete",
					null,
					"AQAAAHw4AAAAAAAAfDgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAfDgAAAAAAAB8OAAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					1,
					"right_delete",
					null,
					"AQAAAIc4AAAAAAAAhzgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAhzgAAAAAAACHOAAAAAAAAAAAAAAAAPC/"
				],
				[
					521,
					1,
					"insert",
					{
						"characters": "Building"
					},
					"CQAAAIo4AAAAAAAAizgAAAAAAAAAAAAAizgAAAAAAACLOAAAAAAAABcAAABPdGhlciBidWlsdCBlbnZpcm9ubWVudIs4AAAAAAAAjDgAAAAAAAAAAAAAjDgAAAAAAACNOAAAAAAAAAAAAACNOAAAAAAAAI44AAAAAAAAAAAAAI44AAAAAAAAjzgAAAAAAAAAAAAAjzgAAAAAAACQOAAAAAAAAAAAAACQOAAAAAAAAJE4AAAAAAAAAAAAAJE4AAAAAAAAkjgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAijgAAAAAAAChOAAAAAAAAP///////+9/"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": " density"
					},
					"CAAAAJI4AAAAAAAAkzgAAAAAAAAAAAAAkzgAAAAAAACUOAAAAAAAAAAAAACUOAAAAAAAAJU4AAAAAAAAAAAAAJU4AAAAAAAAljgAAAAAAAAAAAAAljgAAAAAAACXOAAAAAAAAAAAAACXOAAAAAAAAJg4AAAAAAAAAAAAAJg4AAAAAAAAmTgAAAAAAAAAAAAAmTgAAAAAAACaOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkjgAAAAAAACSOAAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAL46AAAAAAAAvzoAAAAAAAAAAAAAvzoAAAAAAADAOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvjoAAAAAAAC+OgAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"paste",
					null,
					"AQAAAMA6AAAAAAAA9zwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwDoAAAAAAADAOgAAAAAAAAAAAAAAAPC/"
				],
				[
					536,
					1,
					"right_delete",
					null,
					"AQAAABE7AAAAAAAAETsAAAAAAAAKAAAAICJiZGVucyIsIA",
					"AQAAAAAAAAABAAAAETsAAAAAAAAbOwAAAAAAAAAAAAAAAPC/"
				],
				[
					540,
					1,
					"insert",
					{
						"characters": "Facility"
					},
					"CQAAAMM6AAAAAAAAxDoAAAAAAAAAAAAAxDoAAAAAAADEOgAAAAAAAAgAAABCdWlsZGluZ8Q6AAAAAAAAxToAAAAAAAAAAAAAxToAAAAAAADGOgAAAAAAAAAAAADGOgAAAAAAAMc6AAAAAAAAAAAAAMc6AAAAAAAAyDoAAAAAAAAAAAAAyDoAAAAAAADJOgAAAAAAAAAAAADJOgAAAAAAAMo6AAAAAAAAAAAAAMo6AAAAAAAAyzoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwzoAAAAAAADLOgAAAAAAAAAAAAAAAPC/"
				],
				[
					548,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAO48AAAAAAAA7zwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7jwAAAAAAADuPAAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"paste",
					null,
					"AQAAAO88AAAAAAAAHD8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7zwAAAAAAADvPAAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"right_delete",
					null,
					"AQAAAEA9AAAAAAAAQD0AAAAAAAAJAAAAImZkZW5zIiwg",
					"AQAAAAAAAAABAAAAST0AAAAAAABAPQAAAAAAAAAAAAAAAPC/"
				],
				[
					556,
					4,
					"right_delete",
					null,
					"BAAAADw9AAAAAAAAPD0AAAAAAAABAAAACjw9AAAAAAAAPD0AAAAAAAABAAAAIDw9AAAAAAAAPD0AAAAAAAABAAAAIDw9AAAAAAAAPD0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAPD0AAAAAAAA8PQAAAAAAAP///////+9/"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": "richness"
					},
					"CQAAAPs8AAAAAAAA/DwAAAAAAAAAAAAA/DwAAAAAAAD8PAAAAAAAAAcAAABkZW5zaXR5/DwAAAAAAAD9PAAAAAAAAAAAAAD9PAAAAAAAAP48AAAAAAAAAAAAAP48AAAAAAAA/zwAAAAAAAAAAAAA/zwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAE9AAAAAAAAAAAAAAE9AAAAAAAAAj0AAAAAAAAAAAAAAj0AAAAAAAADPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+zwAAAAAAAACPQAAAAAAAAAAAAAAAPC/"
				],
				[
					563,
					1,
					"right_delete",
					null,
					"AQAAABk7AAAAAAAAGTsAAAAAAAAgAAAAICJmcmljaCIsICJ3YWxrIiwgImx1X3VyYl9ncmVlbiI",
					"AQAAAAAAAAABAAAAGTsAAAAAAAA5OwAAAAAAAAAAAAAAAPC/"
				],
				[
					571,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPE+AAAAAAAA8j4AAAAAAAAAAAAA8j4AAAAAAADzPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8T4AAAAAAADxPgAAAAAAAAAAAAAAAPC/"
				],
				[
					573,
					1,
					"paste",
					null,
					"AQAAAPI+AAAAAAAAE0EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8j4AAAAAAADyPgAAAAAAAAAAAAAAAAAA"
				],
				[
					576,
					1,
					"right_delete",
					null,
					"AQAAAEA/AAAAAAAAQD8AAAAAAAAJAAAAImZyaWNoIiwg",
					"AQAAAAAAAAABAAAAST8AAAAAAABAPwAAAAAAAAAAAAAAAPC/"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": "Walk"
					},
					"BQAAAPU+AAAAAAAA9j4AAAAAAAAAAAAA9j4AAAAAAAD2PgAAAAAAAAgAAABGYWNpbGl0efY+AAAAAAAA9z4AAAAAAAAAAAAA9z4AAAAAAAD4PgAAAAAAAAAAAAD4PgAAAAAAAPk+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9T4AAAAAAAD9PgAAAAAAAAAAAAAAAPC/"
				],
				[
					583,
					1,
					"insert",
					{
						"characters": "abilit"
					},
					"BgAAAPk+AAAAAAAA+j4AAAAAAAAAAAAA+j4AAAAAAAD7PgAAAAAAAAAAAAD7PgAAAAAAAPw+AAAAAAAAAAAAAPw+AAAAAAAA/T4AAAAAAAAAAAAA/T4AAAAAAAD+PgAAAAAAAAAAAAD+PgAAAAAAAP8+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+T4AAAAAAAD5PgAAAAAAAAAAAAAAAPC/"
				],
				[
					584,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAP8+AAAAAAAAAD8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/z4AAAAAAAD/PgAAAAAAAAAAAAAAAPC/"
				],
				[
					587,
					1,
					"right_delete",
					null,
					"AQAAAAE/AAAAAAAAAT8AAAAAAAAIAAAAcmljaG5lc3M",
					"AQAAAAAAAAABAAAAAT8AAAAAAAAJPwAAAAAAAAAAAAAAAPC/"
				],
				[
					592,
					4,
					"right_delete",
					null,
					"BAAAAA07AAAAAAAADTsAAAAAAAABAAAACg07AAAAAAAADTsAAAAAAAABAAAAIA07AAAAAAAADTsAAAAAAAABAAAAIA07AAAAAAAADTsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAADTsAAAAAAAANOwAAAAAAAAAAAAAAAPC/"
				],
				[
					594,
					1,
					"right_delete",
					null,
					"AQAAABQ7AAAAAAAAFDsAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAFDsAAAAAAAAUOwAAAAAAAAAAAAAAAPC/"
				],
				[
					603,
					1,
					"right_delete",
					null,
					"AQAAAB89AAAAAAAAHz0AAAAAAAAYAAAALCAid2FsayIsICJsdV91cmJfZ3JlZW4i",
					"AQAAAAAAAAABAAAAHz0AAAAAAAA3PQAAAAAAAAAAAAAAAPC/"
				],
				[
					608,
					1,
					"right_delete",
					null,
					"AQAAACQ/AAAAAAAAJD8AAAAAAAAQAAAALCAibHVfdXJiX2dyZWVuIg",
					"AQAAAAAAAAABAAAAND8AAAAAAAAkPwAAAAAAAAAAAAAAAPC/"
				],
				[
					612,
					1,
					"right_delete",
					null,
					"AQAAAOA4AAAAAAAA4DgAAAAAAAApAAAALCAiZmRlbnMiLCAiZnJpY2giLCAid2FsayIsICJsdV91cmJfZ3JlZW4",
					"AQAAAAAAAAABAAAA4DgAAAAAAAAJOQAAAAAAAAAAAAAAAPC/"
				],
				[
					615,
					5,
					"right_delete",
					null,
					"BQAAANQ4AAAAAAAA1DgAAAAAAAABAAAACtQ4AAAAAAAA1DgAAAAAAAABAAAAINQ4AAAAAAAA1DgAAAAAAAABAAAAINQ4AAAAAAAA1DgAAAAAAAABAAAAINQ4AAAAAAAA1DgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA1DgAAAAAAADUOAAAAAAAAP///////+9/"
				],
				[
					617,
					1,
					"left_delete",
					null,
					"AQAAANs4AAAAAAAA2zgAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAA3DgAAAAAAADcOAAAAAAAAAAAAAAAAPC/"
				],
				[
					655,
					1,
					"right_delete",
					null,
					"AQAAAHc1AAAAAAAAdzUAAAAAAAAmAAAAICsKICBmYWNldF93cmFwKH5leHBvc3VyZSwgbmNvbCA9IDEpICs",
					"AQAAAAAAAAABAAAAnTUAAAAAAAB3NQAAAAAAAAAAAAAAAPC/"
				],
				[
					656,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAHc1AAAAAAAAeDUAAAAAAAAAAAAAeDUAAAAAAAB5NQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdzUAAAAAAAB3NQAAAAAAAAAAAAAAAPC/"
				],
				[
					668,
					1,
					"insert",
					{
						"characters": "=="
					},
					"AwAAAKI0AAAAAAAAozQAAAAAAAAAAAAAozQAAAAAAACjNAAAAAAAAAYAAAAlaW4lIGOjNAAAAAAAAKQ0AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAojQAAAAAAACoNAAAAAAAAAAAAAAAAPC/"
				],
				[
					669,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQ0AAAAAAAApTQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApDQAAAAAAACkNAAAAAAAAAAAAAAAAPC/"
				],
				[
					670,
					1,
					"right_delete",
					null,
					"AQAAAKU0AAAAAAAApTQAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAApTQAAAAAAAClNAAAAAAAAAAAAAAAAPC/"
				],
				[
					672,
					1,
					"right_delete",
					null,
					"AQAAALA0AAAAAAAAsDQAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAsDQAAAAAAACwNAAAAAAAAAAAAAAAAPC/"
				],
				[
					674,
					3,
					"right_delete",
					null,
					"AwAAAJY0AAAAAAAAljQAAAAAAAABAAAACpY0AAAAAAAAljQAAAAAAAABAAAAIJY0AAAAAAAAljQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAljQAAAAAAACWNAAAAAAAAAAAAAAA4GVA"
				],
				[
					686,
					1,
					"insert",
					{
						"characters": "\n\ntable"
					},
					"DAAAADc2AAAAAAAAODYAAAAAAAAAAAAAODYAAAAAAAA8NgAAAAAAAAAAAAA4NgAAAAAAADg2AAAAAAAABAAAACAgICA4NgAAAAAAADo2AAAAAAAAAAAAADo2AAAAAAAAOzYAAAAAAAAAAAAAOzYAAAAAAAA9NgAAAAAAAAAAAAA4NgAAAAAAADg2AAAAAAAAAgAAACAgOzYAAAAAAAA8NgAAAAAAAAAAAAA8NgAAAAAAAD02AAAAAAAAAAAAAD02AAAAAAAAPjYAAAAAAAAAAAAAPjYAAAAAAAA/NgAAAAAAAAAAAAA/NgAAAAAAAEA2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANzYAAAAAAAA3NgAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEA2AAAAAAAAQjYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQDYAAAAAAABANgAAAAAAAAAAAAAAAPC/"
				],
				[
					688,
					1,
					"paste",
					null,
					"AQAAAEE2AAAAAAAAVDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQTYAAAAAAABBNgAAAAAAAAAAAAAAAPC/"
				],
				[
					689,
					1,
					"insert",
					{
						"characters": "$exposire"
					},
					"CQAAAFQ2AAAAAAAAVTYAAAAAAAAAAAAAVTYAAAAAAABWNgAAAAAAAAAAAABWNgAAAAAAAFc2AAAAAAAAAAAAAFc2AAAAAAAAWDYAAAAAAAAAAAAAWDYAAAAAAABZNgAAAAAAAAAAAABZNgAAAAAAAFo2AAAAAAAAAAAAAFo2AAAAAAAAWzYAAAAAAAAAAAAAWzYAAAAAAABcNgAAAAAAAAAAAABcNgAAAAAAAF02AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVDYAAAAAAABUNgAAAAAAAAAAAAAAAPC/"
				],
				[
					690,
					3,
					"left_delete",
					null,
					"AwAAAFw2AAAAAAAAXDYAAAAAAAABAAAAZVs2AAAAAAAAWzYAAAAAAAABAAAAclo2AAAAAAAAWjYAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAXTYAAAAAAABdNgAAAAAAAAAAAAAAAPC/"
				],
				[
					691,
					1,
					"insert",
					{
						"characters": "uire"
					},
					"BAAAAFo2AAAAAAAAWzYAAAAAAAAAAAAAWzYAAAAAAABcNgAAAAAAAAAAAABcNgAAAAAAAF02AAAAAAAAAAAAAF02AAAAAAAAXjYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWjYAAAAAAABaNgAAAAAAAAAAAAAAAPC/"
				],
				[
					692,
					3,
					"left_delete",
					null,
					"AwAAAF02AAAAAAAAXTYAAAAAAAABAAAAZVw2AAAAAAAAXDYAAAAAAAABAAAAcls2AAAAAAAAWzYAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAXjYAAAAAAABeNgAAAAAAAAAAAAAAAPC/"
				],
				[
					693,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAAFs2AAAAAAAAXDYAAAAAAAAAAAAAXDYAAAAAAABdNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWzYAAAAAAABbNgAAAAAAAAAAAAAAAPC/"
				],
				[
					701,
					1,
					"right_delete",
					null,
					"AQAAAKk0AAAAAAAAqTQAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAqTQAAAAAAACpNAAAAAAAAAAAAAAAAPC/"
				],
				[
					707,
					1,
					"left_delete",
					null,
					"AQAAAA42AAAAAAAADjYAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAADzYAAAAAAAAPNgAAAAAAAAAAAAAAAPC/"
				],
				[
					708,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAA42AAAAAAAADzYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADjYAAAAAAAAONgAAAAAAAAAAAAAAAPC/"
				],
				[
					715,
					1,
					"left_delete",
					null,
					"AQAAAA42AAAAAAAADjYAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAADzYAAAAAAAAPNgAAAAAAAAAAAAAAAPC/"
				],
				[
					716,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAA42AAAAAAAADzYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADjYAAAAAAAAONgAAAAAAAAAAAAAAAPC/"
				],
				[
					717,
					1,
					"left_delete",
					null,
					"AQAAAA42AAAAAAAADjYAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAADzYAAAAAAAAPNgAAAAAAAAAAAAAAAPC/"
				],
				[
					718,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAA42AAAAAAAADzYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADjYAAAAAAAAONgAAAAAAAAAAAAAAAPC/"
				],
				[
					724,
					2,
					"right_delete",
					null,
					"AgAAADc2AAAAAAAANzYAAAAAAAAmAAAACiAgdGFibGUoc2luZ2xlX3JlZy5wbG90RGF0YSRleHBvc3VyZSk3NgAAAAAAADc2AAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAXTYAAAAAAAA3NgAAAAAAAAAAAAAAAPC/"
				],
				[
					739,
					2,
					"left_delete",
					null,
					"AgAAADY6AAAAAAAANjoAAAAAAAABAAAAMDU6AAAAAAAANToAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAANzoAAAAAAAA3OgAAAAAAAAAAAAAAAPC/"
				],
				[
					740,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAADU6AAAAAAAANjoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANToAAAAAAAA1OgAAAAAAAAAAAAAAAPC/"
				],
				[
					750,
					2,
					"right_delete",
					null,
					"AgAAAD48AAAAAAAAPjwAAAAAAAABAAAAMT48AAAAAAAAPjwAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAPjwAAAAAAAA+PAAAAAAAAAAAAAAAAPC/"
				],
				[
					751,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAD48AAAAAAAAPzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPjwAAAAAAAA+PAAAAAAAAAAAAAAAAPC/"
				],
				[
					757,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAEg+AAAAAAAAST4AAAAAAAAAAAAAST4AAAAAAABJPgAAAAAAAAEAAAAx",
					"AQAAAAAAAAABAAAASD4AAAAAAABJPgAAAAAAAAAAAAAAAPC/"
				],
				[
					771,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFAXAAAAAAAAURcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUBcAAAAAAABQFwAAAAAAAAAAAAAAAPC/"
				],
				[
					772,
					1,
					"insert",
					{
						"characters": " eval"
					},
					"BQAAAFEXAAAAAAAAUhcAAAAAAAAAAAAAUhcAAAAAAABTFwAAAAAAAAAAAABTFwAAAAAAAFQXAAAAAAAAAAAAAFQXAAAAAAAAVRcAAAAAAAAAAAAAVRcAAAAAAABWFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURcAAAAAAABRFwAAAAAAAAAAAAAAAPC/"
				],
				[
					773,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFYXAAAAAAAAVxcAAAAAAAAAAAAAVxcAAAAAAABYFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVhcAAAAAAABWFwAAAAAAAAAAAAAAAPC/"
				],
				[
					774,
					1,
					"insert",
					{
						"characters": " FALSE"
					},
					"BgAAAFgXAAAAAAAAWRcAAAAAAAAAAAAAWRcAAAAAAABaFwAAAAAAAAAAAABaFwAAAAAAAFsXAAAAAAAAAAAAAFsXAAAAAAAAXBcAAAAAAAAAAAAAXBcAAAAAAABdFwAAAAAAAAAAAABdFwAAAAAAAF4XAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBcAAAAAAABYFwAAAAAAAAAAAAAAAPC/"
				],
				[
					780,
					1,
					"insert",
					{
						"characters": "\n`"
					},
					"AgAAAB8oAAAAAAAAICgAAAAAAAAAAAAAICgAAAAAAAAhKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHygAAAAAAAAfKAAAAAAAAAAAAAAAAPC/"
				],
				[
					782,
					1,
					"left_delete",
					null,
					"AQAAACAoAAAAAAAAICgAAAAAAAABAAAAYA",
					"AQAAAAAAAAABAAAAISgAAAAAAAAhKAAAAAAAAAAAAAAAAPC/"
				],
				[
					783,
					1,
					"insert",
					{
						"characters": "\\newpa"
					},
					"BgAAACAoAAAAAAAAISgAAAAAAAAAAAAAISgAAAAAAAAiKAAAAAAAAAAAAAAiKAAAAAAAACMoAAAAAAAAAAAAACMoAAAAAAAAJCgAAAAAAAAAAAAAJCgAAAAAAAAlKAAAAAAAAAAAAAAlKAAAAAAAACYoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAICgAAAAAAAAgKAAAAAAAAAAAAAAAAPC/"
				],
				[
					784,
					1,
					"insert",
					{
						"characters": "ge"
					},
					"AgAAACYoAAAAAAAAJygAAAAAAAAAAAAAJygAAAAAAAAoKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJigAAAAAAAAmKAAAAAAAAAAAAAAAAPC/"
				],
				[
					785,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACgoAAAAAAAAKSgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKCgAAAAAAAAoKAAAAAAAAAAAAAAAAPC/"
				],
				[
					788,
					2,
					"left_delete",
					null,
					"AgAAAD4wAAAAAAAAPjAAAAAAAAAHAAAAbmV3cGFnZT0wAAAAAAAAPTAAAAAAAAABAAAAXA",
					"AQAAAAAAAAABAAAARTAAAAAAAAA+MAAAAAAAAAAAAAAAAPC/"
				],
				[
					789,
					2,
					"right_delete",
					null,
					"AgAAAD0wAAAAAAAAPTAAAAAAAAABAAAACj0wAAAAAAAAPTAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAPTAAAAAAAAA9MAAAAAAAAAAAAAAAAPC/"
				],
				[
					793,
					1,
					"insert",
					{
						"characters": "\nWill"
					},
					"BQAAAG4uAAAAAAAAby4AAAAAAAAAAAAAby4AAAAAAABwLgAAAAAAAAAAAABwLgAAAAAAAHEuAAAAAAAAAAAAAHEuAAAAAAAAci4AAAAAAAAAAAAAci4AAAAAAABzLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbi4AAAAAAABuLgAAAAAAAP///////+9/"
				],
				[
					794,
					1,
					"insert",
					{
						"characters": " ad"
					},
					"AwAAAHMuAAAAAAAAdC4AAAAAAAAAAAAAdC4AAAAAAAB1LgAAAAAAAAAAAAB1LgAAAAAAAHYuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcy4AAAAAAABzLgAAAAAAAAAAAAAAAPC/"
				],
				[
					795,
					1,
					"insert",
					{
						"characters": " this."
					},
					"BgAAAHYuAAAAAAAAdy4AAAAAAAAAAAAAdy4AAAAAAAB4LgAAAAAAAAAAAAB4LgAAAAAAAHkuAAAAAAAAAAAAAHkuAAAAAAAAei4AAAAAAAAAAAAAei4AAAAAAAB7LgAAAAAAAAAAAAB7LgAAAAAAAHwuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdi4AAAAAAAB2LgAAAAAAAAAAAAAAAPC/"
				],
				[
					797,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAHYuAAAAAAAAdy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdi4AAAAAAAB2LgAAAAAAAAAAAAAAAPC/"
				],
				[
					800,
					1,
					"left_delete",
					null,
					"AQAAAGU+AAAAAAAAZT4AAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAZj4AAAAAAABmPgAAAAAAAAAAAAAAAPC/"
				],
				[
					801,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAGU+AAAAAAAAZj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZT4AAAAAAABlPgAAAAAAAAAAAAAAAPC/"
				],
				[
					804,
					2,
					"left_delete",
					null,
					"AgAAACkuAAAAAAAAKS4AAAAAAAABAAAANyguAAAAAAAAKC4AAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAKi4AAAAAAAAqLgAAAAAAAAAAAAAAAPC/"
				],
				[
					807,
					3,
					"right_delete",
					null,
					"AwAAACouAAAAAAAAKi4AAAAAAAABAAAAMSouAAAAAAAAKi4AAAAAAAABAAAALiouAAAAAAAAKi4AAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAKi4AAAAAAAAqLgAAAAAAAAAAAAAAAPC/"
				],
				[
					808,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAACouAAAAAAAAKy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKi4AAAAAAAAqLgAAAAAAAAAAAAAAAPC/"
				],
				[
					814,
					1,
					"insert",
					{
						"characters": "\nDoesn't"
					},
					"CAAAAFIoAAAAAAAAUygAAAAAAAAAAAAAUygAAAAAAABUKAAAAAAAAAAAAABUKAAAAAAAAFUoAAAAAAAAAAAAAFUoAAAAAAAAVigAAAAAAAAAAAAAVigAAAAAAABXKAAAAAAAAAAAAABXKAAAAAAAAFgoAAAAAAAAAAAAAFgoAAAAAAAAWSgAAAAAAAAAAAAAWSgAAAAAAABaKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUigAAAAAAABSKAAAAAAAAAAAAAAAAPC/"
				],
				[
					815,
					1,
					"insert",
					{
						"characters": " look"
					},
					"BQAAAFooAAAAAAAAWygAAAAAAAAAAAAAWygAAAAAAABcKAAAAAAAAAAAAABcKAAAAAAAAF0oAAAAAAAAAAAAAF0oAAAAAAAAXigAAAAAAAAAAAAAXigAAAAAAABfKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWigAAAAAAABaKAAAAAAAAAAAAAAAAPC/"
				],
				[
					816,
					1,
					"insert",
					{
						"characters": " li"
					},
					"AwAAAF8oAAAAAAAAYCgAAAAAAAAAAAAAYCgAAAAAAABhKAAAAAAAAAAAAABhKAAAAAAAAGIoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXygAAAAAAABfKAAAAAAAAAAAAAAAAPC/"
				],
				[
					818,
					1,
					"insert",
					{
						"characters": "For"
					},
					"BAAAAFMoAAAAAAAAVCgAAAAAAAAAAAAAVCgAAAAAAABUKAAAAAAAAA8AAABEb2Vzbid0IGxvb2sgbGlUKAAAAAAAAFUoAAAAAAAAAAAAAFUoAAAAAAAAVigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYigAAAAAAABTKAAAAAAAAAAAAAAAAAAA"
				],
				[
					819,
					1,
					"insert",
					{
						"characters": " most"
					},
					"BQAAAFYoAAAAAAAAVygAAAAAAAAAAAAAVygAAAAAAABYKAAAAAAAAAAAAABYKAAAAAAAAFkoAAAAAAAAAAAAAFkoAAAAAAAAWigAAAAAAAAAAAAAWigAAAAAAABbKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVigAAAAAAABWKAAAAAAAAAAAAAAAAPC/"
				],
				[
					820,
					1,
					"insert",
					{
						"characters": " exposures"
					},
					"CgAAAFsoAAAAAAAAXCgAAAAAAAAAAAAAXCgAAAAAAABdKAAAAAAAAAAAAABdKAAAAAAAAF4oAAAAAAAAAAAAAF4oAAAAAAAAXygAAAAAAAAAAAAAXygAAAAAAABgKAAAAAAAAAAAAABgKAAAAAAAAGEoAAAAAAAAAAAAAGEoAAAAAAAAYigAAAAAAAAAAAAAYigAAAAAAABjKAAAAAAAAAAAAABjKAAAAAAAAGQoAAAAAAAAAAAAAGQoAAAAAAAAZSgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWygAAAAAAABbKAAAAAAAAAAAAAAAAPC/"
				],
				[
					821,
					1,
					"insert",
					{
						"characters": " there"
					},
					"BgAAAGUoAAAAAAAAZigAAAAAAAAAAAAAZigAAAAAAABnKAAAAAAAAAAAAABnKAAAAAAAAGgoAAAAAAAAAAAAAGgoAAAAAAAAaSgAAAAAAAAAAAAAaSgAAAAAAABqKAAAAAAAAAAAAABqKAAAAAAAAGsoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZSgAAAAAAABlKAAAAAAAAAAAAAAAAPC/"
				],
				[
					822,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAGsoAAAAAAAAbCgAAAAAAAAAAAAAbCgAAAAAAABtKAAAAAAAAAAAAABtKAAAAAAAAG4oAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaygAAAAAAABrKAAAAAAAAAAAAAAAAPC/"
				],
				[
					823,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG4oAAAAAAAAbygAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbigAAAAAAABuKAAAAAAAAAAAAAAAAPC/"
				],
				[
					824,
					1,
					"insert",
					{
						"characters": "very"
					},
					"BAAAAG8oAAAAAAAAcCgAAAAAAAAAAAAAcCgAAAAAAABxKAAAAAAAAAAAAABxKAAAAAAAAHIoAAAAAAAAAAAAAHIoAAAAAAAAcygAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbygAAAAAAABvKAAAAAAAAAAAAAAAAPC/"
				],
				[
					825,
					1,
					"insert",
					{
						"characters": " little"
					},
					"BwAAAHMoAAAAAAAAdCgAAAAAAAAAAAAAdCgAAAAAAAB1KAAAAAAAAAAAAAB1KAAAAAAAAHYoAAAAAAAAAAAAAHYoAAAAAAAAdygAAAAAAAAAAAAAdygAAAAAAAB4KAAAAAAAAAAAAAB4KAAAAAAAAHkoAAAAAAAAAAAAAHkoAAAAAAAAeigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcygAAAAAAABzKAAAAAAAAAAAAAAAAPC/"
				],
				[
					826,
					1,
					"insert",
					{
						"characters": " evidence"
					},
					"CQAAAHooAAAAAAAAeygAAAAAAAAAAAAAeygAAAAAAAB8KAAAAAAAAAAAAAB8KAAAAAAAAH0oAAAAAAAAAAAAAH0oAAAAAAAAfigAAAAAAAAAAAAAfigAAAAAAAB/KAAAAAAAAAAAAAB/KAAAAAAAAIAoAAAAAAAAAAAAAIAoAAAAAAAAgSgAAAAAAAAAAAAAgSgAAAAAAACCKAAAAAAAAAAAAACCKAAAAAAAAIMoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeigAAAAAAAB6KAAAAAAAAAAAAAAAAPC/"
				],
				[
					827,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAIMoAAAAAAAAhCgAAAAAAAAAAAAAhCgAAAAAAACFKAAAAAAAAAAAAACFKAAAAAAAAIYoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgygAAAAAAACDKAAAAAAAAAAAAAAAAPC/"
				],
				[
					828,
					1,
					"insert",
					{
						"characters": " an"
					},
					"AwAAAIYoAAAAAAAAhygAAAAAAAAAAAAAhygAAAAAAACIKAAAAAAAAAAAAACIKAAAAAAAAIkoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhigAAAAAAACGKAAAAAAAAAAAAAAAAPC/"
				],
				[
					829,
					1,
					"insert",
					{
						"characters": " associations"
					},
					"DQAAAIkoAAAAAAAAiigAAAAAAAAAAAAAiigAAAAAAACLKAAAAAAAAAAAAACLKAAAAAAAAIwoAAAAAAAAAAAAAIwoAAAAAAAAjSgAAAAAAAAAAAAAjSgAAAAAAACOKAAAAAAAAAAAAACOKAAAAAAAAI8oAAAAAAAAAAAAAI8oAAAAAAAAkCgAAAAAAAAAAAAAkCgAAAAAAACRKAAAAAAAAAAAAACRKAAAAAAAAJIoAAAAAAAAAAAAAJIoAAAAAAAAkygAAAAAAAAAAAAAkygAAAAAAACUKAAAAAAAAAAAAACUKAAAAAAAAJUoAAAAAAAAAAAAAJUoAAAAAAAAligAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiSgAAAAAAACJKAAAAAAAAAAAAAAAAPC/"
				],
				[
					830,
					1,
					"left_delete",
					null,
					"AQAAAJUoAAAAAAAAlSgAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAligAAAAAAACWKAAAAAAAAAAAAAAAAPC/"
				],
				[
					831,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAJUoAAAAAAAAligAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlSgAAAAAAACVKAAAAAAAAAAAAAAAAPC/"
				],
				[
					832,
					1,
					"insert",
					{
						"characters": " However"
					},
					"CAAAAJYoAAAAAAAAlygAAAAAAAAAAAAAlygAAAAAAACYKAAAAAAAAAAAAACYKAAAAAAAAJkoAAAAAAAAAAAAAJkoAAAAAAAAmigAAAAAAAAAAAAAmigAAAAAAACbKAAAAAAAAAAAAACbKAAAAAAAAJwoAAAAAAAAAAAAAJwoAAAAAAAAnSgAAAAAAAAAAAAAnSgAAAAAAACeKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAligAAAAAAACWKAAAAAAAAAAAAAAAAPC/"
				],
				[
					833,
					1,
					"insert",
					{
						"characters": "\npossible"
					},
					"CQAAAJ4oAAAAAAAAnygAAAAAAAAAAAAAnygAAAAAAACgKAAAAAAAAAAAAACgKAAAAAAAAKEoAAAAAAAAAAAAAKEoAAAAAAAAoigAAAAAAAAAAAAAoigAAAAAAACjKAAAAAAAAAAAAACjKAAAAAAAAKQoAAAAAAAAAAAAAKQoAAAAAAAApSgAAAAAAAAAAAAApSgAAAAAAACmKAAAAAAAAAAAAACmKAAAAAAAAKcoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnigAAAAAAACeKAAAAAAAAAAAAAAAAPC/"
				],
				[
					834,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKcoAAAAAAAAqCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApygAAAAAAACnKAAAAAAAAAAAAAAAAPC/"
				],
				[
					835,
					7,
					"left_delete",
					null,
					"BwAAAKcoAAAAAAAApygAAAAAAAABAAAAIKYoAAAAAAAApigAAAAAAAABAAAAZaUoAAAAAAAApSgAAAAAAAABAAAAbKQoAAAAAAAApCgAAAAAAAABAAAAYqMoAAAAAAAAoygAAAAAAAABAAAAaaIoAAAAAAAAoigAAAAAAAABAAAAc6EoAAAAAAAAoSgAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAqCgAAAAAAACoKAAAAAAAAAAAAAAAAPC/"
				],
				[
					836,
					2,
					"left_delete",
					null,
					"AgAAAKAoAAAAAAAAoCgAAAAAAAABAAAAb58oAAAAAAAAnygAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAoSgAAAAAAAChKAAAAAAAAAAAAAAAAPC/"
				],
				[
					837,
					1,
					"insert",
					{
						"characters": "some"
					},
					"BAAAAJ8oAAAAAAAAoCgAAAAAAAAAAAAAoCgAAAAAAAChKAAAAAAAAAAAAAChKAAAAAAAAKIoAAAAAAAAAAAAAKIoAAAAAAAAoygAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnygAAAAAAACfKAAAAAAAAAAAAAAAAPC/"
				],
				[
					838,
					1,
					"insert",
					{
						"characters": " evidence"
					},
					"CQAAAKMoAAAAAAAApCgAAAAAAAAAAAAApCgAAAAAAAClKAAAAAAAAAAAAAClKAAAAAAAAKYoAAAAAAAAAAAAAKYoAAAAAAAApygAAAAAAAAAAAAApygAAAAAAACoKAAAAAAAAAAAAACoKAAAAAAAAKkoAAAAAAAAAAAAAKkoAAAAAAAAqigAAAAAAAAAAAAAqigAAAAAAACrKAAAAAAAAAAAAACrKAAAAAAAAKwoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoygAAAAAAACjKAAAAAAAAAAAAAAAAPC/"
				],
				[
					839,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAKwoAAAAAAAArSgAAAAAAAAAAAAArSgAAAAAAACuKAAAAAAAAAAAAACuKAAAAAAAAK8oAAAAAAAAAAAAAK8oAAAAAAAAsCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArCgAAAAAAACsKAAAAAAAAAAAAAAAAPC/"
				],
				[
					840,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAALAoAAAAAAAAsSgAAAAAAAAAAAAAsSgAAAAAAACyKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsCgAAAAAAACwKAAAAAAAAAAAAAAAAPC/"
				],
				[
					841,
					1,
					"insert",
					{
						"characters": " negative"
					},
					"CQAAALIoAAAAAAAAsygAAAAAAAAAAAAAsygAAAAAAAC0KAAAAAAAAAAAAAC0KAAAAAAAALUoAAAAAAAAAAAAALUoAAAAAAAAtigAAAAAAAAAAAAAtigAAAAAAAC3KAAAAAAAAAAAAAC3KAAAAAAAALgoAAAAAAAAAAAAALgoAAAAAAAAuSgAAAAAAAAAAAAAuSgAAAAAAAC6KAAAAAAAAAAAAAC6KAAAAAAAALsoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsigAAAAAAACyKAAAAAAAAAAAAAAAAPC/"
				],
				[
					842,
					1,
					"insert",
					{
						"characters": " association"
					},
					"DAAAALsoAAAAAAAAvCgAAAAAAAAAAAAAvCgAAAAAAAC9KAAAAAAAAAAAAAC9KAAAAAAAAL4oAAAAAAAAAAAAAL4oAAAAAAAAvygAAAAAAAAAAAAAvygAAAAAAADAKAAAAAAAAAAAAADAKAAAAAAAAMEoAAAAAAAAAAAAAMEoAAAAAAAAwigAAAAAAAAAAAAAwigAAAAAAADDKAAAAAAAAAAAAADDKAAAAAAAAMQoAAAAAAAAAAAAAMQoAAAAAAAAxSgAAAAAAAAAAAAAxSgAAAAAAADGKAAAAAAAAAAAAADGKAAAAAAAAMcoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuygAAAAAAAC7KAAAAAAAAAAAAAAAAPC/"
				],
				[
					843,
					1,
					"insert",
					{
						"characters": " between"
					},
					"CAAAAMcoAAAAAAAAyCgAAAAAAAAAAAAAyCgAAAAAAADJKAAAAAAAAAAAAADJKAAAAAAAAMooAAAAAAAAAAAAAMooAAAAAAAAyygAAAAAAAAAAAAAyygAAAAAAADMKAAAAAAAAAAAAADMKAAAAAAAAM0oAAAAAAAAAAAAAM0oAAAAAAAAzigAAAAAAAAAAAAAzigAAAAAAADPKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxygAAAAAAADHKAAAAAAAAAAAAAAAAPC/"
				],
				[
					844,
					1,
					"insert",
					{
						"characters": " NDCI"
					},
					"BQAAAM8oAAAAAAAA0CgAAAAAAAAAAAAA0CgAAAAAAADRKAAAAAAAAAAAAADRKAAAAAAAANIoAAAAAAAAAAAAANIoAAAAAAAA0ygAAAAAAAAAAAAA0ygAAAAAAADUKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzygAAAAAAADPKAAAAAAAAAAAAAAAAPC/"
				],
				[
					845,
					2,
					"left_delete",
					null,
					"AgAAANMoAAAAAAAA0ygAAAAAAAABAAAASdIoAAAAAAAA0igAAAAAAAABAAAAQw",
					"AQAAAAAAAAABAAAA1CgAAAAAAADUKAAAAAAAAAAAAAAAAPC/"
				],
				[
					846,
					1,
					"insert",
					{
						"characters": "VI"
					},
					"AgAAANIoAAAAAAAA0ygAAAAAAAAAAAAA0ygAAAAAAADUKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0igAAAAAAADSKAAAAAAAAAAAAAAAAPC/"
				],
				[
					847,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAANQoAAAAAAAA1SgAAAAAAAAAAAAA1SgAAAAAAADWKAAAAAAAAAAAAADWKAAAAAAAANcoAAAAAAAAAAAAANcoAAAAAAAA2CgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1CgAAAAAAADUKAAAAAAAAAAAAAAAAPC/"
				],
				[
					848,
					1,
					"insert",
					{
						"characters": " PND"
					},
					"BAAAANgoAAAAAAAA2SgAAAAAAAAAAAAA2SgAAAAAAADaKAAAAAAAAAAAAADaKAAAAAAAANsoAAAAAAAAAAAAANsoAAAAAAAA3CgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2CgAAAAAAADYKAAAAAAAAAAAAAAAAPC/"
				],
				[
					849,
					3,
					"left_delete",
					null,
					"AwAAANsoAAAAAAAA2ygAAAAAAAABAAAARNooAAAAAAAA2igAAAAAAAABAAAATtkoAAAAAAAA2SgAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAA3CgAAAAAAADcKAAAAAAAAAAAAAAAAPC/"
				],
				[
					850,
					1,
					"insert",
					{
						"characters": "postnatal"
					},
					"CQAAANkoAAAAAAAA2igAAAAAAAAAAAAA2igAAAAAAADbKAAAAAAAAAAAAADbKAAAAAAAANwoAAAAAAAAAAAAANwoAAAAAAAA3SgAAAAAAAAAAAAA3SgAAAAAAADeKAAAAAAAAAAAAADeKAAAAAAAAN8oAAAAAAAAAAAAAN8oAAAAAAAA4CgAAAAAAAAAAAAA4CgAAAAAAADhKAAAAAAAAAAAAADhKAAAAAAAAOIoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2SgAAAAAAADZKAAAAAAAAAAAAAAAAPC/"
				],
				[
					851,
					1,
					"insert",
					{
						"characters": " depression,"
					},
					"DAAAAOIoAAAAAAAA4ygAAAAAAAAAAAAA4ygAAAAAAADkKAAAAAAAAAAAAADkKAAAAAAAAOUoAAAAAAAAAAAAAOUoAAAAAAAA5igAAAAAAAAAAAAA5igAAAAAAADnKAAAAAAAAAAAAADnKAAAAAAAAOgoAAAAAAAAAAAAAOgoAAAAAAAA6SgAAAAAAAAAAAAA6SgAAAAAAADqKAAAAAAAAAAAAADqKAAAAAAAAOsoAAAAAAAAAAAAAOsoAAAAAAAA7CgAAAAAAAAAAAAA7CgAAAAAAADtKAAAAAAAAAAAAADtKAAAAAAAAO4oAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4igAAAAAAADiKAAAAAAAAAAAAAAAAPC/"
				],
				[
					852,
					1,
					"insert",
					{
						"characters": "\nand"
					},
					"BAAAAO4oAAAAAAAA7ygAAAAAAAAAAAAA7ygAAAAAAADwKAAAAAAAAAAAAADwKAAAAAAAAPEoAAAAAAAAAAAAAPEoAAAAAAAA8igAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7igAAAAAAADuKAAAAAAAAAAAAAAAAPC/"
				],
				[
					853,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAPIoAAAAAAAA8ygAAAAAAAAAAAAA8ygAAAAAAAD0KAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8igAAAAAAADyKAAAAAAAAAAAAAAAAPC/"
				],
				[
					854,
					1,
					"insert",
					{
						"characters": " positive"
					},
					"CQAAAPQoAAAAAAAA9SgAAAAAAAAAAAAA9SgAAAAAAAD2KAAAAAAAAAAAAAD2KAAAAAAAAPcoAAAAAAAAAAAAAPcoAAAAAAAA+CgAAAAAAAAAAAAA+CgAAAAAAAD5KAAAAAAAAAAAAAD5KAAAAAAAAPooAAAAAAAAAAAAAPooAAAAAAAA+ygAAAAAAAAAAAAA+ygAAAAAAAD8KAAAAAAAAAAAAAD8KAAAAAAAAP0oAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9CgAAAAAAAD0KAAAAAAAAAAAAAAAAPC/"
				],
				[
					855,
					1,
					"insert",
					{
						"characters": " association"
					},
					"DAAAAP0oAAAAAAAA/igAAAAAAAAAAAAA/igAAAAAAAD/KAAAAAAAAAAAAAD/KAAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAASkAAAAAAAAAAAAAASkAAAAAAAACKQAAAAAAAAAAAAACKQAAAAAAAAMpAAAAAAAAAAAAAAMpAAAAAAAABCkAAAAAAAAAAAAABCkAAAAAAAAFKQAAAAAAAAAAAAAFKQAAAAAAAAYpAAAAAAAAAAAAAAYpAAAAAAAABykAAAAAAAAAAAAABykAAAAAAAAIKQAAAAAAAAAAAAAIKQAAAAAAAAkpAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/SgAAAAAAAD9KAAAAAAAAAAAAAAAAPC/"
				],
				[
					856,
					1,
					"insert",
					{
						"characters": " between"
					},
					"CAAAAAkpAAAAAAAACikAAAAAAAAAAAAACikAAAAAAAALKQAAAAAAAAAAAAALKQAAAAAAAAwpAAAAAAAAAAAAAAwpAAAAAAAADSkAAAAAAAAAAAAADSkAAAAAAAAOKQAAAAAAAAAAAAAOKQAAAAAAAA8pAAAAAAAAAAAAAA8pAAAAAAAAECkAAAAAAAAAAAAAECkAAAAAAAARKQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACSkAAAAAAAAJKQAAAAAAAAAAAAAAAPC/"
				],
				[
					857,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABEpAAAAAAAAEikAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAESkAAAAAAAARKQAAAAAAAAAAAAAAAPC/"
				],
				[
					858,
					1,
					"insert",
					{
						"characters": "pm"
					},
					"AgAAABIpAAAAAAAAEykAAAAAAAAAAAAAEykAAAAAAAAUKQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEikAAAAAAAASKQAAAAAAAAAAAAAAAPC/"
				],
				[
					859,
					2,
					"left_delete",
					null,
					"AgAAABMpAAAAAAAAEykAAAAAAAABAAAAbRIpAAAAAAAAEikAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAFCkAAAAAAAAUKQAAAAAAAAAAAAAAAPC/"
				],
				[
					860,
					1,
					"insert",
					{
						"characters": "PM2.3"
					},
					"BQAAABIpAAAAAAAAEykAAAAAAAAAAAAAEykAAAAAAAAUKQAAAAAAAAAAAAAUKQAAAAAAABUpAAAAAAAAAAAAABUpAAAAAAAAFikAAAAAAAAAAAAAFikAAAAAAAAXKQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEikAAAAAAAASKQAAAAAAAAAAAAAAAPC/"
				],
				[
					861,
					1,
					"left_delete",
					null,
					"AQAAABYpAAAAAAAAFikAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAFykAAAAAAAAXKQAAAAAAAAAAAAAAAPC/"
				],
				[
					862,
					1,
					"insert",
					{
						"characters": "45"
					},
					"AgAAABYpAAAAAAAAFykAAAAAAAAAAAAAFykAAAAAAAAYKQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFikAAAAAAAAWKQAAAAAAAAAAAAAAAPC/"
				],
				[
					863,
					2,
					"left_delete",
					null,
					"AgAAABcpAAAAAAAAFykAAAAAAAABAAAANRYpAAAAAAAAFikAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAGCkAAAAAAAAYKQAAAAAAAAAAAAAAAPC/"
				],
				[
					864,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAABYpAAAAAAAAFykAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFikAAAAAAAAWKQAAAAAAAAAAAAAAAPC/"
				],
				[
					865,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAABcpAAAAAAAAGCkAAAAAAAAAAAAAGCkAAAAAAAAZKQAAAAAAAAAAAAAZKQAAAAAAABopAAAAAAAAAAAAABopAAAAAAAAGykAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFykAAAAAAAAXKQAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"insert",
					{
						"characters": " PND."
					},
					"BQAAABspAAAAAAAAHCkAAAAAAAAAAAAAHCkAAAAAAAAdKQAAAAAAAAAAAAAdKQAAAAAAAB4pAAAAAAAAAAAAAB4pAAAAAAAAHykAAAAAAAAAAAAAHykAAAAAAAAgKQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGykAAAAAAAAbKQAAAAAAAAAAAAAAAPC/"
				],
				[
					867,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACApAAAAAAAAISkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAICkAAAAAAAAgKQAAAAAAAAAAAAAAAPC/"
				],
				[
					872,
					1,
					"insert",
					{
						"characters": " small"
					},
					"BgAAALIoAAAAAAAAsygAAAAAAAAAAAAAsygAAAAAAAC0KAAAAAAAAAAAAAC0KAAAAAAAALUoAAAAAAAAAAAAALUoAAAAAAAAtigAAAAAAAAAAAAAtigAAAAAAAC3KAAAAAAAAAAAAAC3KAAAAAAAALgoAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsigAAAAAAACyKAAAAAAAAAAAAAAAAPC/"
				],
				[
					878,
					1,
					"insert",
					{
						"characters": " small"
					},
					"BgAAAPooAAAAAAAA+ygAAAAAAAAAAAAA+ygAAAAAAAD8KAAAAAAAAAAAAAD8KAAAAAAAAP0oAAAAAAAAAAAAAP0oAAAAAAAA/igAAAAAAAAAAAAA/igAAAAAAAD/KAAAAAAAAAAAAAD/KAAAAAAAAAApAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+igAAAAAAAD6KAAAAAAAAAAAAAAAAPC/"
				],
				[
					880,
					1,
					"insert",
					{
						"characters": "However"
					},
					"BwAAAC0pAAAAAAAALikAAAAAAAAAAAAALikAAAAAAAAvKQAAAAAAAAAAAAAvKQAAAAAAADApAAAAAAAAAAAAADApAAAAAAAAMSkAAAAAAAAAAAAAMSkAAAAAAAAyKQAAAAAAAAAAAAAyKQAAAAAAADMpAAAAAAAAAAAAADMpAAAAAAAANCkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALSkAAAAAAAAtKQAAAAAAAP///////+9/"
				],
				[
					881,
					1,
					"insert",
					{
						"characters": " h"
					},
					"AgAAADQpAAAAAAAANSkAAAAAAAAAAAAANSkAAAAAAAA2KQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANCkAAAAAAAA0KQAAAAAAAAAAAAAAAPC/"
				],
				[
					882,
					1,
					"left_delete",
					null,
					"AQAAADUpAAAAAAAANSkAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAANikAAAAAAAA2KQAAAAAAAAAAAAAAAPC/"
				],
				[
					883,
					1,
					"insert",
					{
						"characters": "there"
					},
					"BQAAADUpAAAAAAAANikAAAAAAAAAAAAANikAAAAAAAA3KQAAAAAAAAAAAAA3KQAAAAAAADgpAAAAAAAAAAAAADgpAAAAAAAAOSkAAAAAAAAAAAAAOSkAAAAAAAA6KQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANSkAAAAAAAA1KQAAAAAAAAAAAAAAAPC/"
				],
				[
					884,
					2,
					"left_delete",
					null,
					"AgAAADkpAAAAAAAAOSkAAAAAAAABAAAAZTgpAAAAAAAAOCkAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAOikAAAAAAAA6KQAAAAAAAAAAAAAAAPC/"
				],
				[
					885,
					1,
					"insert",
					{
						"characters": "se"
					},
					"AgAAADgpAAAAAAAAOSkAAAAAAAAAAAAAOSkAAAAAAAA6KQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOCkAAAAAAAA4KQAAAAAAAAAAAAAAAPC/"
				],
				[
					886,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAADopAAAAAAAAOykAAAAAAAAAAAAAOykAAAAAAAA8KQAAAAAAAAAAAAA8KQAAAAAAAD0pAAAAAAAAAAAAAD0pAAAAAAAAPikAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOikAAAAAAAA6KQAAAAAAAAAAAAAAAPC/"
				],
				[
					887,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD4pAAAAAAAAPykAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPikAAAAAAAA+KQAAAAAAAAAAAAAAAPC/"
				],
				[
					888,
					1,
					"insert",
					{
						"characters": "\nunadjusted"
					},
					"CwAAAD8pAAAAAAAAQCkAAAAAAAAAAAAAQCkAAAAAAABBKQAAAAAAAAAAAABBKQAAAAAAAEIpAAAAAAAAAAAAAEIpAAAAAAAAQykAAAAAAAAAAAAAQykAAAAAAABEKQAAAAAAAAAAAABEKQAAAAAAAEUpAAAAAAAAAAAAAEUpAAAAAAAARikAAAAAAAAAAAAARikAAAAAAABHKQAAAAAAAAAAAABHKQAAAAAAAEgpAAAAAAAAAAAAAEgpAAAAAAAASSkAAAAAAAAAAAAASSkAAAAAAABKKQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPykAAAAAAAA/KQAAAAAAAAAAAAAAAPC/"
				],
				[
					889,
					1,
					"insert",
					{
						"characters": " models"
					},
					"BwAAAEopAAAAAAAASykAAAAAAAAAAAAASykAAAAAAABMKQAAAAAAAAAAAABMKQAAAAAAAE0pAAAAAAAAAAAAAE0pAAAAAAAATikAAAAAAAAAAAAATikAAAAAAABPKQAAAAAAAAAAAABPKQAAAAAAAFApAAAAAAAAAAAAAFApAAAAAAAAUSkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASikAAAAAAABKKQAAAAAAAAAAAAAAAPC/"
				],
				[
					890,
					1,
					"insert",
					{
						"characters": " so"
					},
					"AwAAAFEpAAAAAAAAUikAAAAAAAAAAAAAUikAAAAAAABTKQAAAAAAAAAAAABTKQAAAAAAAFQpAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUSkAAAAAAABRKQAAAAAAAAAAAAAAAPC/"
				],
				[
					891,
					1,
					"insert",
					{
						"characters": " m"
					},
					"AgAAAFQpAAAAAAAAVSkAAAAAAAAAAAAAVSkAAAAAAABWKQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVCkAAAAAAABUKQAAAAAAAAAAAAAAAPC/"
				],
				[
					892,
					1,
					"left_delete",
					null,
					"AQAAAFUpAAAAAAAAVSkAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAVikAAAAAAABWKQAAAAAAAAAAAAAAAPC/"
				],
				[
					893,
					1,
					"insert",
					{
						"characters": "will"
					},
					"BAAAAFUpAAAAAAAAVikAAAAAAAAAAAAAVikAAAAAAABXKQAAAAAAAAAAAABXKQAAAAAAAFgpAAAAAAAAAAAAAFgpAAAAAAAAWSkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVSkAAAAAAABVKQAAAAAAAAAAAAAAAPC/"
				],
				[
					894,
					1,
					"insert",
					{
						"characters": " likely"
					},
					"BwAAAFkpAAAAAAAAWikAAAAAAAAAAAAAWikAAAAAAABbKQAAAAAAAAAAAABbKQAAAAAAAFwpAAAAAAAAAAAAAFwpAAAAAAAAXSkAAAAAAAAAAAAAXSkAAAAAAABeKQAAAAAAAAAAAABeKQAAAAAAAF8pAAAAAAAAAAAAAF8pAAAAAAAAYCkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWSkAAAAAAABZKQAAAAAAAAAAAAAAAPC/"
				],
				[
					895,
					1,
					"insert",
					{
						"characters": " attenuate"
					},
					"CgAAAGApAAAAAAAAYSkAAAAAAAAAAAAAYSkAAAAAAABiKQAAAAAAAAAAAABiKQAAAAAAAGMpAAAAAAAAAAAAAGMpAAAAAAAAZCkAAAAAAAAAAAAAZCkAAAAAAABlKQAAAAAAAAAAAABlKQAAAAAAAGYpAAAAAAAAAAAAAGYpAAAAAAAAZykAAAAAAAAAAAAAZykAAAAAAABoKQAAAAAAAAAAAABoKQAAAAAAAGkpAAAAAAAAAAAAAGkpAAAAAAAAaikAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYCkAAAAAAABgKQAAAAAAAAAAAAAAAPC/"
				],
				[
					896,
					1,
					"insert",
					{
						"characters": " when"
					},
					"BQAAAGopAAAAAAAAaykAAAAAAAAAAAAAaykAAAAAAABsKQAAAAAAAAAAAABsKQAAAAAAAG0pAAAAAAAAAAAAAG0pAAAAAAAAbikAAAAAAAAAAAAAbikAAAAAAABvKQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaikAAAAAAABqKQAAAAAAAAAAAAAAAPC/"
				],
				[
					897,
					1,
					"insert",
					{
						"characters": " including"
					},
					"CgAAAG8pAAAAAAAAcCkAAAAAAAAAAAAAcCkAAAAAAABxKQAAAAAAAAAAAABxKQAAAAAAAHIpAAAAAAAAAAAAAHIpAAAAAAAAcykAAAAAAAAAAAAAcykAAAAAAAB0KQAAAAAAAAAAAAB0KQAAAAAAAHUpAAAAAAAAAAAAAHUpAAAAAAAAdikAAAAAAAAAAAAAdikAAAAAAAB3KQAAAAAAAAAAAAB3KQAAAAAAAHgpAAAAAAAAAAAAAHgpAAAAAAAAeSkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbykAAAAAAABvKQAAAAAAAAAAAAAAAPC/"
				],
				[
					898,
					1,
					"insert",
					{
						"characters": " confounders."
					},
					"DQAAAHkpAAAAAAAAeikAAAAAAAAAAAAAeikAAAAAAAB7KQAAAAAAAAAAAAB7KQAAAAAAAHwpAAAAAAAAAAAAAHwpAAAAAAAAfSkAAAAAAAAAAAAAfSkAAAAAAAB+KQAAAAAAAAAAAAB+KQAAAAAAAH8pAAAAAAAAAAAAAH8pAAAAAAAAgCkAAAAAAAAAAAAAgCkAAAAAAACBKQAAAAAAAAAAAACBKQAAAAAAAIIpAAAAAAAAAAAAAIIpAAAAAAAAgykAAAAAAAAAAAAAgykAAAAAAACEKQAAAAAAAAAAAACEKQAAAAAAAIUpAAAAAAAAAAAAAIUpAAAAAAAAhikAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeSkAAAAAAAB5KQAAAAAAAAAAAAAAAPC/"
				],
				[
					904,
					1,
					"insert",
					{
						"characters": "."
					},
					"AgAAAGopAAAAAAAAaykAAAAAAAAAAAAAaykAAAAAAABrKQAAAAAAABwAAAAgd2hlbiBpbmNsdWRpbmcgY29uZm91bmRlcnMu",
					"AQAAAAAAAAABAAAAaikAAAAAAACGKQAAAAAAAP///////+9/"
				],
				[
					907,
					1,
					"insert",
					{
						"characters": "Decide"
					},
					"BwAAAL9BAAAAAAAAwEEAAAAAAAAAAAAAwEEAAAAAAADAQQAAAAAAABsAAABIYXJtb25pc2UgRE5CQyBQTkQgdmFyaWFibGXAQQAAAAAAAMFBAAAAAAAAAAAAAMFBAAAAAAAAwkEAAAAAAAAAAAAAwkEAAAAAAADDQQAAAAAAAAAAAADDQQAAAAAAAMRBAAAAAAAAAAAAAMRBAAAAAAAAxUEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2kEAAAAAAAC/QQAAAAAAAAAAAAAAAPC/"
				],
				[
					908,
					1,
					"insert",
					{
						"characters": " how"
					},
					"BAAAAMVBAAAAAAAAxkEAAAAAAAAAAAAAxkEAAAAAAADHQQAAAAAAAAAAAADHQQAAAAAAAMhBAAAAAAAAAAAAAMhBAAAAAAAAyUEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxUEAAAAAAADFQQAAAAAAAAAAAAAAAPC/"
				],
				[
					909,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAMlBAAAAAAAAykEAAAAAAAAAAAAAykEAAAAAAADLQQAAAAAAAAAAAADLQQAAAAAAAMxBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyUEAAAAAAADJQQAAAAAAAAAAAAAAAPC/"
				],
				[
					910,
					1,
					"left_delete",
					null,
					"AQAAAMtBAAAAAAAAy0EAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAzEEAAAAAAADMQQAAAAAAAAAAAAAAAPC/"
				],
				[
					911,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAMtBAAAAAAAAzEEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAy0EAAAAAAADLQQAAAAAAAAAAAAAAAPC/"
				],
				[
					912,
					1,
					"insert",
					{
						"characters": " harmonise"
					},
					"CgAAAMxBAAAAAAAAzUEAAAAAAAAAAAAAzUEAAAAAAADOQQAAAAAAAAAAAADOQQAAAAAAAM9BAAAAAAAAAAAAAM9BAAAAAAAA0EEAAAAAAAAAAAAA0EEAAAAAAADRQQAAAAAAAAAAAADRQQAAAAAAANJBAAAAAAAAAAAAANJBAAAAAAAA00EAAAAAAAAAAAAA00EAAAAAAADUQQAAAAAAAAAAAADUQQAAAAAAANVBAAAAAAAAAAAAANVBAAAAAAAA1kEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzEEAAAAAAADMQQAAAAAAAAAAAAAAAPC/"
				],
				[
					913,
					1,
					"insert",
					{
						"characters": " DNBC"
					},
					"BQAAANZBAAAAAAAA10EAAAAAAAAAAAAA10EAAAAAAADYQQAAAAAAAAAAAADYQQAAAAAAANlBAAAAAAAAAAAAANlBAAAAAAAA2kEAAAAAAAAAAAAA2kEAAAAAAADbQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1kEAAAAAAADWQQAAAAAAAAAAAAAAAPC/"
				],
				[
					914,
					1,
					"insert",
					{
						"characters": " PPD"
					},
					"BAAAANtBAAAAAAAA3EEAAAAAAAAAAAAA3EEAAAAAAADdQQAAAAAAAAAAAADdQQAAAAAAAN5BAAAAAAAAAAAAAN5BAAAAAAAA30EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA20EAAAAAAADbQQAAAAAAAAAAAAAAAPC/"
				],
				[
					915,
					1,
					"insert",
					{
						"characters": " variable"
					},
					"CQAAAN9BAAAAAAAA4EEAAAAAAAAAAAAA4EEAAAAAAADhQQAAAAAAAAAAAADhQQAAAAAAAOJBAAAAAAAAAAAAAOJBAAAAAAAA40EAAAAAAAAAAAAA40EAAAAAAADkQQAAAAAAAAAAAADkQQAAAAAAAOVBAAAAAAAAAAAAAOVBAAAAAAAA5kEAAAAAAAAAAAAA5kEAAAAAAADnQQAAAAAAAAAAAADnQQAAAAAAAOhBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA30EAAAAAAADfQQAAAAAAAAAAAAAAAPC/"
				],
				[
					920,
					3,
					"right_delete",
					null,
					"AwAAAOlBAAAAAAAA6UEAAAAAAAAxAAAAMi4gRGVzY3JpcHRpdmVzIGZvciBETkJDIGV4cG9zdXJlcyB3aGVuIGF2YWlsYWJsZelBAAAAAAAA6UEAAAAAAAABAAAACulBAAAAAAAA6UEAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAGkIAAAAAAADpQQAAAAAAAAAAAAAAAAAA"
				],
				[
					921,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAOlBAAAAAAAA6kEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6UEAAAAAAADpQQAAAAAAAAAAAAAAAPC/"
				],
				[
					923,
					1,
					"left_delete",
					null,
					"AQAAABVCAAAAAAAAFUIAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAFkIAAAAAAAAWQgAAAAAAAAAAAAAAABxA"
				],
				[
					924,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAABVCAAAAAAAAFkIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFUIAAAAAAAAVQgAAAAAAAAAAAAAAAPC/"
				],
				[
					926,
					1,
					"left_delete",
					null,
					"AQAAAD1CAAAAAAAAPUIAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAPkIAAAAAAAA+QgAAAAAAAAAAAAAAABxA"
				],
				[
					927,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAD1CAAAAAAAAPkIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPUIAAAAAAAA9QgAAAAAAAAAAAAAAAPC/"
				],
				[
					932,
					1,
					"left_delete",
					null,
					"AQAAAFIFAAAAAAAAUgUAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAUwUAAAAAAABTBQAAAAAAAAAAAAAAAPC/"
				],
				[
					939,
					1,
					"left_delete",
					null,
					"AQAAAH8FAAAAAAAAfwUAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAgAUAAAAAAACABQAAAAAAAAAAAAAAAPC/"
				],
				[
					940,
					1,
					"insert",
					{
						"characters": "14"
					},
					"AgAAAH8FAAAAAAAAgAUAAAAAAAAAAAAAgAUAAAAAAACBBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwUAAAAAAAB/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					941,
					1,
					"right_delete",
					null,
					"AQAAAIEFAAAAAAAAgQUAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAgQUAAAAAAACBBQAAAAAAAAAAAAAAAPC/"
				],
				[
					943,
					1,
					"left_delete",
					null,
					"AQAAAH4FAAAAAAAAfgUAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAfwUAAAAAAAB/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					945,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAIAFAAAAAAAAgQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAUAAAAAAACABQAAAAAAAAAAAAAAAPC/"
				],
				[
					953,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAFIFAAAAAAAAUwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgUAAAAAAABSBQAAAAAAAAAAAAAAAPC/"
				],
				[
					963,
					3,
					"left_delete",
					null,
					"AwAAAFYAAAAAAAAAVgAAAAAAAAABAAAAZFUAAAAAAAAAVQAAAAAAAAABAAAAblQAAAAAAAAAVAAAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					964,
					1,
					"insert",
					{
						"characters": "14th"
					},
					"BAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAAVQAAAAAAAABWAAAAAAAAAAAAAABWAAAAAAAAAFcAAAAAAAAAAAAAAFcAAAAAAAAAWAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAAAAAAAAABUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					965,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFgAAAAAAAAAWQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					966,
					1,
					"left_delete",
					null,
					"AQAAAFgAAAAAAAAAWAAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					969,
					3,
					"right_delete",
					null,
					"AwAAAD8IAAAAAAAAPwgAAAAAAAABAAAAZT8IAAAAAAAAPwgAAAAAAAABAAAAYT8IAAAAAAAAPwgAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAPwgAAAAAAAA/CAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "env-pnd.sublime-project",
			"settings":
			{
				"buffer_size": 111,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/timcadman/OneDrive - University of Bristol/repos/useful-code-r/code/themes/themes.R",
			"redo_stack":
			[
				[
					77,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAIUTAAAAAAAAhRMAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhhMAAAAAAACGEwAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIMTAAAAAAAAgxMAAAAAAAACAAAAKCk",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhBMAAAAAAACEEwAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"left_delete",
					null,
					"AQAAAIMTAAAAAAAAhBMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgxMAAAAAAACDEwAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "blank)"
					},
					"BgAAAIMTAAAAAAAAgxMAAAAAAAABAAAAKYITAAAAAAAAghMAAAAAAAABAAAAa4ETAAAAAAAAgRMAAAAAAAABAAAAboATAAAAAAAAgBMAAAAAAAABAAAAYX8TAAAAAAAAfxMAAAAAAAABAAAAbH4TAAAAAAAAfhMAAAAAAAABAAAAYg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhBMAAAAAAACEEwAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"left_delete",
					null,
					"AQAAAH4TAAAAAAAAfxMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfhMAAAAAAAB+EwAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " element_n"
					},
					"CgAAAH4TAAAAAAAAfhMAAAAAAAABAAAAbn0TAAAAAAAAfRMAAAAAAAABAAAAX3wTAAAAAAAAfBMAAAAAAAABAAAAdHsTAAAAAAAAexMAAAAAAAABAAAAbnoTAAAAAAAAehMAAAAAAAABAAAAZXkTAAAAAAAAeRMAAAAAAAABAAAAbXgTAAAAAAAAeBMAAAAAAAABAAAAZXcTAAAAAAAAdxMAAAAAAAABAAAAbHYTAAAAAAAAdhMAAAAAAAABAAAAZXUTAAAAAAAAdRMAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfxMAAAAAAAB/EwAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"paste",
					null,
					"AQAAAGgTAAAAAAAAaBMAAAAAAAANAAAAYXhpcy50ZXh0LnggPQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdRMAAAAAAAB1EwAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGYTAAAAAAAAZhMAAAAAAAACAAAAICBlEwAAAAAAAGUTAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaBMAAAAAAABoEwAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGQTAAAAAAAAZBMAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZRMAAAAAAABlEwAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGMTAAAAAAAAYxMAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZBMAAAAAAABkEwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"AgAAAGMTAAAAAAAAZBMAAAAAAAAAAAAAZBMAAAAAAABlEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYxMAAAAAAABjEwAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 4967,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAP0SAAAAAAAA/hIAAAAAAAAAAAAA/hIAAAAAAAAAEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/RIAAAAAAAD9EgAAAAAAAAAAAAAAoHBA"
				],
				[
					10,
					1,
					"paste",
					null,
					"AQAAAAATAAAAAAAAGRMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEATAAAAAAAAQRMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQBMAAAAAAABAEwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEETAAAAAAAAQhMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQRMAAAAAAABBEwAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\nax"
					},
					"BAAAAEITAAAAAAAAQxMAAAAAAAAAAAAAQxMAAAAAAABFEwAAAAAAAAAAAABFEwAAAAAAAEYTAAAAAAAAAAAAAEYTAAAAAAAARxMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQhMAAAAAAABCEwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "is.title.y"
					},
					"CgAAAEcTAAAAAAAASBMAAAAAAAAAAAAASBMAAAAAAABJEwAAAAAAAAAAAABJEwAAAAAAAEoTAAAAAAAAAAAAAEoTAAAAAAAASxMAAAAAAAAAAAAASxMAAAAAAABMEwAAAAAAAAAAAABMEwAAAAAAAE0TAAAAAAAAAAAAAE0TAAAAAAAAThMAAAAAAAAAAAAAThMAAAAAAABPEwAAAAAAAAAAAABPEwAAAAAAAFATAAAAAAAAAAAAAFATAAAAAAAAURMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARxMAAAAAAABHEwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFETAAAAAAAAUhMAAAAAAAAAAAAAUhMAAAAAAABTEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAURMAAAAAAABREwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " element"
					},
					"CAAAAFMTAAAAAAAAVBMAAAAAAAAAAAAAVBMAAAAAAABVEwAAAAAAAAAAAABVEwAAAAAAAFYTAAAAAAAAAAAAAFYTAAAAAAAAVxMAAAAAAAAAAAAAVxMAAAAAAABYEwAAAAAAAAAAAABYEwAAAAAAAFkTAAAAAAAAAAAAAFkTAAAAAAAAWhMAAAAAAAAAAAAAWhMAAAAAAABbEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUxMAAAAAAABTEwAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFsTAAAAAAAAXRMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWxMAAAAAAABbEwAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": ";n"
					},
					"AgAAAFwTAAAAAAAAXRMAAAAAAAAAAAAAXRMAAAAAAABeEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXBMAAAAAAABcEwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					2,
					"left_delete",
					null,
					"AgAAAF0TAAAAAAAAXRMAAAAAAAABAAAAblwTAAAAAAAAXBMAAAAAAAABAAAAOw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXhMAAAAAAABeEwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAFsTAAAAAAAAWxMAAAAAAAABAAAAKFsTAAAAAAAAWxMAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXBMAAAAAAABcEwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "_blank"
					},
					"BgAAAFsTAAAAAAAAXBMAAAAAAAAAAAAAXBMAAAAAAABdEwAAAAAAAAAAAABdEwAAAAAAAF4TAAAAAAAAAAAAAF4TAAAAAAAAXxMAAAAAAAAAAAAAXxMAAAAAAABgEwAAAAAAAAAAAABgEwAAAAAAAGETAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWxMAAAAAAABbEwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGETAAAAAAAAYxMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYRMAAAAAAABhEwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/Users/timcadman/OneDrive - University of Bristol/repos/lc-other/code/testing-dem-splines.R",
			"settings":
			{
				"buffer_size": 1269,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAAN4DAAAAAAAA3gMAAAAAAAABAAAANQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3wMAAAAAAADfAwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "20"
					},
					"AgAAAN4DAAAAAAAA3wMAAAAAAAAAAAAA3wMAAAAAAADgAwAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3gMAAAAAAADeAwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					2,
					"left_delete",
					null,
					"AgAAABEEAAAAAAAAEQQAAAAAAAABAAAAPRAEAAAAAAAAEAQAAAAAAAABAAAAPQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEgQAAAAAAAASBAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAABAEAAAAAAAAEQQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEAQAAAAAAAAQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"right_delete",
					null,
					"AQAAABIEAAAAAAAAEgQAAAAAAAABAAAAMA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEgQAAAAAAAASBAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "25"
					},
					"AgAAABIEAAAAAAAAEwQAAAAAAAAAAAAAEwQAAAAAAAAUBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEgQAAAAAAAASBAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"right_delete",
					null,
					"AQAAABYEAAAAAAAAFgQAAAAAAAABAAAANQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFgQAAAAAAAAWBAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "25"
					},
					"AgAAABYEAAAAAAAAFwQAAAAAAAAAAAAAFwQAAAAAAAAYBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFgQAAAAAAAAWBAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					4,
					"right_delete",
					null,
					"BAAAABoEAAAAAAAAGgQAAAAAAAABAAAAcxoEAAAAAAAAGgQAAAAAAAABAAAAMhoEAAAAAAAAGgQAAAAAAAABAAAAXxoEAAAAAAAAGgQAAAAAAAABAAAAYg",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGgQAAAAAAAAaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAABoEAAAAAAAAGwQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGgQAAAAAAAAaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					2,
					"right_delete",
					null,
					"AgAAALUAAAAAAAAAtQAAAAAAAAABAAAAMrUAAAAAAAAAtQAAAAAAAAABAAAAMg",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtQAAAAAAAAC1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "50"
					},
					"AgAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC3AAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtQAAAAAAAAC1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"left_delete",
					null,
					"AQAAALUAAAAAAAAAtQAAAAAAAAABAAAANQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtgAAAAAAAAC2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAALUAAAAAAAAAtgAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtQAAAAAAAAC1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAABgEAAAAAAAAGQQAAAAAAAAAAAAAGQQAAAAAAAAaBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGAQAAAAAAAAYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " s2_b"
					},
					"BQAAABoEAAAAAAAAGwQAAAAAAAAAAAAAGwQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAAB0EAAAAAAAAAAAAAB0EAAAAAAAAHgQAAAAAAAAAAAAAHgQAAAAAAAAfBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGgQAAAAAAAAaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					7,
					"right_delete",
					null,
					"BwAAABgEAAAAAAAAGAQAAAAAAAABAAAAIBgEAAAAAAAAGAQAAAAAAAABAAAALRgEAAAAAAAAGAQAAAAAAAABAAAAIBgEAAAAAAAAGAQAAAAAAAABAAAAcxgEAAAAAAAAGAQAAAAAAAABAAAAMhgEAAAAAAAAGAQAAAAAAAABAAAAXxgEAAAAAAAAGAQAAAAAAAABAAAAYg",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGAQAAAAAAAAYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"left_delete",
					null,
					"AQAAABYEAAAAAAAAFgQAAAAAAAABAAAAMg",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFwQAAAAAAAAXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAABYEAAAAAAAAFwQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFgQAAAAAAAAWBAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAABgEAAAAAAAAGQQAAAAAAAAAAAAAGQQAAAAAAAAaBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGAQAAAAAAAAYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " 20"
					},
					"AwAAABoEAAAAAAAAGwQAAAAAAAAAAAAAGwQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAAB0EAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGgQAAAAAAAAaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAPsDAAAAAAAA/AMAAAAAAAAAAAAA/AMAAAAAAAD9AwAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+wMAAAAAAAD7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": " 20"
					},
					"AwAAAP0DAAAAAAAA/gMAAAAAAAAAAAAA/gMAAAAAAAD/AwAAAAAAAAAAAAD/AwAAAAAAAAAEAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/QMAAAAAAAD9AwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAD4EAAAAAAAAPwQAAAAAAAAAAAAAPwQAAAAAAABBBAAAAAAAAAAAAAA/BAAAAAAAAD8EAAAAAAAAAgAAACAgPwQAAAAAAAA/BAAAAAAAAAAAAAA/BAAAAAAAAEAEAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPgQAAAAAAAA+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					5,
					"right_delete",
					null,
					"BQAAAPsDAAAAAAAA+wMAAAAAAAABAAAAIPsDAAAAAAAA+wMAAAAAAAABAAAALfsDAAAAAAAA+wMAAAAAAAABAAAAIPsDAAAAAAAA+wMAAAAAAAABAAAAMvsDAAAAAAAA+wMAAAAAAAABAAAAMA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+wMAAAAAAAD7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAPsDAAAAAAAA/AMAAAAAAAAAAAAA/AMAAAAAAAD9AwAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+wMAAAAAAAD7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " 2-"
					},
					"AwAAAP0DAAAAAAAA/gMAAAAAAAAAAAAA/gMAAAAAAAD/AwAAAAAAAAAAAAD/AwAAAAAAAAAEAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/QMAAAAAAAD9AwAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAAEAAAAAAAAAQQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					2,
					"left_delete",
					null,
					"AgAAAAAEAAAAAAAAAAQAAAAAAAABAAAAIP8DAAAAAAAA/wMAAAAAAAABAAAALQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAP8DAAAAAAAAAAQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/wMAAAAAAAD/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAEEAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAAEBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					3,
					"right_delete",
					null,
					"AwAAAAQEAAAAAAAABAQAAAAAAAABAAAACgQEAAAAAAAABAQAAAAAAAABAAAAIAQEAAAAAAAABAQAAAAAAAABAAAAIA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABAQAAAAAAAAEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					2,
					"right_delete",
					null,
					"AgAAABcEAAAAAAAAFwQAAAAAAAABAAAAMhcEAAAAAAAAFwQAAAAAAAABAAAANQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFwQAAAAAAAAXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAABcEAAAAAAAAGAQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFwQAAAAAAAAXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"left_delete",
					null,
					"AQAAABcEAAAAAAAAFwQAAAAAAAABAAAANQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGAQAAAAAAAAYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAABcEAAAAAAAAGAQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFwQAAAAAAAAXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"left_delete",
					null,
					"AQAAABcEAAAAAAAAFwQAAAAAAAABAAAAMA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGAQAAAAAAAAYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAABcEAAAAAAAAGAQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFwQAAAAAAAAXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"right_delete",
					null,
					"AQAAACMEAAAAAAAAIwQAAAAAAAABAAAAMA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIwQAAAAAAAAjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "s2_b"
					},
					"BAAAACMEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAlBAAAAAAAAAAAAAAlBAAAAAAAACYEAAAAAAAAAAAAACYEAAAAAAAAJwQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIwQAAAAAAAAjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "_c"
					},
					"AgAAAAYEAAAAAAAABwQAAAAAAAAAAAAABwQAAAAAAAAIBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABgQAAAAAAAAGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAACsEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAuBAAAAAAAAAAAAAAuBAAAAAAAAC8EAAAAAAAAAAAAAC8EAAAAAAAAMQQAAAAAAAAAAAAALAQAAAAAAAAsBAAAAAAAAAIAAAAgIA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKwQAAAAAAAArBAAAAAAAAP///////+9/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AwAAACwEAAAAAAAALQQAAAAAAAAAAAAALgQAAAAAAAAuBAAAAAAAAAIAAAAgIC0EAAAAAAAALgQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAQAAAAAAAAsBAAAAAAAAAAAAAAAACxA"
				],
				[
					186,
					4,
					"right_delete",
					null,
					"BAAAAC4EAAAAAAAALgQAAAAAAAABAAAACi4EAAAAAAAALgQAAAAAAAABAAAACi4EAAAAAAAALgQAAAAAAAABAAAAIC4EAAAAAAAALgQAAAAAAAABAAAAIA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALgQAAAAAAAAuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"left_delete",
					null,
					"AQAAACoEAAAAAAAAKgQAAAAAAAABAAAALA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKwQAAAAAAAArBAAAAAAAAP///////+9/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACoEAAAAAAAAKwQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKgQAAAAAAAAqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "\ns2"
					},
					"BAAAACsEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAuBAAAAAAAAAAAAAAuBAAAAAAAAC8EAAAAAAAAAAAAAC8EAAAAAAAAMAQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKwQAAAAAAAArBAAAAAAAAP///////+9/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADAEAAAAAAAAMQQAAAAAAAAAAAAAMQQAAAAAAAAyBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMAQAAAAAAAAwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": " ifelse"
					},
					"BwAAADIEAAAAAAAAMwQAAAAAAAAAAAAAMwQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADUEAAAAAAAAAAAAADUEAAAAAAAANgQAAAAAAAAAAAAANgQAAAAAAAA3BAAAAAAAAAAAAAA3BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAOQQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMgQAAAAAAAAyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADkEAAAAAAAAOwQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOQQAAAAAAAA5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "sd"
					},
					"AgAAADoEAAAAAAAAOwQAAAAAAAAAAAAAOwQAAAAAAAA8BAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOgQAAAAAAAA6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"left_delete",
					null,
					"AQAAADsEAAAAAAAAOwQAAAAAAAABAAAAZA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPAQAAAAAAAA8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "2_c"
					},
					"AwAAADsEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAAA9BAAAAAAAAAAAAAA9BAAAAAAAAD4EAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOwQAAAAAAAA7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": " <"
					},
					"AgAAAD4EAAAAAAAAPwQAAAAAAAAAAAAAPwQAAAAAAABABAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPgQAAAAAAAA+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAEAEAAAAAAAAQQQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQAQAAAAAAABABAAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAEEEAAAAAAAAQgQAAAAAAAAAAAAAQgQAAAAAAABDBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQQQAAAAAAABBBAAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"left_delete",
					null,
					"AQAAAEIEAAAAAAAAQgQAAAAAAAABAAAALQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQwQAAAAAAABDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "0,"
					},
					"AgAAAEIEAAAAAAAAQwQAAAAAAAAAAAAAQwQAAAAAAABEBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQgQAAAAAAABCBAAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAAEQEAAAAAAAARQQAAAAAAAAAAAAARQQAAAAAAABGBAAAAAAAAAAAAABGBAAAAAAAAEcEAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARAQAAAAAAABEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": " s2"
					},
					"AwAAAEcEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABJBAAAAAAAAAAAAABJBAAAAAAAAEoEAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARwQAAAAAAABHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "_c"
					},
					"AgAAAEoEAAAAAAAASwQAAAAAAAAAAAAASwQAAAAAAABMBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASgQAAAAAAABKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAE0EAAAAAAAATgQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQQAAAAAAABNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					2,
					"right_delete",
					null,
					"AgAAAGUEAAAAAAAAZQQAAAAAAAABAAAACmUEAAAAAAAAZQQAAAAAAAABAAAACg",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZQQAAAAAAABlBAAAAAAAAP///////+9/"
				],
				[
					250,
					1,
					"left_delete",
					null,
					"AQAAAP8DAAAAAAAA/wMAAAAAAAABAAAANQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAP8DAAAAAAAAAAQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/wMAAAAAAAD/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					5,
					"right_delete",
					null,
					"BQAAAFwEAAAAAAAAXAQAAAAAAAABAAAAMlwEAAAAAAAAXAQAAAAAAAABAAAANVwEAAAAAAAAXAQAAAAAAAABAAAAIFwEAAAAAAAAXAQAAAAAAAABAAAALVwEAAAAAAAAXAQAAAAAAAABAAAAIA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXAQAAAAAAABcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAF4EAAAAAAAAXwQAAAAAAAAAAAAAXwQAAAAAAABgBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXgQAAAAAAABeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGAEAAAAAAAAYQQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYAQAAAAAAABgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGEEAAAAAAAAYwQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQQAAAAAAABhBAAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": "20-"
					},
					"AwAAAGIEAAAAAAAAYwQAAAAAAAAAAAAAYwQAAAAAAABkBAAAAAAAAAAAAABkBAAAAAAAAGUEAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYgQAAAAAAABiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					2,
					"left_delete",
					null,
					"AgAAAGQEAAAAAAAAZAQAAAAAAAABAAAALWMEAAAAAAAAYwQAAAAAAAABAAAAMA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZQQAAAAAAABlBAAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "5-20"
					},
					"BAAAAGMEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABlBAAAAAAAAAAAAABlBAAAAAAAAGYEAAAAAAAAAAAAAGYEAAAAAAAAZwQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYwQAAAAAAABjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": "_a"
					},
					"AgAAAFMEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABVBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUwQAAAAAAABTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGoEAAAAAAAAawQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAagQAAAAAAABqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGsEAAAAAAAAbAQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAawQAAAAAAABrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "\ns3"
					},
					"BAAAAGwEAAAAAAAAbQQAAAAAAAAAAAAAbQQAAAAAAABvBAAAAAAAAAAAAABvBAAAAAAAAHAEAAAAAAAAAAAAAHAEAAAAAAAAcQQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbAQAAAAAAABsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAHEEAAAAAAAAcgQAAAAAAAAAAAAAcgQAAAAAAABzBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcQQAAAAAAABxBAAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": " ifelse"
					},
					"BwAAAHMEAAAAAAAAdAQAAAAAAAAAAAAAdAQAAAAAAAB1BAAAAAAAAAAAAAB1BAAAAAAAAHYEAAAAAAAAAAAAAHYEAAAAAAAAdwQAAAAAAAAAAAAAdwQAAAAAAAB4BAAAAAAAAAAAAAB4BAAAAAAAAHkEAAAAAAAAAAAAAHkEAAAAAAAAegQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwQAAAAAAABzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHoEAAAAAAAAfAQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAegQAAAAAAAB6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": "s3_a"
					},
					"BAAAAHsEAAAAAAAAfAQAAAAAAAAAAAAAfAQAAAAAAAB9BAAAAAAAAAAAAAB9BAAAAAAAAH4EAAAAAAAAAAAAAH4EAAAAAAAAfwQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAewQAAAAAAAB7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AwAAAH8EAAAAAAAAgAQAAAAAAAAAAAAAgAQAAAAAAACBBAAAAAAAAAAAAACBBAAAAAAAAIIEAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfwQAAAAAAAB/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"left_delete",
					null,
					"AQAAAIEEAAAAAAAAgQQAAAAAAAABAAAALQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAggQAAAAAAACCBAAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIEEAAAAAAAAggQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgQQAAAAAAACBBAAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"left_delete",
					null,
					"AQAAAIEEAAAAAAAAgQQAAAAAAAABAAAAIA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAggQAAAAAAACCBAAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAIEEAAAAAAAAggQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgQQAAAAAAACBBAAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAIIEAAAAAAAAgwQAAAAAAAAAAAAAgwQAAAAAAACEBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAggQAAAAAAACCBAAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"left_delete",
					null,
					"AQAAAIMEAAAAAAAAgwQAAAAAAAABAAAALQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAQAAAAAAACEBAAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": "0,"
					},
					"AgAAAIMEAAAAAAAAhAQAAAAAAAAAAAAAhAQAAAAAAACFBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwQAAAAAAACDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAAIUEAAAAAAAAhgQAAAAAAAAAAAAAhgQAAAAAAACHBAAAAAAAAAAAAACHBAAAAAAAAIgEAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhQQAAAAAAACFBAAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIgEAAAAAAAAiQQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiAQAAAAAAACIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": "s3_a"
					},
					"BAAAAIkEAAAAAAAAigQAAAAAAAAAAAAAigQAAAAAAACLBAAAAAAAAAAAAACLBAAAAAAAAIwEAAAAAAAAAAAAAIwEAAAAAAAAjQQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiQQAAAAAAACJBAAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABHAwAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARQMAAAAAAABFAwAAAAAAAAAAAAAAAAAA"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": "\nk"
					},
					"AgAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABHAwAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARQMAAAAAAABFAwAAAAAAAAAAAAAAAAAA"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEcDAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABJAwAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARwMAAAAAAABHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": " c"
					},
					"AgAAAEkDAAAAAAAASgMAAAAAAAAAAAAASgMAAAAAAABLAwAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEsDAAAAAAAATQMAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": "20,"
					},
					"AwAAAEwDAAAAAAAATQMAAAAAAAAAAAAATQMAAAAAAABOAwAAAAAAAAAAAABOAwAAAAAAAE8DAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATAMAAAAAAABMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": " 25"
					},
					"AwAAAE8DAAAAAAAAUAMAAAAAAAAAAAAAUAMAAAAAAABRAwAAAAAAAAAAAABRAwAAAAAAAFIDAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATwMAAAAAAABPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": "<-"
					},
					"AgAAAEgDAAAAAAAASQMAAAAAAAAAAAAASQMAAAAAAABKAwAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASAMAAAAAAABIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEoDAAAAAAAASwMAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					2,
					"right_delete",
					null,
					"AgAAAEsDAAAAAAAASwMAAAAAAAABAAAAPUsDAAAAAAAASwMAAAAAAAABAAAAIA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": "k[1]"
					},
					"BAAAAJYDAAAAAAAAlwMAAAAAAAAAAAAAlwMAAAAAAACYAwAAAAAAAAAAAACYAwAAAAAAAJkDAAAAAAAAAAAAAJkDAAAAAAAAmgMAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlgMAAAAAAACWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					2,
					"right_delete",
					null,
					"AgAAAJoDAAAAAAAAmgMAAAAAAAABAAAAMpoDAAAAAAAAmgMAAAAAAAABAAAAMA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmgMAAAAAAACaAwAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					2,
					"left_delete",
					null,
					"AgAAANADAAAAAAAA0AMAAAAAAAABAAAAMM8DAAAAAAAAzwMAAAAAAAABAAAAMg",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0QMAAAAAAADRAwAAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"insert",
					{
						"characters": "k[1]"
					},
					"BAAAAM8DAAAAAAAA0AMAAAAAAAAAAAAA0AMAAAAAAADRAwAAAAAAAAAAAADRAwAAAAAAANIDAAAAAAAAAAAAANIDAAAAAAAA0wMAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzwMAAAAAAADPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": "k[1]"
					},
					"BAAAAPMDAAAAAAAA9AMAAAAAAAAAAAAA9AMAAAAAAAD1AwAAAAAAAAAAAAD1AwAAAAAAAPYDAAAAAAAAAAAAAPYDAAAAAAAA9wMAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wMAAAAAAADzAwAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					2,
					"right_delete",
					null,
					"AgAAAPcDAAAAAAAA9wMAAAAAAAABAAAAMvcDAAAAAAAA9wMAAAAAAAABAAAAMA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wMAAAAAAAD3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"insert",
					{
						"characters": "k[1]"
					},
					"BAAAABUEAAAAAAAAFgQAAAAAAAAAAAAAFgQAAAAAAAAXBAAAAAAAAAAAAAAXBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAGQQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFQQAAAAAAAAVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					2,
					"right_delete",
					null,
					"AgAAABkEAAAAAAAAGQQAAAAAAAABAAAAMhkEAAAAAAAAGQQAAAAAAAABAAAAMA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGQQAAAAAAAAZBAAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": "k[1]"
					},
					"BAAAADIEAAAAAAAAMwQAAAAAAAAAAAAAMwQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADUEAAAAAAAAAAAAADUEAAAAAAAANgQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMgQAAAAAAAAyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					360,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAADYEAAAAAAAANwQAAAAAAAAAAAAANwQAAAAAAAA4BAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANgQAAAAAAAA2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADgEAAAAAAAAOQQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOAQAAAAAAAA4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					362,
					4,
					"left_delete",
					null,
					"BAAAADgEAAAAAAAAOAQAAAAAAAABAAAAIDcEAAAAAAAANwQAAAAAAAABAAAALTYEAAAAAAAANgQAAAAAAAABAAAAIDUEAAAAAAAANQQAAAAAAAABAAAAXQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOQQAAAAAAAA5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": "]-k[2"
					},
					"BQAAADUEAAAAAAAANgQAAAAAAAAAAAAANgQAAAAAAAA3BAAAAAAAAAAAAAA3BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAOQQAAAAAAAAAAAAAOQQAAAAAAAA6BAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANQQAAAAAAAA1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					6,
					"left_delete",
					null,
					"BgAAADkEAAAAAAAAOQQAAAAAAAABAAAAMjgEAAAAAAAAOAQAAAAAAAABAAAAWzcEAAAAAAAANwQAAAAAAAABAAAAazYEAAAAAAAANgQAAAAAAAABAAAALTUEAAAAAAAANQQAAAAAAAABAAAAXTQEAAAAAAAANAQAAAAAAAABAAAAMQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOgQAAAAAAAA6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					1,
					"insert",
					{
						"characters": "2]-"
					},
					"AwAAADQEAAAAAAAANQQAAAAAAAAAAAAANQQAAAAAAAA2BAAAAAAAAAAAAAA2BAAAAAAAADcEAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANAQAAAAAAAA0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": "k[1]"
					},
					"BAAAADcEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA5BAAAAAAAAAAAAAA5BAAAAAAAADoEAAAAAAAAAAAAADoEAAAAAAAAOwQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANwQAAAAAAAA3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"right_delete",
					null,
					"AQAAADsEAAAAAAAAOwQAAAAAAAABAAAANQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOwQAAAAAAAA7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": "k[2]"
					},
					"BAAAAD0EAAAAAAAAPgQAAAAAAAAAAAAAPgQAAAAAAAA/BAAAAAAAAAAAAAA/BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAAQQQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPQQAAAAAAAA9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"insert",
					{
						"characters": "-k[1]"
					},
					"BQAAAEEEAAAAAAAAQgQAAAAAAAAAAAAAQgQAAAAAAABDBAAAAAAAAAAAAABDBAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAARQQAAAAAAAAAAAAARQQAAAAAAABGBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQQQAAAAAAABBBAAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					7,
					"right_delete",
					null,
					"BwAAAEYEAAAAAAAARgQAAAAAAAABAAAAMkYEAAAAAAAARgQAAAAAAAABAAAANUYEAAAAAAAARgQAAAAAAAABAAAAIEYEAAAAAAAARgQAAAAAAAABAAAALUYEAAAAAAAARgQAAAAAAAABAAAAIEYEAAAAAAAARgQAAAAAAAABAAAAMkYEAAAAAAAARgQAAAAAAAABAAAAMA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgQAAAAAAABGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					2,
					"left_delete",
					null,
					"AgAAAIIEAAAAAAAAggQAAAAAAAABAAAAMIEEAAAAAAAAgQQAAAAAAAABAAAAMg",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwQAAAAAAACDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": "k"
					},
					"AQAAAIEEAAAAAAAAggQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgQQAAAAAAACBBAAAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIIEAAAAAAAAhAQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAggQAAAAAAACCBAAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAIMEAAAAAAAAhAQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwQAAAAAAACDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": "k[2]"
					},
					"BAAAAIkEAAAAAAAAigQAAAAAAAAAAAAAigQAAAAAAACLBAAAAAAAAAAAAACLBAAAAAAAAIwEAAAAAAAAAAAAAIwEAAAAAAAAjQQAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiQQAAAAAAACJBAAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": "-k[1]"
					},
					"BQAAAI0EAAAAAAAAjgQAAAAAAAAAAAAAjgQAAAAAAACPBAAAAAAAAAAAAACPBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAkQQAAAAAAAAAAAAAkQQAAAAAAACSBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjQQAAAAAAACNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					5,
					"right_delete",
					null,
					"BQAAAJIEAAAAAAAAkgQAAAAAAAABAAAAMpIEAAAAAAAAkgQAAAAAAAABAAAANZIEAAAAAAAAkgQAAAAAAAABAAAALZIEAAAAAAAAkgQAAAAAAAABAAAAMpIEAAAAAAAAkgQAAAAAAAABAAAAMA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkgQAAAAAAACSBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/Users/timcadman/.Rprofile",
			"settings":
			{
				"buffer_size": 236,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\nlibrary*"
					},
					"CQAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAB+AAAAAAAAAH8AAAAAAAAAAAAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAIIAAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeQAAAAAAAAB5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIIAAAAAAAAAhAAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAIIAAAAAAAAAggAAAAAAAAABAAAAKIIAAAAAAAAAggAAAAAAAAABAAAAKQ",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAAIEAAAAAAAAAgQAAAAAAAAABAAAAKg",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIEAAAAAAAAAgwAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "devtools"
					},
					"CAAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIUAAAAAAAAAAAAAAIUAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACHAAAAAAAAAAAAAACHAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAiQAAAAAAAAAAAAAAiQAAAAAAAACKAAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIsAAAAAAAAAjAAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "library"
					},
					"BwAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAACOAAAAAAAAAI8AAAAAAAAAAAAAAI8AAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACRAAAAAAAAAAAAAACRAAAAAAAAAJIAAAAAAAAAAAAAAJIAAAAAAAAAkwAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJMAAAAAAAAAlQAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkwAAAAAAAACTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "here"
					},
					"BAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlAAAAAAAAACUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					20,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAADAAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					24,
					1,
					"cut",
					null,
					"AQAAAA4AAAAAAAAADgAAAAAAAAAgAAAAY2F0KCJNeSAuUnByb2ZpbGUgd29ya3MhIiwgIlxuIik",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALgAAAAAAAAAOAAAAAAAAAAAAAAAAAAAA"
				],
				[
					25,
					2,
					"right_delete",
					null,
					"AgAAAA4AAAAAAAAADgAAAAAAAAABAAAACg4AAAAAAAAADgAAAAAAAAABAAAACg",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIUAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACHAAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAAAA"
				],
				[
					28,
					1,
					"paste",
					null,
					"AQAAAIcAAAAAAAAApwAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApwAAAAAAAACnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACIAAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"paste",
					null,
					"AQAAAIgAAAAAAAAAtwAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALcAAAAAAAAAuAAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtwAAAAAAAAC3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"paste",
					null,
					"AQAAAIYAAAAAAAAAlwAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"r-ide",
				"Preferences: R-IDE Settings"
			],
			[
				"send",
				"SendCode: Choose Program"
			],
			[
				"Snippet: ",
				"Snippet: kable_extra"
			],
			[
				"lintr",
				"LSP: Disable Language Server in Project"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"lan",
				"LSP: Setup Language Server"
			],
			[
				"lsp",
				"LSP: Enable Language Server Globally"
			],
			[
				"r-",
				"Preferences: R-IDE Settings"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"rbos",
				"R-Box: Format Selected Code"
			],
			[
				"sen",
				"SendCode: Choose Program"
			],
			[
				"ter",
				"Terminus: Open Default Shell in View"
			],
			[
				"term",
				"Terminus: Open Default Shell in View"
			],
			[
				"termin",
				"Terminus: Open Default Shell in View"
			],
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/timcadman/OneDrive - University of Bristol/repos/lc-env-pnd"
	],
	"file_history":
	[
		"/Users/timcadman/OneDrive - University of Bristol/repos/useful-code-r/code/themes/lc-names-neat.R",
		"/Users/timcadman/OneDrive - University of Bristol/repos/useful-code-r/code/themes/themes.R",
		"/Users/timcadman/OneDrive - University of Bristol/repos/lc-other/code/testing-dem-splines.R",
		"/Users/timcadman/OneDrive - University of Bristol/repos/lc-env-pnd/reports/31-may-21/exposure-outcome-descriptives.Rmd",
		"/Users/timcadman/OneDrive - University of Bristol/repos/lc-env-pnd/reports/31-may-21/.Rprofile",
		"/Users/timcadman/.Rprofile",
		"/Users/timcadman/OneDrive - University of Bristol/repos/school-enjoyment-mh/code/rmd/semh-analysis-xl-report.Rmd",
		"/Users/timcadman/OneDrive - University of Bristol/repos/useful-code-r/code/themes/theme-cor.R",
		"/Users/timcadman/OneDrive - University of Bristol/repos/useful-code-r/code/reports/khl_5.tex",
		"/Users/timcadman/OneDrive - University of Bristol/repos/useful-code-r/code/themes/theme-std.R",
		"/Users/timcadman/OneDrive - University of Bristol/repos/useful-code-r/code/themes/theme-supplement-bar.R",
		"/Users/timcadman/OneDrive - University of Bristol/repos/lc-alspac-upload/code/upload-alspac.R",
		"/Users/timcadman/OneDrive - University of Bristol/repos/molgenis-r-armadillo/R/armadillo-make-subset.R",
		"/Users/timcadman/OneDrive - University of Bristol/repos/lc-alspac-upload/code/upload-alspac_v1_3.R",
		"/Users/timcadman/OneDrive - University of Bristol/repos/lc-alspac-upload/code/create-views.R",
		"/Users/timcadman/Documents/wp5-harmonisation-combined_v1_4.R",
		"/Volumes/MRC-IEU-research/projects/ieu2/p6/048/working/scripts/common/merges/common-merge_v1_2.R",
		"/Volumes/MRC-IEU-research/projects/ieu2/p6/048/working/scripts/wp6/r/wp6-harmonisation-high_priority.R",
		"/Volumes/MRC-IEU-research/projects/ieu2/p6/048/working/scripts/wp6/r/wp6-harmonisation-low_priority.R",
		"/Volumes/MRC-IEU-research/projects/ieu2/p6/048/working/scripts/wp5/r/wp5-harmonisation-combined.R",
		"/Volumes/MRC-IEU-research/projects/ieu2/p6/048/working/scripts/common/merges/common-merge_v1_1.R",
		"/Users/timcadman/OneDrive - University of Bristol/repos/lc-other/alspac-upload/du-fix-class.R",
		"/Users/timcadman/OneDrive - University of Bristol/repos/lc-other/alspac-upload/upload-alspac.R",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/vignettes/access-tutorial-data.Rmd",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/README.md",
		"/C/repos/useful-code-r/code/useful-code-r-packages.r",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/inst/examples/upload_to_testserver.R",
		"/C/Users/timca/OneDrive - University of Bristol/repos/lc-tutorial/analysis-protocols/R/sample_analysis/ALSPAC/ahmed_demo_analysis.R",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/vignettes/pre-render.r",
		"/C/Users/timca/OneDrive - University of Bristol/repos/lc-tutorial/analysis-protocols/R/login.R",
		"/C/Users/timca/timmyjc_0xBE0988A0_SECRET.asc",
		"/C/Users/timca/timmyjc_0xBE0988A0_public.asc",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/vignettes/dsHelper.Rmd.orig",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/vignettes/dsHelper.Rmd",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/vignettes/multi-level-modelling.Rmd.orig",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/vignettes/test-server-login.Rmd",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/R/get-stats.R",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/vignettes/multi-level-modelling.Rmd",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/vignettes/display-results.Rmd",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/vignettes/maniuplate-data.Rmd",
		"/C/Users/timca/OneDrive - University of Bristol/repos/ds-helper/vignettes/getting-information.Rmd",
		"/C/Old files/life-cycle/wp3/code/wp3-income.r",
		"/C/repos/lc-tutorial/analysis-protocols/R/utils.R",
		"/C/repos/lc-tutorial/analysis-protocols/R/populateCore.R",
		"/O/repos/useful-code-r/code/functions/lav-tab-fit.r",
		"/O/repos/useful-code-r/code/functions/descImp.r",
		"/O/repos/useful-code-r/code/functions/lrTab.R",
		"/C/Users/tc18889/AppData/Local/Temp/scp24554/newhome/tc18889/repos/teen-parenting/impute.R",
		"/O/repos/useful-code-r/code/functions/combImp.r",
		"/O/repos/useful-code-r/code/useful-code-r-packages.r",
		"/O/repos/parent-personality-sep/code/r/ppsep-manuscript-analysis.R",
		"/O/repos/school-enjoyment-mh/code/r/semh-manuscript-analysis.R",
		"/O/repos/teen-parenting/code/r/tpf-manuscript-analysis.r",
		"/O/repos/teen-parenting/code/r/tpf-manuscript-analysis-imputed.r",
		"/O/repos/school-enjoyment-mh/code/r/semh-manuscript-tables-23_09_19.R",
		"/O/repos/teen-parenting/code/old/tpf-analysis-yng.r",
		"/C/Users/tc18889/AppData/Local/Temp/scp00585/newhome/tc18889/impute.Rout",
		"/C/Users/tc18889/AppData/Local/Temp/scp00810/newhome/tc18889/repos/teen-parenting/tpf_impute_out.txt",
		"/C/Users/tc18889/AppData/Local/Temp/scp58777/newhome/tc18889/repos/teen-parenting/impute.R",
		"/O/repos/teen-parenting/code/r/tpf-manuscript-impute.R",
		"/C/Users/tc18889/AppData/Local/Temp/scp17435/newhome/tc18889/repos/teen-parenting/impute.R",
		"/R/Data/Useful_data/Denver/calculating denver - use.SPS",
		"/C/Users/tc18889/AppData/Local/Temp/scp37232/newhome/tc18889/semh-manuscript-impute.Rout",
		"/C/Users/tc18889/Google Drive/Research projects/Josh project/Final chapter/SEM R files/Josh SEM.R",
		"/C/Users/tc18889/Google Drive/Research projects/Josh project/Final chapter/SEM josh syntax.R",
		"/O/repos/school-enjoyment-mh/code/r/semh-analysis-manuscript.R",
		"/O/repos/parent-personality-sep/code/r/ppsep-analysis-lr.R",
		"/O/repos/teen-parenting/code/r/things to do",
		"/O/repos/teen-parenting/code/r/tpf-getvars-manuscript.R",
		"/O/repos/teen-parenting/code/r/tpf-manuscript-tables.r",
		"/C/Users/tc18889/AppData/Local/Temp/scp05953/newhome/tc18889/repos/teen-parenting/tpf_impute.sh",
		"/C/Users/tc18889/AppData/Local/Temp/scp50781/newhome/tc18889/repos/teen-parenting/impute.R",
		"/O/repos/parent-personality-sep/code/r/ppsep-source-impute-matpat.R",
		"/O/repos/parent-personality-sep/code/r/ppsep-source-getvars.R",
		"/O/repos/parent-personality-sep/code/r/ppsep-manuscript-plots.R",
		"/O/repos/school-enjoyment-mh/code/r/semh-analysis-tables.R",
		"/O/repos/school-enjoyment-mh/code/r/semh-analysis-separate.R",
		"/O/repos/useful-code-r/code/functions/combStdEst.R",
		"/O/repos/school-enjoyment-mh/code/old/semh-shell-impute.sh",
		"/O/repos/teen-parenting/code/tpf-analysis.sh",
		"/O/repos/teen-parenting/code/tpf-shell-impute.sh",
		"/O/repos/life-cycle/wp1/code/wp1-harmonisation-QC.R",
		"/C/Users/tc18889/AppData/Local/Microsoft/Windows/INetCache/Content.Outlook/UNQOF545/DataSHIELD_analysis_demo_ae.R",
		"/O/repos/parent-personality-sep/code/r/ppsep-manuscript-getvars.R",
		"/O/repos/parent-personality-sep/code/ppsep-source-impute.R",
		"/O/repos/teen-parenting/code/rmd/tpf-report-13_05_19.rmd",
		"/O/repos/useful-code-r/code/derived/useful-code-r-derived-child-mh.R",
		"/O/repos/teen-parenting/code/tpf-report-17_06_19.rmd",
		"/O/repos/teen-parenting/code/tpf-source-yng.R",
		"/O/repos/teen-parenting/code/tpf-analysis-manuscript.r",
		"/C/Old files/Active projects/Teen parenting factor paper/Teen parenting variables.do",
		"/O/repos/useful-code-r/code/functions/corStars.r",
		"/O/repos/parent-personality-sep/code/ppsep-analysis-lr.do",
		"/O/repos/teen-parenting/code/tpf-analysis-yng.r",
		"/O/repos/school-enjoyment-mh/code/semh-analysis-manuscript.R",
		"/O/repos/useful-code-r/code/derived/useful-code-r-derived-mat-epds.R",
		"/O/repos/useful-code-r/code/derived/useful-code-r-derived-child-cov.R",
		"/O/repos/useful-code-r/code/derived/useful-code-r-derived-mat-cov.r",
		"/O/repos/useful-code-stata/code/useful-code-stata-childMH.do",
		"/O/repos/lc-trajectories-inequality/code/lc-traj-ineq-analysis-plan-v1.rmd",
		"/O/repos/teen-parenting/code/tpf-report-13_05_19.rmd",
		"/O/repos/useful-code-r/code/reports/khl_3.tex",
		"/O/repos/useful-code-r/code/reports/khl_4.tex",
		"/O/repos/useful-code-r/code/reports/report-colours.doc",
		"/O/Admin/Meeting notes/debbie meeting 24.04.19.txt",
		"/O/repos/parent-personality-sep/code/ppsep-analysis-lr.R",
		"/O/repos/teen-parenting/code/tpf_report-24_04_19.rmd",
		"/O/repos/useful-code-r/code/functions/lav-tab-par.R",
		"/O/repos/teen-parenting/code/tpf-source.R",
		"/O/repos/teen-parenting/code/tpf-analysis-meth.r",
		"/O/Will ASC IRT/Mplus analyses with Hein/females_for_CFA.inp",
		"/O/Will ASC IRT/Mplus analyses with Hein/split1_for_CFA.inp",
		"/C/Users/tc18889/AppData/Roaming/Sublime Text 3/Packages/User/yaml.sublime-snippet",
		"/C/Users/tc18889/AppData/Roaming/Sublime Text 3/Packages/User/kable_extra.sublime-snippet",
		"/O/repos/teen-parenting/code/tpf-report-10_04_19.rmd",
		"/C/Users/tc18889/AppData/Roaming/Sublime Text 3/Packages/User/kable.sublime-snippet",
		"/O/repos/school-enjoyment-mh/reports/semh-analysis-xl-report.tex",
		"/C/Program Files/R/R-3.5.3/etc/Rprofile.site",
		"/C/repos/useful-code-r/code/reports/khl_3.tex",
		"/C/repos/life-cycle/wp3/code/alspac_missing_02_04_19.Rmd",
		"/C/repos/life-cycle/wp3/code/wp3-constanza_04.03.19.rmd",
		"/C/repos/school-enjoyment-mh/code/semh-analysis-xl.R",
		"/C/repos/school-enjoyment-mh/code/semh-analysis-xl-report.Rmd",
		"/C/repos/useful-code-r/code/useful-code-r-render.r",
		"/C/repos/life-cycle/wp3/code/wp3-constanza_04.03.19.r",
		"/C/repos/parent-personality-sep/code/ppsep-source-impute.R",
		"/C/repos/parent-personality-sep/code/ppsep-analysis-lr.do",
		"/C/repos/life-cycle/wp1/code/wp1-harmonisation.r"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"theme_bar",
			"margin",
			"akz",
			"metafont",
			"Aksi",
			"fontspec",
			"font",
			"ontspec"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"theme_hv"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/timcadman/OneDrive - University of Bristol/repos/trajectories-tutorial/R/tutorial.rmd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31880,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"dh.localProxy\t{dsHelper}",
									"dh.localProxy"
								],
								[
									"dh.metaManual\t{dsHelper}",
									"dh.metaManual"
								],
								[
									"dh.findVarsIndex\t{dsHelper}",
									"dh.findVarsIndex"
								],
								[
									"dh.classDiscrepancy\t{dsHelper}",
									"dh.classDiscrepancy"
								],
								[
									"dh.dropCols\t{dsHelper}",
									"dh.dropCols"
								],
								[
									"dh.makeLmerForm\t{dsHelper}",
									"dh.makeLmerForm"
								],
								[
									"dh.anyData\t{dsHelper}",
									"dh.anyData"
								],
								[
									"dh.lmeMultPoly\t{dsHelper}",
									"dh.lmeMultPoly"
								],
								[
									"dh.renameVars\t{dsHelper}",
									"dh.renameVars"
								],
								[
									"dh.tidyEnv\t{dsHelper}",
									"dh.tidyEnv"
								],
								[
									"dh.getStats\t{dsHelper}",
									"dh.getStats"
								],
								[
									"dh.lmTab\t{dsHelper}",
									"dh.lmTab"
								],
								[
									"dh.makeOutcome\t{dsHelper}",
									"dh.makeOutcome"
								],
								[
									"dh.makeAgePolys\t{dsHelper}",
									"dh.makeAgePolys"
								],
								[
									"dh.subjHasData\t{dsHelper}",
									"dh.subjHasData"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"tidyverse_logo\t{tidyverse}",
									"tidyverse_logo"
								],
								[
									"tidyverse_update\t{tidyverse}",
									"tidyverse_update"
								],
								[
									"tidyverse_conflicts\t{tidyverse}",
									"tidyverse_conflicts"
								],
								[
									"tidyverse_packages\t{tidyverse}",
									"tidyverse_packages"
								],
								[
									"tidyverse_deps\t{tidyverse}",
									"tidyverse_deps"
								],
								[
									"tidyverse_sitrep\t{tidyverse}",
									"tidyverse_sitrep"
								],
								[
									"kable_paper\t{kableExtra}",
									"kable_paper"
								],
								[
									"kable_classic_2\t{kableExtra}",
									"kable_classic_2"
								],
								[
									"spec_color\t{kableExtra}",
									"spec_color"
								],
								[
									"pack_rows\t{kableExtra}",
									"pack_rows"
								],
								[
									"group_rows\t{kableExtra}",
									"group_rows"
								],
								[
									"text_spec\t{kableExtra}",
									"text_spec"
								],
								[
									"cell_spec\t{kableExtra}",
									"cell_spec"
								],
								[
									"spec_hist\t{kableExtra}",
									"spec_hist"
								],
								[
									"html_dependency_kePrint\t{kableExtra}",
									"html_dependency_kePrint"
								],
								[
									"as_image\t{kableExtra}",
									"as_image"
								],
								[
									"spec_image\t{kableExtra}",
									"spec_image"
								],
								[
									"spec_pointrange\t{kableExtra}",
									"spec_pointrange"
								],
								[
									"xtable2kable\t{kableExtra}",
									"xtable2kable"
								],
								[
									"spec_font_size\t{kableExtra}",
									"spec_font_size"
								],
								[
									"header_separate\t{kableExtra}",
									"header_separate"
								],
								[
									"usepackage_latex\t{kableExtra}",
									"usepackage_latex"
								],
								[
									"auto_index\t{kableExtra}",
									"auto_index"
								],
								[
									"linebreak\t{kableExtra}",
									"linebreak"
								],
								[
									"kable_as_xml\t{kableExtra}",
									"kable_as_xml"
								],
								[
									"spec_tooltip\t{kableExtra}",
									"spec_tooltip"
								],
								[
									"spec_popover\t{kableExtra}",
									"spec_popover"
								],
								[
									"kableExtra_latex_packages\t{kableExtra}",
									"kableExtra_latex_packages"
								],
								[
									"collapse_rows\t{kableExtra}",
									"collapse_rows"
								],
								[
									"column_spec\t{kableExtra}",
									"column_spec"
								],
								[
									"spec_plot\t{kableExtra}",
									"spec_plot"
								],
								[
									"footnote_marker_alphabet\t{kableExtra}",
									"footnote_marker_alphabet"
								],
								[
									"save_kable\t{kableExtra}",
									"save_kable"
								],
								[
									"add_header_above\t{kableExtra}",
									"add_header_above"
								],
								[
									"add_footnote\t{kableExtra}",
									"add_footnote"
								],
								[
									"html_dependency_bsTable\t{kableExtra}",
									"html_dependency_bsTable"
								],
								[
									"kable_as_image\t{kableExtra}",
									"kable_as_image"
								],
								[
									"xml_as_kable\t{kableExtra}",
									"xml_as_kable"
								],
								[
									"html_dependency_lightable\t{kableExtra}",
									"html_dependency_lightable"
								],
								[
									"kable_styling\t{kableExtra}",
									"kable_styling"
								],
								[
									"scroll_box\t{kableExtra}",
									"scroll_box"
								],
								[
									"kable_material_dark\t{kableExtra}",
									"kable_material_dark"
								],
								[
									"kbl\t{kableExtra}",
									"kbl"
								],
								[
									"kable_material\t{kableExtra}",
									"kable_material"
								],
								[
									"footnote_marker_number\t{kableExtra}",
									"footnote_marker_number"
								],
								[
									"magic_mirror\t{kableExtra}",
									"magic_mirror"
								],
								[
									"kable_classic\t{kableExtra}",
									"kable_classic"
								],
								[
									"row_spec\t{kableExtra}",
									"row_spec"
								],
								[
									"spec_boxplot\t{kableExtra}",
									"spec_boxplot"
								],
								[
									"rmd_format\t{kableExtra}",
									"rmd_format"
								],
								[
									"add_indent\t{kableExtra}",
									"add_indent"
								],
								[
									"landscape\t{kableExtra}",
									"landscape"
								],
								[
									"kable\t{kableExtra}",
									"kable"
								],
								[
									"footnote\t{kableExtra}",
									"footnote"
								],
								[
									"spec_angle\t{kableExtra}",
									"spec_angle"
								],
								[
									"footnote_marker_symbol\t{kableExtra}",
									"footnote_marker_symbol"
								],
								[
									"kable_minimal\t{kableExtra}",
									"kable_minimal"
								],
								[
									"remove_column\t{kableExtra}",
									"remove_column"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"dsListTables\t{DSMolgenisArmadillo}",
									"dsListTables"
								],
								[
									"dsListResources\t{DSMolgenisArmadillo}",
									"dsListResources"
								],
								[
									"dsListWorkspaces\t{DSMolgenisArmadillo}",
									"dsListWorkspaces"
								],
								[
									"dsConnect\t{DSMolgenisArmadillo}",
									"dsConnect"
								],
								[
									"dsDisconnect\t{DSMolgenisArmadillo}",
									"dsDisconnect"
								],
								[
									"dsAssignTable\t{DSMolgenisArmadillo}",
									"dsAssignTable"
								],
								[
									"dsRmWorkspace\t{DSMolgenisArmadillo}",
									"dsRmWorkspace"
								],
								[
									"dsAssignResource\t{DSMolgenisArmadillo}",
									"dsAssignResource"
								],
								[
									"dsAggregate\t{DSMolgenisArmadillo}",
									"dsAggregate"
								],
								[
									"dsGetInfo\t{DSMolgenisArmadillo}",
									"dsGetInfo"
								],
								[
									"dsListSymbols\t{DSMolgenisArmadillo}",
									"dsListSymbols"
								],
								[
									"dsListPackages\t{DSMolgenisArmadillo}",
									"dsListPackages"
								],
								[
									"dsListMethods\t{DSMolgenisArmadillo}",
									"dsListMethods"
								],
								[
									".__C__ArmadilloResult\t{DSMolgenisArmadillo}",
									".__C__ArmadilloResult"
								],
								[
									"dsIsCompleted\t{DSMolgenisArmadillo}",
									"dsIsCompleted"
								],
								[
									"dsKeepAlive\t{DSMolgenisArmadillo}",
									"dsKeepAlive"
								],
								[
									"dsFetch\t{DSMolgenisArmadillo}",
									"dsFetch"
								],
								[
									"dsRmSymbol\t{DSMolgenisArmadillo}",
									"dsRmSymbol"
								],
								[
									".__C__ArmadilloConnection\t{DSMolgenisArmadillo}",
									".__C__ArmadilloConnection"
								],
								[
									"armadillo.get_token\t{DSMolgenisArmadillo}",
									"armadillo.get_token"
								],
								[
									"armadillo\t{DSMolgenisArmadillo}",
									"armadillo"
								],
								[
									"dsAssignExpr\t{DSMolgenisArmadillo}",
									"dsAssignExpr"
								],
								[
									".__C__ArmadilloDriver\t{DSMolgenisArmadillo}",
									".__C__ArmadilloDriver"
								],
								[
									"dsIsAsync\t{DSMolgenisArmadillo}",
									"dsIsAsync"
								],
								[
									"dsHasResource\t{DSMolgenisArmadillo}",
									"dsHasResource"
								],
								[
									"dsHasTable\t{DSMolgenisArmadillo}",
									"dsHasTable"
								],
								[
									"dsSaveWorkspace\t{DSMolgenisArmadillo}",
									"dsSaveWorkspace"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"ds.glmSummary\t{dsBaseClient}",
									"ds.glmSummary"
								],
								[
									"ds.forestplot\t{dsBaseClient}",
									"ds.forestplot"
								],
								[
									"ds.subsetByClass\t{dsBaseClient}",
									"ds.subsetByClass"
								],
								[
									"ds.listClientsideFunctions\t{dsBaseClient}",
									"ds.listClientsideFunctions"
								],
								[
									"ds.completeCases\t{dsBaseClient}",
									"ds.completeCases"
								],
								[
									"ds.setSeed\t{dsBaseClient}",
									"ds.setSeed"
								],
								[
									"ds.heatmapPlot\t{dsBaseClient}",
									"ds.heatmapPlot"
								],
								[
									"ds.tapply\t{dsBaseClient}",
									"ds.tapply"
								],
								[
									"ds.matrixDet\t{dsBaseClient}",
									"ds.matrixDet"
								],
								[
									"ds.sqrt\t{dsBaseClient}",
									"ds.sqrt"
								],
								[
									"ds.matrixInvert\t{dsBaseClient}",
									"ds.matrixInvert"
								],
								[
									"ds.ls\t{dsBaseClient}",
									"ds.ls"
								],
								[
									"ds.rPois\t{dsBaseClient}",
									"ds.rPois"
								],
								[
									"ds.matrixMult\t{dsBaseClient}",
									"ds.matrixMult"
								],
								[
									"ds.dataFrame\t{dsBaseClient}",
									"ds.dataFrame"
								],
								[
									"ds.dataFrameSort\t{dsBaseClient}",
									"ds.dataFrameSort"
								],
								[
									"ds.asDataMatrix\t{dsBaseClient}",
									"ds.asDataMatrix"
								],
								[
									"ds.seq\t{dsBaseClient}",
									"ds.seq"
								],
								[
									"ds.asNumeric\t{dsBaseClient}",
									"ds.asNumeric"
								],
								[
									"ds.glmPredict\t{dsBaseClient}",
									"ds.glmPredict"
								],
								[
									"ds.listOpals\t{dsBaseClient}",
									"ds.listOpals"
								],
								[
									"ds.asInteger\t{dsBaseClient}",
									"ds.asInteger"
								],
								[
									"ds.quantileMean\t{dsBaseClient}",
									"ds.quantileMean"
								],
								[
									"ds.skewness\t{dsBaseClient}",
									"ds.skewness"
								],
								[
									"ds.isNA\t{dsBaseClient}",
									"ds.isNA"
								],
								[
									"ds.Boole\t{dsBaseClient}",
									"ds.Boole"
								],
								[
									"ds.listDisclosureSettings\t{dsBaseClient}",
									"ds.listDisclosureSettings"
								],
								[
									"ds.rm\t{dsBaseClient}",
									"ds.rm"
								],
								[
									"ds.table2D\t{dsBaseClient}",
									"ds.table2D"
								],
								[
									"ds.cbind\t{dsBaseClient}",
									"ds.cbind"
								],
								[
									"ds.meanByClass\t{dsBaseClient}",
									"ds.meanByClass"
								],
								[
									"ds.recodeLevels\t{dsBaseClient}",
									"ds.recodeLevels"
								],
								[
									"ds.list\t{dsBaseClient}",
									"ds.list"
								],
								[
									"ds.dataFrameFill\t{dsBaseClient}",
									"ds.dataFrameFill"
								],
								[
									"ds.listServersideFunctions\t{dsBaseClient}",
									"ds.listServersideFunctions"
								],
								[
									"ds.merge\t{dsBaseClient}",
									"ds.merge"
								],
								[
									"ds.vectorCalc\t{dsBaseClient}",
									"ds.vectorCalc"
								],
								[
									"ds.setDefaultOpals\t{dsBaseClient}",
									"ds.setDefaultOpals"
								],
								[
									"ds.subset\t{dsBaseClient}",
									"ds.subset"
								],
								[
									"ds.rUnif\t{dsBaseClient}",
									"ds.rUnif"
								],
								[
									"ds.asList\t{dsBaseClient}",
									"ds.asList"
								],
								[
									"ds.levels\t{dsBaseClient}",
									"ds.levels"
								],
								[
									"ds.lexis\t{dsBaseClient}",
									"ds.lexis"
								],
								[
									"ds.asMatrix\t{dsBaseClient}",
									"ds.asMatrix"
								],
								[
									"ds.matrixDet.report\t{dsBaseClient}",
									"ds.matrixDet.report"
								],
								[
									"ds.matrixTranspose\t{dsBaseClient}",
									"ds.matrixTranspose"
								],
								[
									"ds.densityGrid\t{dsBaseClient}",
									"ds.densityGrid"
								],
								[
									"ds.colnames\t{dsBaseClient}",
									"ds.colnames"
								],
								[
									"ds.asLogical\t{dsBaseClient}",
									"ds.asLogical"
								],
								[
									"ds.glmerSLMA\t{dsBaseClient}",
									"ds.glmerSLMA"
								],
								[
									"ds.dim\t{dsBaseClient}",
									"ds.dim"
								],
								[
									"ds.look\t{dsBaseClient}",
									"ds.look"
								],
								[
									"ds.unList\t{dsBaseClient}",
									"ds.unList"
								],
								[
									"ds.matrixDimnames\t{dsBaseClient}",
									"ds.matrixDimnames"
								],
								[
									"ds.getWGSR\t{dsBaseClient}",
									"ds.getWGSR"
								],
								[
									"ds.rbind\t{dsBaseClient}",
									"ds.rbind"
								],
								[
									"ds.make\t{dsBaseClient}",
									"ds.make"
								],
								[
									"ds.scatterPlot\t{dsBaseClient}",
									"ds.scatterPlot"
								],
								[
									"ds.glm\t{dsBaseClient}",
									"ds.glm"
								],
								[
									"ds.cor\t{dsBaseClient}",
									"ds.cor"
								],
								[
									"ds.c\t{dsBaseClient}",
									"ds.c"
								],
								[
									"ds.exists\t{dsBaseClient}",
									"ds.exists"
								],
								[
									"ds.boxPlot\t{dsBaseClient}",
									"ds.boxPlot"
								],
								[
									"ds.replaceNA\t{dsBaseClient}",
									"ds.replaceNA"
								],
								[
									"ds.cov\t{dsBaseClient}",
									"ds.cov"
								],
								[
									"ds.rBinom\t{dsBaseClient}",
									"ds.rBinom"
								],
								[
									"ds.corTest\t{dsBaseClient}",
									"ds.corTest"
								],
								[
									"ds.asCharacter\t{dsBaseClient}",
									"ds.asCharacter"
								],
								[
									"ds.table1D\t{dsBaseClient}",
									"ds.table1D"
								],
								[
									"ds.summary\t{dsBaseClient}",
									"ds.summary"
								],
								[
									"ds.exp\t{dsBaseClient}",
									"ds.exp"
								],
								[
									"ds.rowColCalc\t{dsBaseClient}",
									"ds.rowColCalc"
								],
								[
									"ds.dataFrameSubset\t{dsBaseClient}",
									"ds.dataFrameSubset"
								],
								[
									"ds.abs\t{dsBaseClient}",
									"ds.abs"
								],
								[
									"ds.testObjExists\t{dsBaseClient}",
									"ds.testObjExists"
								],
								[
									"ds.glmSLMA\t{dsBaseClient}",
									"ds.glmSLMA"
								],
								[
									"ds.table\t{dsBaseClient}",
									"ds.table"
								],
								[
									"ds.asFactor\t{dsBaseClient}",
									"ds.asFactor"
								],
								[
									"ds.lmerSLMA\t{dsBaseClient}",
									"ds.lmerSLMA"
								],
								[
									"ds.class\t{dsBaseClient}",
									"ds.class"
								],
								[
									"ds.matrix\t{dsBaseClient}",
									"ds.matrix"
								],
								[
									"ds.names\t{dsBaseClient}",
									"ds.names"
								],
								[
									"ds.tapply.assign\t{dsBaseClient}",
									"ds.tapply.assign"
								],
								[
									"ds.length\t{dsBaseClient}",
									"ds.length"
								],
								[
									"ds.var\t{dsBaseClient}",
									"ds.var"
								],
								[
									"ds.reShape\t{dsBaseClient}",
									"ds.reShape"
								],
								[
									"ds.histogram\t{dsBaseClient}",
									"ds.histogram"
								],
								[
									"ds.rNorm\t{dsBaseClient}",
									"ds.rNorm"
								],
								[
									"ds.log\t{dsBaseClient}",
									"ds.log"
								],
								[
									"ds.matrixDiag\t{dsBaseClient}",
									"ds.matrixDiag"
								],
								[
									"ds.changeRefGroup\t{dsBaseClient}",
									"ds.changeRefGroup"
								],
								[
									"ds.kurtosis\t{dsBaseClient}",
									"ds.kurtosis"
								],
								[
									"ds.contourPlot\t{dsBaseClient}",
									"ds.contourPlot"
								],
								[
									"ds.assign\t{dsBaseClient}",
									"ds.assign"
								],
								[
									"ds.mean\t{dsBaseClient}",
									"ds.mean"
								],
								[
									"ds.message\t{dsBaseClient}",
									"ds.message"
								],
								[
									"ds.rep\t{dsBaseClient}",
									"ds.rep"
								],
								[
									"ds.recodeValues\t{dsBaseClient}",
									"ds.recodeValues"
								],
								[
									"ds.numNA\t{dsBaseClient}",
									"ds.numNA"
								],
								[
									"ds.isValid\t{dsBaseClient}",
									"ds.isValid"
								],
								[
									"ds.meanSdGp\t{dsBaseClient}",
									"ds.meanSdGp"
								],
								[
									"ds.sample\t{dsBaseClient}",
									"ds.sample"
								],
								[
									"install_gitlab\t{remotes}",
									"install_gitlab"
								],
								[
									"system_requirements\t{remotes}",
									"system_requirements"
								],
								[
									"dev_package_deps\t{remotes}",
									"dev_package_deps"
								],
								[
									"parse_repo_spec\t{remotes}",
									"parse_repo_spec"
								],
								[
									"git_credentials\t{remotes}",
									"git_credentials"
								],
								[
									"parse_github_url\t{remotes}",
									"parse_github_url"
								],
								[
									"remote_download\t{remotes}",
									"remote_download"
								],
								[
									"install_url\t{remotes}",
									"install_url"
								],
								[
									"download_version\t{remotes}",
									"download_version"
								],
								[
									"standardise_dep\t{remotes}",
									"standardise_dep"
								],
								[
									"remote_metadata\t{remotes}",
									"remote_metadata"
								],
								[
									"install_github\t{remotes}",
									"install_github"
								],
								[
									"available_packages\t{remotes}",
									"available_packages"
								],
								[
									"local_package_deps\t{remotes}",
									"local_package_deps"
								],
								[
									"package_deps\t{remotes}",
									"package_deps"
								],
								[
									"gitlab_pat\t{remotes}",
									"gitlab_pat"
								],
								[
									"available_packages_set\t{remotes}",
									"available_packages_set"
								],
								[
									"remote_package_name\t{remotes}",
									"remote_package_name"
								],
								[
									"install_svn\t{remotes}",
									"install_svn"
								],
								[
									"install_cran\t{remotes}",
									"install_cran"
								],
								[
									"bioc_install_repos\t{remotes}",
									"bioc_install_repos"
								],
								[
									"parse_github_repo_spec\t{remotes}",
									"parse_github_repo_spec"
								],
								[
									"github_pull\t{remotes}",
									"github_pull"
								],
								[
									"available_packages_reset\t{remotes}",
									"available_packages_reset"
								],
								[
									"install_version\t{remotes}",
									"install_version"
								],
								[
									"add_metadata\t{remotes}",
									"add_metadata"
								],
								[
									"remote_sha\t{remotes}",
									"remote_sha"
								],
								[
									"install_deps\t{remotes}",
									"install_deps"
								],
								[
									"install_bioc\t{remotes}",
									"install_bioc"
								],
								[
									"update_packages\t{remotes}",
									"update_packages"
								],
								[
									"install_bitbucket\t{remotes}",
									"install_bitbucket"
								],
								[
									"install_git\t{remotes}",
									"install_git"
								],
								[
									"github_release\t{remotes}",
									"github_release"
								],
								[
									"bioc_version\t{remotes}",
									"bioc_version"
								],
								[
									"install_local\t{remotes}",
									"install_local"
								],
								[
									"github_remote\t{remotes}",
									"github_remote"
								],
								[
									"install_remote\t{remotes}",
									"install_remote"
								],
								[
									"install_dev\t{remotes}",
									"install_dev"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									".__C__DSObject\t{DSI}",
									".__C__DSObject"
								],
								[
									"datashield.pkg_check\t{DSI}",
									"datashield.pkg_check"
								],
								[
									"datashield.assign.resource\t{DSI}",
									"datashield.assign.resource"
								],
								[
									"dsAssignResource\t{DSI}",
									"dsAssignResource"
								],
								[
									"datashield.tables\t{DSI}",
									"datashield.tables"
								],
								[
									"dsSaveWorkspace\t{DSI}",
									"dsSaveWorkspace"
								],
								[
									"dsIsCompleted\t{DSI}",
									"dsIsCompleted"
								],
								[
									"dsHasTable\t{DSI}",
									"dsHasTable"
								],
								[
									"dsAssignExpr\t{DSI}",
									"dsAssignExpr"
								],
								[
									"datashield.workspaces\t{DSI}",
									"datashield.workspaces"
								],
								[
									"dsListTables\t{DSI}",
									"dsListTables"
								],
								[
									"datashield.resources\t{DSI}",
									"datashield.resources"
								],
								[
									"newDSLoginBuilder\t{DSI}",
									"newDSLoginBuilder"
								],
								[
									"datashield.assign\t{DSI}",
									"datashield.assign"
								],
								[
									"datashield.aggregate\t{DSI}",
									"datashield.aggregate"
								],
								[
									"datashield.method_status\t{DSI}",
									"datashield.method_status"
								],
								[
									"dsKeepAlive\t{DSI}",
									"dsKeepAlive"
								],
								[
									"dsHasResource\t{DSI}",
									"dsHasResource"
								],
								[
									"dsRmSymbol\t{DSI}",
									"dsRmSymbol"
								],
								[
									"datashield.pkg_status\t{DSI}",
									"datashield.pkg_status"
								],
								[
									"dsDisconnect\t{DSI}",
									"dsDisconnect"
								],
								[
									"dsFetch\t{DSI}",
									"dsFetch"
								],
								[
									"datashield.table_status\t{DSI}",
									"datashield.table_status"
								],
								[
									".__C__DSConnection\t{DSI}",
									".__C__DSConnection"
								],
								[
									"dsListMethods\t{DSI}",
									"dsListMethods"
								],
								[
									"datashield.workspace_rm\t{DSI}",
									"datashield.workspace_rm"
								],
								[
									"dsListWorkspaces\t{DSI}",
									"dsListWorkspaces"
								],
								[
									"dsListResources\t{DSI}",
									"dsListResources"
								],
								[
									"datashield.resource_status\t{DSI}",
									"datashield.resource_status"
								],
								[
									"datashield.assign.table\t{DSI}",
									"datashield.assign.table"
								],
								[
									"dsListSymbols\t{DSI}",
									"dsListSymbols"
								],
								[
									"dsIsAsync\t{DSI}",
									"dsIsAsync"
								],
								[
									"datashield.errors\t{DSI}",
									"datashield.errors"
								],
								[
									"dsAggregate\t{DSI}",
									"dsAggregate"
								],
								[
									"datashield.login\t{DSI}",
									"datashield.login"
								],
								[
									"dsGetInfo\t{DSI}",
									"dsGetInfo"
								],
								[
									"datashield.connections_find\t{DSI}",
									"datashield.connections_find"
								],
								[
									"datashield.symbols\t{DSI}",
									"datashield.symbols"
								],
								[
									".__C__DSDriver\t{DSI}",
									".__C__DSDriver"
								],
								[
									"DSLoginBuilder\t{DSI}",
									"DSLoginBuilder"
								],
								[
									"dsListPackages\t{DSI}",
									"dsListPackages"
								],
								[
									"dsConnect\t{DSI}",
									"dsConnect"
								],
								[
									"datashield.logout\t{DSI}",
									"datashield.logout"
								],
								[
									"datashield.workspace_save\t{DSI}",
									"datashield.workspace_save"
								],
								[
									"datashield.methods\t{DSI}",
									"datashield.methods"
								],
								[
									".__C__DSResult\t{DSI}",
									".__C__DSResult"
								],
								[
									"dsRmWorkspace\t{DSI}",
									"dsRmWorkspace"
								],
								[
									"datashield.rm\t{DSI}",
									"datashield.rm"
								],
								[
									"datashield.connections\t{DSI}",
									"datashield.connections"
								],
								[
									"datashield.assign.expr\t{DSI}",
									"datashield.assign.expr"
								],
								[
									"datashield.connections_default\t{DSI}",
									"datashield.connections_default"
								],
								[
									"dsAssignTable\t{DSI}",
									"dsAssignTable"
								],
								[
									"armadillo.list_projects\t{MolgenisArmadillo}",
									"armadillo.list_projects"
								],
								[
									"armadillo.upload_resource\t{MolgenisArmadillo}",
									"armadillo.upload_resource"
								],
								[
									"armadillo.move_table\t{MolgenisArmadillo}",
									"armadillo.move_table"
								],
								[
									"armadillo.load_table\t{MolgenisArmadillo}",
									"armadillo.load_table"
								],
								[
									"armadillo.create_project\t{MolgenisArmadillo}",
									"armadillo.create_project"
								],
								[
									"armadillo.move_resource\t{MolgenisArmadillo}",
									"armadillo.move_resource"
								],
								[
									"armadillo.set_credentials\t{MolgenisArmadillo}",
									"armadillo.set_credentials"
								],
								[
									"armadillo.delete_resource\t{MolgenisArmadillo}",
									"armadillo.delete_resource"
								],
								[
									"armadillo.list_resources\t{MolgenisArmadillo}",
									"armadillo.list_resources"
								],
								[
									"armadillo.list_tables\t{MolgenisArmadillo}",
									"armadillo.list_tables"
								],
								[
									"armadillo.copy_table\t{MolgenisArmadillo}",
									"armadillo.copy_table"
								],
								[
									"armadillo.copy_resource\t{MolgenisArmadillo}",
									"armadillo.copy_resource"
								],
								[
									"armadillo.upload_table\t{MolgenisArmadillo}",
									"armadillo.upload_table"
								],
								[
									"armadillo.delete_table\t{MolgenisArmadillo}",
									"armadillo.delete_table"
								],
								[
									"armadillo.assume_role_with_web_identity\t{MolgenisArmadillo}",
									"armadillo.assume_role_with_web_identity"
								],
								[
									"armadillo.login\t{MolgenisArmadillo}",
									"armadillo.login"
								],
								[
									"armadillo.load_resource\t{MolgenisArmadillo}",
									"armadillo.load_resource"
								],
								[
									"armadillo.get_token\t{MolgenisArmadillo}",
									"armadillo.get_token"
								],
								[
									"armadillo.delete_project\t{MolgenisArmadillo}",
									"armadillo.delete_project"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"multiply_by_matrix\t{magrittr}",
									"multiply_by_matrix"
								],
								[
									"raise_to_power\t{magrittr}",
									"raise_to_power"
								],
								[
									"inset2\t{magrittr}",
									"inset2"
								],
								[
									"set_attributes\t{magrittr}",
									"set_attributes"
								],
								[
									"extract\t{magrittr}",
									"extract"
								],
								[
									"divide_by_int\t{magrittr}",
									"divide_by_int"
								],
								[
									"is_less_than\t{magrittr}",
									"is_less_than"
								],
								[
									"undebug_fseq\t{magrittr}",
									"undebug_fseq"
								],
								[
									"multiply_by\t{magrittr}",
									"multiply_by"
								],
								[
									"or\t{magrittr}",
									"or"
								],
								[
									"use_series\t{magrittr}",
									"use_series"
								],
								[
									"set_rownames\t{magrittr}",
									"set_rownames"
								],
								[
									"equals\t{magrittr}",
									"equals"
								],
								[
									"not\t{magrittr}",
									"not"
								],
								[
									"add\t{magrittr}",
									"add"
								],
								[
									"inset\t{magrittr}",
									"inset"
								],
								[
									"and\t{magrittr}",
									"and"
								],
								[
									"debug_pipe\t{magrittr}",
									"debug_pipe"
								],
								[
									"divide_by\t{magrittr}",
									"divide_by"
								],
								[
									"debug_fseq\t{magrittr}",
									"debug_fseq"
								],
								[
									"set_names\t{magrittr}",
									"set_names"
								],
								[
									"mod\t{magrittr}",
									"mod"
								],
								[
									"set_attr\t{magrittr}",
									"set_attr"
								],
								[
									"extract2\t{magrittr}",
									"extract2"
								],
								[
									"set_colnames\t{magrittr}",
									"set_colnames"
								],
								[
									"pas\t{magrittr}",
									"pas"
								],
								[
									"subtract\t{magrittr}",
									"subtract"
								],
								[
									"freduce\t{magrittr}",
									"freduce"
								],
								[
									"is_weakly_less_than\t{magrittr}",
									"is_weakly_less_than"
								],
								[
									"is_in\t{magrittr}",
									"is_in"
								],
								[
									"is_weakly_greater_than\t{magrittr}",
									"is_weakly_greater_than"
								],
								[
									"set_class\t{magrittr}",
									"set_class"
								],
								[
									"functions\t{magrittr}",
									"functions"
								],
								[
									"pipe_nested\t{magrittr}",
									"pipe_nested"
								],
								[
									"pipe_eager_lexical\t{magrittr}",
									"pipe_eager_lexical"
								],
								[
									"is_greater_than\t{magrittr}",
									"is_greater_than"
								],
								[
									"pipe_lazy_masking\t{magrittr}",
									"pipe_lazy_masking"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"Cairo\tInstalled Package",
									"Cairo"
								],
								[
									"CompQuadForm\tInstalled Package",
									"CompQuadForm"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DSI\tInstalled Package",
									"DSI"
								],
								[
									"DSMolgenisArmadillo\tInstalled Package",
									"DSMolgenisArmadillo"
								],
								[
									"DSOpal\tInstalled Package",
									"DSOpal"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"FactoMineR\tInstalled Package",
									"FactoMineR"
								],
								[
									"Formula\tInstalled Package",
									"Formula"
								],
								[
									"GGally\tInstalled Package",
									"GGally"
								],
								[
									"GPArotation\tInstalled Package",
									"GPArotation"
								],
								[
									"Hmisc\tInstalled Package",
									"Hmisc"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"MolgenisArmadillo\tInstalled Package",
									"MolgenisArmadillo"
								],
								[
									"MolgenisAuth\tInstalled Package",
									"MolgenisAuth"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"alspac\tInstalled Package",
									"alspac"
								],
								[
									"arrow\tInstalled Package",
									"arrow"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"aws.iam\tInstalled Package",
									"aws.iam"
								],
								[
									"aws.s3\tInstalled Package",
									"aws.s3"
								],
								[
									"aws.signature\tInstalled Package",
									"aws.signature"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"bookdown\tInstalled Package",
									"bookdown"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"conquer\tInstalled Package",
									"conquer"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"dcurver\tInstalled Package",
									"dcurver"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dotCall64\tInstalled Package",
									"dotCall64"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dsBaseClient\tInstalled Package",
									"dsBaseClient"
								],
								[
									"dsHelper\tInstalled Package",
									"dsHelper"
								],
								[
									"dsUpload\tInstalled Package",
									"dsUpload"
								],
								[
									"dtplyr\tInstalled Package",
									"dtplyr"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"ellipse\tInstalled Package",
									"ellipse"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"expm\tInstalled Package",
									"expm"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fields\tInstalled Package",
									"fields"
								],
								[
									"flashClust\tInstalled Package",
									"flashClust"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"forestplot\tInstalled Package",
									"forestplot"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"gargle\tInstalled Package",
									"gargle"
								],
								[
									"gdata\tInstalled Package",
									"gdata"
								],
								[
									"gdtools\tInstalled Package",
									"gdtools"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggraph\tInstalled Package",
									"ggraph"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gmodels\tInstalled Package",
									"gmodels"
								],
								[
									"googledrive\tInstalled Package",
									"googledrive"
								],
								[
									"googlesheets4\tInstalled Package",
									"googlesheets4"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"graphlayouts\tInstalled Package",
									"graphlayouts"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gsubfn\tInstalled Package",
									"gsubfn"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"hrbrthemes\tInstalled Package",
									"hrbrthemes"
								],
								[
									"htmlTable\tInstalled Package",
									"htmlTable"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"ids\tInstalled Package",
									"ids"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jpeg\tInstalled Package",
									"jpeg"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"kableExtra\tInstalled Package",
									"kableExtra"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"labelled\tInstalled Package",
									"labelled"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"latticeExtra\tInstalled Package",
									"latticeExtra"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"leaps\tInstalled Package",
									"leaps"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"ltm\tInstalled Package",
									"ltm"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"maditr\tInstalled Package",
									"maditr"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"maptools\tInstalled Package",
									"maptools"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"meta\tInstalled Package",
									"meta"
								],
								[
									"metafor\tInstalled Package",
									"metafor"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mirt\tInstalled Package",
									"mirt"
								],
								[
									"mitools\tInstalled Package",
									"mitools"
								],
								[
									"mnormt\tInstalled Package",
									"mnormt"
								],
								[
									"mockery\tInstalled Package",
									"mockery"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"msm\tInstalled Package",
									"msm"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"opalr\tInstalled Package",
									"opalr"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"panelaggregation\tInstalled Package",
									"panelaggregation"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"pastecs\tInstalled Package",
									"pastecs"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"permute\tInstalled Package",
									"permute"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"png\tInstalled Package",
									"png"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"polycor\tInstalled Package",
									"polycor"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"proto\tInstalled Package",
									"proto"
								],
								[
									"proxy\tInstalled Package",
									"proxy"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"psych\tInstalled Package",
									"psych"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readstata13\tInstalled Package",
									"readstata13"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reshape\tInstalled Package",
									"reshape"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rio\tInstalled Package",
									"rio"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rspiro\tInstalled Package",
									"rspiro"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"scatterplot3d\tInstalled Package",
									"scatterplot3d"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"showtext\tInstalled Package",
									"showtext"
								],
								[
									"showtextdb\tInstalled Package",
									"showtextdb"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"spam\tInstalled Package",
									"spam"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"statar\tInstalled Package",
									"statar"
								],
								[
									"statmod\tInstalled Package",
									"statmod"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survey\tInstalled Package",
									"survey"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"svglite\tInstalled Package",
									"svglite"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"sysfonts\tInstalled Package",
									"sysfonts"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"tableone\tInstalled Package",
									"tableone"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidygraph\tInstalled Package",
									"tidygraph"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tmvnsim\tInstalled Package",
									"tmvnsim"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"triebeard\tInstalled Package",
									"triebeard"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"urltools\tInstalled Package",
									"urltools"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"uuid\tInstalled Package",
									"uuid"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vegan\tInstalled Package",
									"vegan"
								],
								[
									"viridis\tInstalled Package",
									"viridis"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"webshot\tInstalled Package",
									"webshot"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"dsHelper",
								"grDevices",
								"tidyverse",
								"kableExtra",
								"methods",
								"DSMolgenisArmadillo",
								"utils",
								"dsBaseClient",
								"remotes",
								"base",
								"stats",
								"DSI",
								"MolgenisArmadillo",
								"graphics",
								"magrittr"
							],
							"syntax": "Packages/R-Box/R Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "reports/31-may-21/env_pnd_desc_03_06_21.Rmd",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16991,
						"regions":
						{
						},
						"selection":
						[
							[
								1445,
								1299
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"My\t{methods}",
									"My"
								],
								[
									".Rprofile\t{methods}",
									".Rprofile"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"My\t{stats}",
									"My"
								],
								[
									".Rprofile\t{stats}",
									".Rprofile"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"My\t{Cairo}",
									"My"
								],
								[
									".Rprofile\t{Cairo}",
									".Rprofile"
								],
								[
									"CairoSVG\t{Cairo}",
									"CairoSVG"
								],
								[
									"Cairo.capabilities\t{Cairo}",
									"Cairo.capabilities"
								],
								[
									"CairoTIFF\t{Cairo}",
									"CairoTIFF"
								],
								[
									"Cairo.serial\t{Cairo}",
									"Cairo.serial"
								],
								[
									"CairoFontMatch\t{Cairo}",
									"CairoFontMatch"
								],
								[
									"CairoPNG\t{Cairo}",
									"CairoPNG"
								],
								[
									"Cairo.onSave\t{Cairo}",
									"Cairo.onSave"
								],
								[
									"CairoFonts\t{Cairo}",
									"CairoFonts"
								],
								[
									"CairoWin\t{Cairo}",
									"CairoWin"
								],
								[
									"Cairo.snapshot\t{Cairo}",
									"Cairo.snapshot"
								],
								[
									"CairoPS\t{Cairo}",
									"CairoPS"
								],
								[
									"Cairo.capture\t{Cairo}",
									"Cairo.capture"
								],
								[
									"Cairo\t{Cairo}",
									"Cairo"
								],
								[
									"CairoX11\t{Cairo}",
									"CairoX11"
								],
								[
									"CairoJPEG\t{Cairo}",
									"CairoJPEG"
								],
								[
									"My\t{grDevices}",
									"My"
								],
								[
									".Rprofile\t{grDevices}",
									".Rprofile"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"My\t{kableExtra}",
									"My"
								],
								[
									".Rprofile\t{kableExtra}",
									".Rprofile"
								],
								[
									"kable_classic_2\t{kableExtra}",
									"kable_classic_2"
								],
								[
									"spec_color\t{kableExtra}",
									"spec_color"
								],
								[
									"pack_rows\t{kableExtra}",
									"pack_rows"
								],
								[
									"group_rows\t{kableExtra}",
									"group_rows"
								],
								[
									"text_spec\t{kableExtra}",
									"text_spec"
								],
								[
									"cell_spec\t{kableExtra}",
									"cell_spec"
								],
								[
									"spec_hist\t{kableExtra}",
									"spec_hist"
								],
								[
									"html_dependency_kePrint\t{kableExtra}",
									"html_dependency_kePrint"
								],
								[
									"as_image\t{kableExtra}",
									"as_image"
								],
								[
									"spec_image\t{kableExtra}",
									"spec_image"
								],
								[
									"spec_pointrange\t{kableExtra}",
									"spec_pointrange"
								],
								[
									"xtable2kable\t{kableExtra}",
									"xtable2kable"
								],
								[
									"spec_font_size\t{kableExtra}",
									"spec_font_size"
								],
								[
									"header_separate\t{kableExtra}",
									"header_separate"
								],
								[
									"usepackage_latex\t{kableExtra}",
									"usepackage_latex"
								],
								[
									"auto_index\t{kableExtra}",
									"auto_index"
								],
								[
									"linebreak\t{kableExtra}",
									"linebreak"
								],
								[
									"kable_as_xml\t{kableExtra}",
									"kable_as_xml"
								],
								[
									"spec_tooltip\t{kableExtra}",
									"spec_tooltip"
								],
								[
									"spec_popover\t{kableExtra}",
									"spec_popover"
								],
								[
									"kableExtra_latex_packages\t{kableExtra}",
									"kableExtra_latex_packages"
								],
								[
									"collapse_rows\t{kableExtra}",
									"collapse_rows"
								],
								[
									"column_spec\t{kableExtra}",
									"column_spec"
								],
								[
									"spec_plot\t{kableExtra}",
									"spec_plot"
								],
								[
									"footnote_marker_alphabet\t{kableExtra}",
									"footnote_marker_alphabet"
								],
								[
									"save_kable\t{kableExtra}",
									"save_kable"
								],
								[
									"add_header_above\t{kableExtra}",
									"add_header_above"
								],
								[
									"add_footnote\t{kableExtra}",
									"add_footnote"
								],
								[
									"html_dependency_bsTable\t{kableExtra}",
									"html_dependency_bsTable"
								],
								[
									"kable_as_image\t{kableExtra}",
									"kable_as_image"
								],
								[
									"xml_as_kable\t{kableExtra}",
									"xml_as_kable"
								],
								[
									"html_dependency_lightable\t{kableExtra}",
									"html_dependency_lightable"
								],
								[
									"kable_styling\t{kableExtra}",
									"kable_styling"
								],
								[
									"scroll_box\t{kableExtra}",
									"scroll_box"
								],
								[
									"kable_material_dark\t{kableExtra}",
									"kable_material_dark"
								],
								[
									"kbl\t{kableExtra}",
									"kbl"
								],
								[
									"kable_material\t{kableExtra}",
									"kable_material"
								],
								[
									"footnote_marker_number\t{kableExtra}",
									"footnote_marker_number"
								],
								[
									"magic_mirror\t{kableExtra}",
									"magic_mirror"
								],
								[
									"kable_classic\t{kableExtra}",
									"kable_classic"
								],
								[
									"row_spec\t{kableExtra}",
									"row_spec"
								],
								[
									"spec_boxplot\t{kableExtra}",
									"spec_boxplot"
								],
								[
									"rmd_format\t{kableExtra}",
									"rmd_format"
								],
								[
									"add_indent\t{kableExtra}",
									"add_indent"
								],
								[
									"landscape\t{kableExtra}",
									"landscape"
								],
								[
									"kable\t{kableExtra}",
									"kable"
								],
								[
									"footnote\t{kableExtra}",
									"footnote"
								],
								[
									"spec_angle\t{kableExtra}",
									"spec_angle"
								],
								[
									"footnote_marker_symbol\t{kableExtra}",
									"footnote_marker_symbol"
								],
								[
									"kable_minimal\t{kableExtra}",
									"kable_minimal"
								],
								[
									"remove_column\t{kableExtra}",
									"remove_column"
								],
								[
									"My\t{utils}",
									"My"
								],
								[
									".Rprofile\t{utils}",
									".Rprofile"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"My\t{graphics}",
									"My"
								],
								[
									".Rprofile\t{graphics}",
									".Rprofile"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"My\t{base}",
									"My"
								],
								[
									".Rprofile\t{base}",
									".Rprofile"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"My\t{see}",
									"My"
								],
								[
									".Rprofile\t{see}",
									".Rprofile"
								],
								[
									"scale_fill_bluebrown\t{see}",
									"scale_fill_bluebrown"
								],
								[
									"see_colors\t{see}",
									"see_colors"
								],
								[
									"geom_pooljitter\t{see}",
									"geom_pooljitter"
								],
								[
									"scale_fill_metro_c\t{see}",
									"scale_fill_metro_c"
								],
								[
									"scale_fill_metro_d\t{see}",
									"scale_fill_metro_d"
								],
								[
									"scale_color_flat\t{see}",
									"scale_color_flat"
								],
								[
									"geom_jitter_borderless\t{see}",
									"geom_jitter_borderless"
								],
								[
									"scale_color_flat_c\t{see}",
									"scale_color_flat_c"
								],
								[
									"scale_color_flat_d\t{see}",
									"scale_color_flat_d"
								],
								[
									"palette_flat\t{see}",
									"palette_flat"
								],
								[
									"palette_pizza\t{see}",
									"palette_pizza"
								],
								[
									"scale_fill_material_c\t{see}",
									"scale_fill_material_c"
								],
								[
									"scale_fill_metro\t{see}",
									"scale_fill_metro"
								],
								[
									"scale_colour_bluebrown_c\t{see}",
									"scale_colour_bluebrown_c"
								],
								[
									"scale_fill_material_d\t{see}",
									"scale_fill_material_d"
								],
								[
									"scale_colour_bluebrown_d\t{see}",
									"scale_colour_bluebrown_d"
								],
								[
									"plots\t{see}",
									"plots"
								],
								[
									"scale_colour_pizza_c\t{see}",
									"scale_colour_pizza_c"
								],
								[
									"scale_colour_material\t{see}",
									"scale_colour_material"
								],
								[
									"scale_colour_pizza_d\t{see}",
									"scale_colour_pizza_d"
								],
								[
									"theme_radar\t{see}",
									"theme_radar"
								],
								[
									"geom_poolpoint\t{see}",
									"geom_poolpoint"
								],
								[
									"scale_color_metro_c\t{see}",
									"scale_color_metro_c"
								],
								[
									"palette_metro\t{see}",
									"palette_metro"
								],
								[
									"geom_violindot\t{see}",
									"geom_violindot"
								],
								[
									"scale_color_metro_d\t{see}",
									"scale_color_metro_d"
								],
								[
									"geom_count_borderless\t{see}",
									"geom_count_borderless"
								],
								[
									"data_plot\t{see}",
									"data_plot"
								],
								[
									"theme_radar_dark\t{see}",
									"theme_radar_dark"
								],
								[
									"geom_jitter2\t{see}",
									"geom_jitter2"
								],
								[
									"scale_colour_bluebrown\t{see}",
									"scale_colour_bluebrown"
								],
								[
									"palette_material\t{see}",
									"palette_material"
								],
								[
									"scale_colour_metro_c\t{see}",
									"scale_colour_metro_c"
								],
								[
									"scale_fill_flat_c\t{see}",
									"scale_fill_flat_c"
								],
								[
									"scale_colour_metro_d\t{see}",
									"scale_colour_metro_d"
								],
								[
									"scale_fill_flat_d\t{see}",
									"scale_fill_flat_d"
								],
								[
									"scale_color_social_c\t{see}",
									"scale_color_social_c"
								],
								[
									"scale_fill_material\t{see}",
									"scale_fill_material"
								],
								[
									"scale_color_social_d\t{see}",
									"scale_color_social_d"
								],
								[
									"theme_lucid\t{see}",
									"theme_lucid"
								],
								[
									"scale_color_pizza\t{see}",
									"scale_color_pizza"
								],
								[
									"add_plot_attributes\t{see}",
									"add_plot_attributes"
								],
								[
									"geom_violinhalf\t{see}",
									"geom_violinhalf"
								],
								[
									"scale_colour_see\t{see}",
									"scale_colour_see"
								],
								[
									"geom_point2\t{see}",
									"geom_point2"
								],
								[
									"scale_fill_see\t{see}",
									"scale_fill_see"
								],
								[
									"scale_colour_metro\t{see}",
									"scale_colour_metro"
								],
								[
									"geom_pointrange2\t{see}",
									"geom_pointrange2"
								],
								[
									"scale_fill_see_c\t{see}",
									"scale_fill_see_c"
								],
								[
									"scale_fill_see_d\t{see}",
									"scale_fill_see_d"
								],
								[
									"golden_ratio\t{see}",
									"golden_ratio"
								],
								[
									"bluebrown_colors\t{see}",
									"bluebrown_colors"
								],
								[
									"scale_colour_flat\t{see}",
									"scale_colour_flat"
								],
								[
									"geom_count2\t{see}",
									"geom_count2"
								],
								[
									"theme_abyss\t{see}",
									"theme_abyss"
								],
								[
									"scale_fill_social\t{see}",
									"scale_fill_social"
								],
								[
									"scale_color_material_c\t{see}",
									"scale_color_material_c"
								],
								[
									"scale_color_material_d\t{see}",
									"scale_color_material_d"
								],
								[
									"scale_color_bluebrown_c\t{see}",
									"scale_color_bluebrown_c"
								],
								[
									"scale_color_bluebrown_d\t{see}",
									"scale_color_bluebrown_d"
								],
								[
									"scale_colour_see_c\t{see}",
									"scale_colour_see_c"
								],
								[
									"palette_see\t{see}",
									"palette_see"
								],
								[
									"scale_fill_pizza\t{see}",
									"scale_fill_pizza"
								],
								[
									"scale_colour_see_d\t{see}",
									"scale_colour_see_d"
								],
								[
									"scale_colour_pizza\t{see}",
									"scale_colour_pizza"
								],
								[
									"scale_color_social\t{see}",
									"scale_color_social"
								],
								[
									"palette_social\t{see}",
									"palette_social"
								],
								[
									"scale_colour_social_c\t{see}",
									"scale_colour_social_c"
								],
								[
									"scale_colour_social_d\t{see}",
									"scale_colour_social_d"
								],
								[
									"palette_bluebrown\t{see}",
									"palette_bluebrown"
								],
								[
									"material_colors\t{see}",
									"material_colors"
								],
								[
									"theme_modern\t{see}",
									"theme_modern"
								],
								[
									"scale_color_pizza_c\t{see}",
									"scale_color_pizza_c"
								],
								[
									"scale_color_pizza_d\t{see}",
									"scale_color_pizza_d"
								],
								[
									"scale_fill_flat\t{see}",
									"scale_fill_flat"
								],
								[
									"pizza_colors\t{see}",
									"pizza_colors"
								],
								[
									"scale_color_see_c\t{see}",
									"scale_color_see_c"
								],
								[
									"scale_color_material\t{see}",
									"scale_color_material"
								],
								[
									"scale_color_see_d\t{see}",
									"scale_color_see_d"
								],
								[
									"scale_color_see\t{see}",
									"scale_color_see"
								],
								[
									"scale_fill_bluebrown_c\t{see}",
									"scale_fill_bluebrown_c"
								],
								[
									"metro_colors\t{see}",
									"metro_colors"
								],
								[
									"theme_blackboard\t{see}",
									"theme_blackboard"
								],
								[
									"scale_fill_bluebrown_d\t{see}",
									"scale_fill_bluebrown_d"
								],
								[
									"scale_color_bluebrown\t{see}",
									"scale_color_bluebrown"
								],
								[
									"scale_fill_pizza_c\t{see}",
									"scale_fill_pizza_c"
								],
								[
									"scale_fill_pizza_d\t{see}",
									"scale_fill_pizza_d"
								],
								[
									"scale_fill_social_c\t{see}",
									"scale_fill_social_c"
								],
								[
									"scale_colour_flat_c\t{see}",
									"scale_colour_flat_c"
								],
								[
									"scale_fill_social_d\t{see}",
									"scale_fill_social_d"
								],
								[
									"scale_colour_flat_d\t{see}",
									"scale_colour_flat_d"
								],
								[
									"geom_pointrange_borderless\t{see}",
									"geom_pointrange_borderless"
								],
								[
									"geom_point_borderless\t{see}",
									"geom_point_borderless"
								],
								[
									"coord_radar\t{see}",
									"coord_radar"
								],
								[
									"social_colors\t{see}",
									"social_colors"
								],
								[
									"scale_colour_material_c\t{see}",
									"scale_colour_material_c"
								],
								[
									"scale_colour_material_d\t{see}",
									"scale_colour_material_d"
								],
								[
									"scale_color_metro\t{see}",
									"scale_color_metro"
								],
								[
									"flat_colors\t{see}",
									"flat_colors"
								],
								[
									"My\t{GGally}",
									"My"
								],
								[
									".Rprofile\t{GGally}",
									".Rprofile"
								],
								[
									"max1\t{GGally}",
									"max1"
								],
								[
									"add_ref_lines\t{GGally}",
									"add_ref_lines"
								],
								[
									"ggsurv\t{GGally}",
									"ggsurv"
								],
								[
									"putPlot\t{GGally}",
									"putPlot"
								],
								[
									"wrap_fn_with_param_arg\t{GGally}",
									"wrap_fn_with_param_arg"
								],
								[
									"ggtable\t{GGally}",
									"ggtable"
								],
								[
									"uppertriangle\t{GGally}",
									"uppertriangle"
								],
								[
									"ggally_facetbar\t{GGally}",
									"ggally_facetbar"
								],
								[
									"ggally_dot\t{GGally}",
									"ggally_dot"
								],
								[
									"mean0\t{GGally}",
									"mean0"
								],
								[
									"is_horizontal\t{GGally}",
									"is_horizontal"
								],
								[
									"stat_cross\t{GGally}",
									"stat_cross"
								],
								[
									"ggally_diagAxis\t{GGally}",
									"ggally_diagAxis"
								],
								[
									"ggally_cor_v1_5\t{GGally}",
									"ggally_cor_v1_5"
								],
								[
									"ggally_smooth\t{GGally}",
									"ggally_smooth"
								],
								[
									"mapping_color_to_fill\t{GGally}",
									"mapping_color_to_fill"
								],
								[
									"vig_ggally\t{GGally}",
									"vig_ggally"
								],
								[
									"StatGGallyCount\t{GGally}",
									"StatGGallyCount"
								],
								[
									"rescale01\t{GGally}",
									"rescale01"
								],
								[
									"ggally_trends\t{GGally}",
									"ggally_trends"
								],
								[
									"ggally_smooth_loess\t{GGally}",
									"ggally_smooth_loess"
								],
								[
									"ggally_nostic_hat\t{GGally}",
									"ggally_nostic_hat"
								],
								[
									"ggally_cor\t{GGally}",
									"ggally_cor"
								],
								[
									"ggally_nostic_resid\t{GGally}",
									"ggally_nostic_resid"
								],
								[
									"wrap_fn_with_params\t{GGally}",
									"wrap_fn_with_params"
								],
								[
									"add_to_ggmatrix\t{GGally}",
									"add_to_ggmatrix"
								],
								[
									"stat_prop\t{GGally}",
									"stat_prop"
								],
								[
									"broomify\t{GGally}",
									"broomify"
								],
								[
									"ggally_denstrip\t{GGally}",
									"ggally_denstrip"
								],
								[
									"ggnostic\t{GGally}",
									"ggnostic"
								],
								[
									"ggally_autopointDiag\t{GGally}",
									"ggally_autopointDiag"
								],
								[
									"ggfacet\t{GGally}",
									"ggfacet"
								],
								[
									"ggcoef\t{GGally}",
									"ggcoef"
								],
								[
									"eval_data_col\t{GGally}",
									"eval_data_col"
								],
								[
									"ggally_na\t{GGally}",
									"ggally_na"
								],
								[
									"ggally_table\t{GGally}",
									"ggally_table"
								],
								[
									"ggnet2\t{GGally}",
									"ggnet2"
								],
								[
									"ggnet\t{GGally}",
									"ggnet"
								],
								[
									"ggally_countDiag\t{GGally}",
									"ggally_countDiag"
								],
								[
									"wrapp\t{GGally}",
									"wrapp"
								],
								[
									"gglegend\t{GGally}",
									"gglegend"
								],
								[
									"is.glyphplot\t{GGally}",
									"is.glyphplot"
								],
								[
									"geom_stripped_cols\t{GGally}",
									"geom_stripped_cols"
								],
								[
									"ggally_densityDiag\t{GGally}",
									"ggally_densityDiag"
								],
								[
									"ggmatrix\t{GGally}",
									"ggmatrix"
								],
								[
									"ggnetworkmap\t{GGally}",
									"ggnetworkmap"
								],
								[
									"ggcoef_compare\t{GGally}",
									"ggcoef_compare"
								],
								[
									"scatmat\t{GGally}",
									"scatmat"
								],
								[
									"fn_switch\t{GGally}",
									"fn_switch"
								],
								[
									"ggscatmat\t{GGally}",
									"ggscatmat"
								],
								[
									"mapping_string\t{GGally}",
									"mapping_string"
								],
								[
									"model_beta_variables\t{GGally}",
									"model_beta_variables"
								],
								[
									"stat_weighted_mean\t{GGally}",
									"stat_weighted_mean"
								],
								[
									"ggally_box_no_facet\t{GGally}",
									"ggally_box_no_facet"
								],
								[
									"ggally_autopoint\t{GGally}",
									"ggally_autopoint"
								],
								[
									"ggally_rowbar\t{GGally}",
									"ggally_rowbar"
								],
								[
									"model_beta_label\t{GGally}",
									"model_beta_label"
								],
								[
									"is_character_column\t{GGally}",
									"is_character_column"
								],
								[
									"mapping_swap_x_y\t{GGally}",
									"mapping_swap_x_y"
								],
								[
									"ggally_colbar\t{GGally}",
									"ggally_colbar"
								],
								[
									"min0\t{GGally}",
									"min0"
								],
								[
									"print_if_interactive\t{GGally}",
									"print_if_interactive"
								],
								[
									"ggduo\t{GGally}",
									"ggduo"
								],
								[
									"ggcoef_multinom\t{GGally}",
									"ggcoef_multinom"
								],
								[
									"ggally_count\t{GGally}",
									"ggally_count"
								],
								[
									"ggally_nostic_sigma\t{GGally}",
									"ggally_nostic_sigma"
								],
								[
									"ggts\t{GGally}",
									"ggts"
								],
								[
									"ggally_barDiag\t{GGally}",
									"ggally_barDiag"
								],
								[
									"ggcorr\t{GGally}",
									"ggcorr"
								],
								[
									"signif_stars\t{GGally}",
									"signif_stars"
								],
								[
									"remove_color_unless_equal\t{GGally}",
									"remove_color_unless_equal"
								],
								[
									"StatProp\t{GGally}",
									"StatProp"
								],
								[
									"StatCross\t{GGally}",
									"StatCross"
								],
								[
									"ggally_blankDiag\t{GGally}",
									"ggally_blankDiag"
								],
								[
									"ggally_text\t{GGally}",
									"ggally_text"
								],
								[
									"ggally_nostic_std_resid\t{GGally}",
									"ggally_nostic_std_resid"
								],
								[
									"ggally_ratio\t{GGally}",
									"ggally_ratio"
								],
								[
									"ggmatrix_gtable\t{GGally}",
									"ggmatrix_gtable"
								],
								[
									"weighted_median_iqr\t{GGally}",
									"weighted_median_iqr"
								],
								[
									"v1_ggmatrix_theme\t{GGally}",
									"v1_ggmatrix_theme"
								],
								[
									"range01\t{GGally}",
									"range01"
								],
								[
									"glyphs\t{GGally}",
									"glyphs"
								],
								[
									"ggally_facetdensitystrip\t{GGally}",
									"ggally_facetdensitystrip"
								],
								[
									"ggally_tableDiag\t{GGally}",
									"ggally_tableDiag"
								],
								[
									"ggbivariate\t{GGally}",
									"ggbivariate"
								],
								[
									"ggcoef_plot\t{GGally}",
									"ggcoef_plot"
								],
								[
									"brew_colors\t{GGally}",
									"brew_colors"
								],
								[
									"stat_ggally_count\t{GGally}",
									"stat_ggally_count"
								],
								[
									"add_ref_boxes\t{GGally}",
									"add_ref_boxes"
								],
								[
									"glyphplot\t{GGally}",
									"glyphplot"
								],
								[
									"lowertriangle\t{GGally}",
									"lowertriangle"
								],
								[
									"ggally_naDiag\t{GGally}",
									"ggally_naDiag"
								],
								[
									"ggally_cross\t{GGally}",
									"ggally_cross"
								],
								[
									"ggmatrix_location\t{GGally}",
									"ggmatrix_location"
								],
								[
									"ggally_density\t{GGally}",
									"ggally_density"
								],
								[
									"ggmatrix_progress\t{GGally}",
									"ggmatrix_progress"
								],
								[
									"ggally_smooth_lm\t{GGally}",
									"ggally_smooth_lm"
								],
								[
									"grab_legend\t{GGally}",
									"grab_legend"
								],
								[
									"ggally_facethist\t{GGally}",
									"ggally_facethist"
								],
								[
									"getPlot\t{GGally}",
									"getPlot"
								],
								[
									"geom_stripped_rows\t{GGally}",
									"geom_stripped_rows"
								],
								[
									"ggpairs\t{GGally}",
									"ggpairs"
								],
								[
									"ggally_facetdensity\t{GGally}",
									"ggally_facetdensity"
								],
								[
									"ggally_box\t{GGally}",
									"ggally_box"
								],
								[
									"ggally_nostic_cooksd\t{GGally}",
									"ggally_nostic_cooksd"
								],
								[
									"ggally_statistic\t{GGally}",
									"ggally_statistic"
								],
								[
									"ggally_summarise_by\t{GGally}",
									"ggally_summarise_by"
								],
								[
									"ggally_blank\t{GGally}",
									"ggally_blank"
								],
								[
									"StatWeightedMean\t{GGally}",
									"StatWeightedMean"
								],
								[
									"weighted_mean_sd\t{GGally}",
									"weighted_mean_sd"
								],
								[
									"ggally_points\t{GGally}",
									"ggally_points"
								],
								[
									"ggally_nostic_se_fit\t{GGally}",
									"ggally_nostic_se_fit"
								],
								[
									"ggally_crosstable\t{GGally}",
									"ggally_crosstable"
								],
								[
									"rescale11\t{GGally}",
									"rescale11"
								],
								[
									"ggcoef_model\t{GGally}",
									"ggcoef_model"
								],
								[
									"ggally_dot_no_facet\t{GGally}",
									"ggally_dot_no_facet"
								],
								[
									"ggparcoord\t{GGally}",
									"ggparcoord"
								],
								[
									"ggally_dot_and_box\t{GGally}",
									"ggally_dot_and_box"
								],
								[
									"model_response_variables\t{GGally}",
									"model_response_variables"
								],
								[
									"My\tInstalled Package",
									"My"
								],
								[
									".Rprofile\tInstalled Package",
									".Rprofile"
								],
								[
									"works!\tInstalled Package",
									"works!"
								],
								[
									"\nBH\tInstalled Package",
									"\nBH"
								],
								[
									"Cairo\tInstalled Package",
									"Cairo"
								],
								[
									"CompQuadForm\tInstalled Package",
									"CompQuadForm"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DSI\tInstalled Package",
									"DSI"
								],
								[
									"DSMolgenisArmadillo\tInstalled Package",
									"DSMolgenisArmadillo"
								],
								[
									"DSOpal\tInstalled Package",
									"DSOpal"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"EnvStats\tInstalled Package",
									"EnvStats"
								],
								[
									"FactoMineR\tInstalled Package",
									"FactoMineR"
								],
								[
									"Formula\tInstalled Package",
									"Formula"
								],
								[
									"GGally\tInstalled Package",
									"GGally"
								],
								[
									"GPArotation\tInstalled Package",
									"GPArotation"
								],
								[
									"Hmisc\tInstalled Package",
									"Hmisc"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"MolgenisArmadillo\tInstalled Package",
									"MolgenisArmadillo"
								],
								[
									"MolgenisAuth\tInstalled Package",
									"MolgenisAuth"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"alspac\tInstalled Package",
									"alspac"
								],
								[
									"arrow\tInstalled Package",
									"arrow"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"aws.iam\tInstalled Package",
									"aws.iam"
								],
								[
									"aws.s3\tInstalled Package",
									"aws.s3"
								],
								[
									"aws.signature\tInstalled Package",
									"aws.signature"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bayestestR\tInstalled Package",
									"bayestestR"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"bookdown\tInstalled Package",
									"bookdown"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"conquer\tInstalled Package",
									"conquer"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"dcurver\tInstalled Package",
									"dcurver"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dotCall64\tInstalled Package",
									"dotCall64"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dsBaseClient\tInstalled Package",
									"dsBaseClient"
								],
								[
									"dsHelper\tInstalled Package",
									"dsHelper"
								],
								[
									"dsUpload\tInstalled Package",
									"dsUpload"
								],
								[
									"dtplyr\tInstalled Package",
									"dtplyr"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"effectsize\tInstalled Package",
									"effectsize"
								],
								[
									"ellipse\tInstalled Package",
									"ellipse"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"expm\tInstalled Package",
									"expm"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fields\tInstalled Package",
									"fields"
								],
								[
									"flashClust\tInstalled Package",
									"flashClust"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"forestplot\tInstalled Package",
									"forestplot"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"gargle\tInstalled Package",
									"gargle"
								],
								[
									"gdata\tInstalled Package",
									"gdata"
								],
								[
									"gdtools\tInstalled Package",
									"gdtools"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggraph\tInstalled Package",
									"ggraph"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggridges\tInstalled Package",
									"ggridges"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gmodels\tInstalled Package",
									"gmodels"
								],
								[
									"googledrive\tInstalled Package",
									"googledrive"
								],
								[
									"googlesheets4\tInstalled Package",
									"googlesheets4"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"graphlayouts\tInstalled Package",
									"graphlayouts"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gsubfn\tInstalled Package",
									"gsubfn"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"hrbrthemes\tInstalled Package",
									"hrbrthemes"
								],
								[
									"htmlTable\tInstalled Package",
									"htmlTable"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"ids\tInstalled Package",
									"ids"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"insight\tInstalled Package",
									"insight"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jpeg\tInstalled Package",
									"jpeg"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"kableExtra\tInstalled Package",
									"kableExtra"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"labelled\tInstalled Package",
									"labelled"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"latticeExtra\tInstalled Package",
									"latticeExtra"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"leaps\tInstalled Package",
									"leaps"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lspline\tInstalled Package",
									"lspline"
								],
								[
									"ltm\tInstalled Package",
									"ltm"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"maditr\tInstalled Package",
									"maditr"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"maptools\tInstalled Package",
									"maptools"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"meta\tInstalled Package",
									"meta"
								],
								[
									"metafor\tInstalled Package",
									"metafor"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mirt\tInstalled Package",
									"mirt"
								],
								[
									"mitools\tInstalled Package",
									"mitools"
								],
								[
									"mnormt\tInstalled Package",
									"mnormt"
								],
								[
									"mockery\tInstalled Package",
									"mockery"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"msm\tInstalled Package",
									"msm"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"nortest\tInstalled Package",
									"nortest"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"opalr\tInstalled Package",
									"opalr"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"panelaggregation\tInstalled Package",
									"panelaggregation"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"parameters\tInstalled Package",
									"parameters"
								],
								[
									"parsedate\tInstalled Package",
									"parsedate"
								],
								[
									"pastecs\tInstalled Package",
									"pastecs"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"permute\tInstalled Package",
									"permute"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"png\tInstalled Package",
									"png"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"polycor\tInstalled Package",
									"polycor"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"proto\tInstalled Package",
									"proto"
								],
								[
									"proxy\tInstalled Package",
									"proxy"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"psych\tInstalled Package",
									"psych"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readstata13\tInstalled Package",
									"readstata13"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reshape\tInstalled Package",
									"reshape"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rhub\tInstalled Package",
									"rhub"
								],
								[
									"rio\tInstalled Package",
									"rio"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rspiro\tInstalled Package",
									"rspiro"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"scatterplot3d\tInstalled Package",
									"scatterplot3d"
								],
								[
									"see\tInstalled Package",
									"see"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"showtext\tInstalled Package",
									"showtext"
								],
								[
									"showtextdb\tInstalled Package",
									"showtextdb"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"spam\tInstalled Package",
									"spam"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"statar\tInstalled Package",
									"statar"
								],
								[
									"statmod\tInstalled Package",
									"statmod"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survey\tInstalled Package",
									"survey"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"svglite\tInstalled Package",
									"svglite"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"sysfonts\tInstalled Package",
									"sysfonts"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"tableone\tInstalled Package",
									"tableone"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidygraph\tInstalled Package",
									"tidygraph"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tmvnsim\tInstalled Package",
									"tmvnsim"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"triebeard\tInstalled Package",
									"triebeard"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"urltools\tInstalled Package",
									"urltools"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"uuid\tInstalled Package",
									"uuid"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vegan\tInstalled Package",
									"vegan"
								],
								[
									"viridis\tInstalled Package",
									"viridis"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"webshot\tInstalled Package",
									"webshot"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"whoami\tInstalled Package",
									"whoami"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"methods",
								"stats",
								"Cairo",
								"grDevices",
								"kableExtra",
								"utils",
								"graphics",
								"base",
								"see",
								"GGally"
							],
							"rulers":
							[
								80
							],
							"syntax": "Packages/R-Box/R Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 400.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "env-pnd.sublime-project",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 111,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/timcadman/OneDrive - University of Bristol/repos/useful-code-r/code/themes/themes.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4967,
						"regions":
						{
						},
						"selection":
						[
							[
								4964,
								4839
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"My\t{methods}",
									"My"
								],
								[
									".Rprofile\t{methods}",
									".Rprofile"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"My\t{stats}",
									"My"
								],
								[
									".Rprofile\t{stats}",
									".Rprofile"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"My\t{grDevices}",
									"My"
								],
								[
									".Rprofile\t{grDevices}",
									".Rprofile"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"My\t{utils}",
									"My"
								],
								[
									".Rprofile\t{utils}",
									".Rprofile"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"My\t{ggplot2}",
									"My"
								],
								[
									".Rprofile\t{ggplot2}",
									".Rprofile"
								],
								[
									"StatDensity2dFilled\t{ggplot2}",
									"StatDensity2dFilled"
								],
								[
									"find_panel\t{ggplot2}",
									"find_panel"
								],
								[
									"stat_density2d_filled\t{ggplot2}",
									"stat_density2d_filled"
								],
								[
									"stat_count\t{ggplot2}",
									"stat_count"
								],
								[
									"scale_fill_date\t{ggplot2}",
									"scale_fill_date"
								],
								[
									"as_labeller\t{ggplot2}",
									"as_labeller"
								],
								[
									"labs\t{ggplot2}",
									"labs"
								],
								[
									"combine_vars\t{ggplot2}",
									"combine_vars"
								],
								[
									"scale_colour_ordinal\t{ggplot2}",
									"scale_colour_ordinal"
								],
								[
									"Layout\t{ggplot2}",
									"Layout"
								],
								[
									"scale_size_area\t{ggplot2}",
									"scale_size_area"
								],
								[
									"annotation_logticks\t{ggplot2}",
									"annotation_logticks"
								],
								[
									"panel_cols\t{ggplot2}",
									"panel_cols"
								],
								[
									"aes_all\t{ggplot2}",
									"aes_all"
								],
								[
									"scale_y_sqrt\t{ggplot2}",
									"scale_y_sqrt"
								],
								[
									"scale_linetype_discrete\t{ggplot2}",
									"scale_linetype_discrete"
								],
								[
									"scale_shape\t{ggplot2}",
									"scale_shape"
								],
								[
									"draw_key_crossbar\t{ggplot2}",
									"draw_key_crossbar"
								],
								[
									"coord_cartesian\t{ggplot2}",
									"coord_cartesian"
								],
								[
									"position_dodge2\t{ggplot2}",
									"position_dodge2"
								],
								[
									"aes_\t{ggplot2}",
									"aes_"
								],
								[
									"scale_fill_steps\t{ggplot2}",
									"scale_fill_steps"
								],
								[
									"standardise_aes_names\t{ggplot2}",
									"standardise_aes_names"
								],
								[
									"AxisSecondary\t{ggplot2}",
									"AxisSecondary"
								],
								[
									"annotation_custom\t{ggplot2}",
									"annotation_custom"
								],
								[
									"scale_color_fermenter\t{ggplot2}",
									"scale_color_fermenter"
								],
								[
									"draw_key_timeseries\t{ggplot2}",
									"draw_key_timeseries"
								],
								[
									"ScaleContinuous\t{ggplot2}",
									"ScaleContinuous"
								],
								[
									"ScaleContinuousDatetime\t{ggplot2}",
									"ScaleContinuousDatetime"
								],
								[
									".stroke\t{ggplot2}",
									".stroke"
								],
								[
									"GeomCrossbar\t{ggplot2}",
									"GeomCrossbar"
								],
								[
									"register_theme_elements\t{ggplot2}",
									"register_theme_elements"
								],
								[
									"geom_rect\t{ggplot2}",
									"geom_rect"
								],
								[
									"StatBindot\t{ggplot2}",
									"StatBindot"
								],
								[
									"stat_binhex\t{ggplot2}",
									"stat_binhex"
								],
								[
									"ggtitle\t{ggplot2}",
									"ggtitle"
								],
								[
									"scale_color_date\t{ggplot2}",
									"scale_color_date"
								],
								[
									"GeomPolygon\t{ggplot2}",
									"GeomPolygon"
								],
								[
									"geom_curve\t{ggplot2}",
									"geom_curve"
								],
								[
									"binned_scale\t{ggplot2}",
									"binned_scale"
								],
								[
									"quo_name\t{ggplot2}",
									"quo_name"
								],
								[
									"GeomViolin\t{ggplot2}",
									"GeomViolin"
								],
								[
									"position_fill\t{ggplot2}",
									"position_fill"
								],
								[
									"scale_colour_discrete\t{ggplot2}",
									"scale_colour_discrete"
								],
								[
									"stat_sf_coordinates\t{ggplot2}",
									"stat_sf_coordinates"
								],
								[
									"geom_errorbarh\t{ggplot2}",
									"geom_errorbarh"
								],
								[
									"geom_violin\t{ggplot2}",
									"geom_violin"
								],
								[
									"StatSum\t{ggplot2}",
									"StatSum"
								],
								[
									"stat_summary\t{ggplot2}",
									"stat_summary"
								],
								[
									"scale_fill_datetime\t{ggplot2}",
									"scale_fill_datetime"
								],
								[
									"StatSummary\t{ggplot2}",
									"StatSummary"
								],
								[
									"element_rect\t{ggplot2}",
									"element_rect"
								],
								[
									"ScaleBinned\t{ggplot2}",
									"ScaleBinned"
								],
								[
									"geom_dotplot\t{ggplot2}",
									"geom_dotplot"
								],
								[
									"scale_colour_identity\t{ggplot2}",
									"scale_colour_identity"
								],
								[
									"reset_theme_settings\t{ggplot2}",
									"reset_theme_settings"
								],
								[
									"geom_tile\t{ggplot2}",
									"geom_tile"
								],
								[
									"scale_y_discrete\t{ggplot2}",
									"scale_y_discrete"
								],
								[
									"scale_color_identity\t{ggplot2}",
									"scale_color_identity"
								],
								[
									"ScaleBinnedPosition\t{ggplot2}",
									"ScaleBinnedPosition"
								],
								[
									"scale_continuous_identity\t{ggplot2}",
									"scale_continuous_identity"
								],
								[
									"position_dodge\t{ggplot2}",
									"position_dodge"
								],
								[
									"StatFunction\t{ggplot2}",
									"StatFunction"
								],
								[
									"scale_alpha_binned\t{ggplot2}",
									"scale_alpha_binned"
								],
								[
									"scale_shape_ordinal\t{ggplot2}",
									"scale_shape_ordinal"
								],
								[
									"scale_fill_manual\t{ggplot2}",
									"scale_fill_manual"
								],
								[
									"mean_cl_normal\t{ggplot2}",
									"mean_cl_normal"
								],
								[
									"annotation_map\t{ggplot2}",
									"annotation_map"
								],
								[
									"stage\t{ggplot2}",
									"stage"
								],
								[
									"StatUnique\t{ggplot2}",
									"StatUnique"
								],
								[
									"GeomVline\t{ggplot2}",
									"GeomVline"
								],
								[
									"scale_fill_fermenter\t{ggplot2}",
									"scale_fill_fermenter"
								],
								[
									"enquo\t{ggplot2}",
									"enquo"
								],
								[
									"geom_contour_filled\t{ggplot2}",
									"geom_contour_filled"
								],
								[
									"coord_equal\t{ggplot2}",
									"coord_equal"
								],
								[
									"geom_linerange\t{ggplot2}",
									"geom_linerange"
								],
								[
									"ScaleContinuousPosition\t{ggplot2}",
									"ScaleContinuousPosition"
								],
								[
									"stat_summary_bin\t{ggplot2}",
									"stat_summary_bin"
								],
								[
									"syms\t{ggplot2}",
									"syms"
								],
								[
									"scale_colour_continuous\t{ggplot2}",
									"scale_colour_continuous"
								],
								[
									"summarise_layers\t{ggplot2}",
									"summarise_layers"
								],
								[
									"draw_key_path\t{ggplot2}",
									"draw_key_path"
								],
								[
									"CoordQuickmap\t{ggplot2}",
									"CoordQuickmap"
								],
								[
									"cut_width\t{ggplot2}",
									"cut_width"
								],
								[
									"geom_histogram\t{ggplot2}",
									"geom_histogram"
								],
								[
									"map_data\t{ggplot2}",
									"map_data"
								],
								[
									"PositionDodge\t{ggplot2}",
									"PositionDodge"
								],
								[
									"GeomSf\t{ggplot2}",
									"GeomSf"
								],
								[
									"ggplotGrob\t{ggplot2}",
									"ggplotGrob"
								],
								[
									"scale_y_binned\t{ggplot2}",
									"scale_y_binned"
								],
								[
									"stat\t{ggplot2}",
									"stat"
								],
								[
									"scale_size_ordinal\t{ggplot2}",
									"scale_size_ordinal"
								],
								[
									"GeomArea\t{ggplot2}",
									"GeomArea"
								],
								[
									"scale_colour_datetime\t{ggplot2}",
									"scale_colour_datetime"
								],
								[
									"stat_sum\t{ggplot2}",
									"stat_sum"
								],
								[
									"scale_alpha_date\t{ggplot2}",
									"scale_alpha_date"
								],
								[
									"update_geom_defaults\t{ggplot2}",
									"update_geom_defaults"
								],
								[
									"GeomDensity2d\t{ggplot2}",
									"GeomDensity2d"
								],
								[
									"position_identity\t{ggplot2}",
									"position_identity"
								],
								[
									"after_scale\t{ggplot2}",
									"after_scale"
								],
								[
									"expr\t{ggplot2}",
									"expr"
								],
								[
									"GeomContour\t{ggplot2}",
									"GeomContour"
								],
								[
									"guide_colorbar\t{ggplot2}",
									"guide_colorbar"
								],
								[
									"guide_merge\t{ggplot2}",
									"guide_merge"
								],
								[
									"scale_type\t{ggplot2}",
									"scale_type"
								],
								[
									"guide_gengrob\t{ggplot2}",
									"guide_gengrob"
								],
								[
									"GeomCurve\t{ggplot2}",
									"GeomCurve"
								],
								[
									"facet_grid\t{ggplot2}",
									"facet_grid"
								],
								[
									"theme_void\t{ggplot2}",
									"theme_void"
								],
								[
									"ylim\t{ggplot2}",
									"ylim"
								],
								[
									"expand_scale\t{ggplot2}",
									"expand_scale"
								],
								[
									"guide_coloursteps\t{ggplot2}",
									"guide_coloursteps"
								],
								[
									"GeomDensity2dFilled\t{ggplot2}",
									"GeomDensity2dFilled"
								],
								[
									"ScaleContinuousDate\t{ggplot2}",
									"ScaleContinuousDate"
								],
								[
									"PositionNudge\t{ggplot2}",
									"PositionNudge"
								],
								[
									"stat_identity\t{ggplot2}",
									"stat_identity"
								],
								[
									"set_last_plot\t{ggplot2}",
									"set_last_plot"
								],
								[
									"fortify\t{ggplot2}",
									"fortify"
								],
								[
									"geom_label\t{ggplot2}",
									"geom_label"
								],
								[
									"geom_polygon\t{ggplot2}",
									"geom_polygon"
								],
								[
									"ScaleDiscretePosition\t{ggplot2}",
									"ScaleDiscretePosition"
								],
								[
									"GeomLogticks\t{ggplot2}",
									"GeomLogticks"
								],
								[
									"quickplot\t{ggplot2}",
									"quickplot"
								],
								[
									"geom_qq\t{ggplot2}",
									"geom_qq"
								],
								[
									"geom_density\t{ggplot2}",
									"geom_density"
								],
								[
									"geom_hline\t{ggplot2}",
									"geom_hline"
								],
								[
									"scale_x_datetime\t{ggplot2}",
									"scale_x_datetime"
								],
								[
									"element_grob\t{ggplot2}",
									"element_grob"
								],
								[
									"geom_map\t{ggplot2}",
									"geom_map"
								],
								[
									"GeomBlank\t{ggplot2}",
									"GeomBlank"
								],
								[
									"guide_colorsteps\t{ggplot2}",
									"guide_colorsteps"
								],
								[
									"stat_summary2d\t{ggplot2}",
									"stat_summary2d"
								],
								[
									"stat_function\t{ggplot2}",
									"stat_function"
								],
								[
									"summarise_layout\t{ggplot2}",
									"summarise_layout"
								],
								[
									"stat_density_2d_filled\t{ggplot2}",
									"stat_density_2d_filled"
								],
								[
									"GeomRaster\t{ggplot2}",
									"GeomRaster"
								],
								[
									"GeomCol\t{ggplot2}",
									"GeomCol"
								],
								[
									"geom_density_2d\t{ggplot2}",
									"geom_density_2d"
								],
								[
									"scale_discrete_manual\t{ggplot2}",
									"scale_discrete_manual"
								],
								[
									"GeomLinerange\t{ggplot2}",
									"GeomLinerange"
								],
								[
									"draw_key_vline\t{ggplot2}",
									"draw_key_vline"
								],
								[
									"scale_fill_grey\t{ggplot2}",
									"scale_fill_grey"
								],
								[
									"annotate\t{ggplot2}",
									"annotate"
								],
								[
									"Scale\t{ggplot2}",
									"Scale"
								],
								[
									"geom_contour\t{ggplot2}",
									"geom_contour"
								],
								[
									"scale_color_brewer\t{ggplot2}",
									"scale_color_brewer"
								],
								[
									"stat_summary_hex\t{ggplot2}",
									"stat_summary_hex"
								],
								[
									"scale_alpha_datetime\t{ggplot2}",
									"scale_alpha_datetime"
								],
								[
									"StatQq\t{ggplot2}",
									"StatQq"
								],
								[
									"geom_sf\t{ggplot2}",
									"geom_sf"
								],
								[
									"GeomMap\t{ggplot2}",
									"GeomMap"
								],
								[
									"scale_x_sqrt\t{ggplot2}",
									"scale_x_sqrt"
								],
								[
									"scale_size_identity\t{ggplot2}",
									"scale_size_identity"
								],
								[
									"scale_color_datetime\t{ggplot2}",
									"scale_color_datetime"
								],
								[
									"PositionJitter\t{ggplot2}",
									"PositionJitter"
								],
								[
									"scale_color_gradientn\t{ggplot2}",
									"scale_color_gradientn"
								],
								[
									"stat_ecdf\t{ggplot2}",
									"stat_ecdf"
								],
								[
									"guide_axis\t{ggplot2}",
									"guide_axis"
								],
								[
									"StatBin2d\t{ggplot2}",
									"StatBin2d"
								],
								[
									"ggplot_build\t{ggplot2}",
									"ggplot_build"
								],
								[
									"GeomHline\t{ggplot2}",
									"GeomHline"
								],
								[
									"enquos\t{ggplot2}",
									"enquos"
								],
								[
									"element_text\t{ggplot2}",
									"element_text"
								],
								[
									"stat_summary_2d\t{ggplot2}",
									"stat_summary_2d"
								],
								[
									"stat_ellipse\t{ggplot2}",
									"stat_ellipse"
								],
								[
									"StatBinhex\t{ggplot2}",
									"StatBinhex"
								],
								[
									"geom_sf_text\t{ggplot2}",
									"geom_sf_text"
								],
								[
									"ensym\t{ggplot2}",
									"ensym"
								],
								[
									"label_wrap_gen\t{ggplot2}",
									"label_wrap_gen"
								],
								[
									"geom_sf_label\t{ggplot2}",
									"geom_sf_label"
								],
								[
									"StatSummaryHex\t{ggplot2}",
									"StatSummaryHex"
								],
								[
									"geom_line\t{ggplot2}",
									"geom_line"
								],
								[
									"stat_density\t{ggplot2}",
									"stat_density"
								],
								[
									"scale_y_time\t{ggplot2}",
									"scale_y_time"
								],
								[
									"GeomTile\t{ggplot2}",
									"GeomTile"
								],
								[
									"StatSf\t{ggplot2}",
									"StatSf"
								],
								[
									"geom_crossbar\t{ggplot2}",
									"geom_crossbar"
								],
								[
									"scale_linetype_binned\t{ggplot2}",
									"scale_linetype_binned"
								],
								[
									"GeomPoint\t{ggplot2}",
									"GeomPoint"
								],
								[
									".data\t{ggplot2}",
									".data"
								],
								[
									"stat_sf\t{ggplot2}",
									"stat_sf"
								],
								[
									"annotation_raster\t{ggplot2}",
									"annotation_raster"
								],
								[
									"scale_colour_stepsn\t{ggplot2}",
									"scale_colour_stepsn"
								],
								[
									"theme_test\t{ggplot2}",
									"theme_test"
								],
								[
									"stat_bin2d\t{ggplot2}",
									"stat_bin2d"
								],
								[
									"label_parsed\t{ggplot2}",
									"label_parsed"
								],
								[
									"scale_color_stepsn\t{ggplot2}",
									"scale_color_stepsn"
								],
								[
									"flip_data\t{ggplot2}",
									"flip_data"
								],
								[
									"StatIdentity\t{ggplot2}",
									"StatIdentity"
								],
								[
									"scale_color_discrete\t{ggplot2}",
									"scale_color_discrete"
								],
								[
									"scale_size_manual\t{ggplot2}",
									"scale_size_manual"
								],
								[
									"gg_dep\t{ggplot2}",
									"gg_dep"
								],
								[
									"scale_x_discrete\t{ggplot2}",
									"scale_x_discrete"
								],
								[
									"stat_spoke\t{ggplot2}",
									"stat_spoke"
								],
								[
									"StatEllipse\t{ggplot2}",
									"StatEllipse"
								],
								[
									"stat_qq\t{ggplot2}",
									"stat_qq"
								],
								[
									"GeomErrorbar\t{ggplot2}",
									"GeomErrorbar"
								],
								[
									"theme_set\t{ggplot2}",
									"theme_set"
								],
								[
									"guide_legend\t{ggplot2}",
									"guide_legend"
								],
								[
									"geom_boxplot\t{ggplot2}",
									"geom_boxplot"
								],
								[
									"after_stat\t{ggplot2}",
									"after_stat"
								],
								[
									"draw_key_label\t{ggplot2}",
									"draw_key_label"
								],
								[
									"geom_hex\t{ggplot2}",
									"geom_hex"
								],
								[
									"geom_area\t{ggplot2}",
									"geom_area"
								],
								[
									"coord_polar\t{ggplot2}",
									"coord_polar"
								],
								[
									"layer_scales\t{ggplot2}",
									"layer_scales"
								],
								[
									"ggplot\t{ggplot2}",
									"ggplot"
								],
								[
									"geom_quantile\t{ggplot2}",
									"geom_quantile"
								],
								[
									"scale_fill_distiller\t{ggplot2}",
									"scale_fill_distiller"
								],
								[
									"scale_linetype_continuous\t{ggplot2}",
									"scale_linetype_continuous"
								],
								[
									"theme_classic\t{ggplot2}",
									"theme_classic"
								],
								[
									"is.ggproto\t{ggplot2}",
									"is.ggproto"
								],
								[
									"scale_colour_grey\t{ggplot2}",
									"scale_colour_grey"
								],
								[
									"StatContour\t{ggplot2}",
									"StatContour"
								],
								[
									"CoordTrans\t{ggplot2}",
									"CoordTrans"
								],
								[
									"scale_fill_steps2\t{ggplot2}",
									"scale_fill_steps2"
								],
								[
									"scale_fill_gradientn\t{ggplot2}",
									"scale_fill_gradientn"
								],
								[
									"scale_radius\t{ggplot2}",
									"scale_radius"
								],
								[
									"Coord\t{ggplot2}",
									"Coord"
								],
								[
									"mean_se\t{ggplot2}",
									"mean_se"
								],
								[
									"scale_y_date\t{ggplot2}",
									"scale_y_date"
								],
								[
									"scale_alpha_discrete\t{ggplot2}",
									"scale_alpha_discrete"
								],
								[
									"geom_spoke\t{ggplot2}",
									"geom_spoke"
								],
								[
									"scale_size_datetime\t{ggplot2}",
									"scale_size_datetime"
								],
								[
									"median_hilow\t{ggplot2}",
									"median_hilow"
								],
								[
									"facet_wrap\t{ggplot2}",
									"facet_wrap"
								],
								[
									"GeomDensity\t{ggplot2}",
									"GeomDensity"
								],
								[
									"StatSummaryBin\t{ggplot2}",
									"StatSummaryBin"
								],
								[
									"ggproto_parent\t{ggplot2}",
									"ggproto_parent"
								],
								[
									"geom_bin2d\t{ggplot2}",
									"geom_bin2d"
								],
								[
									"draw_key_abline\t{ggplot2}",
									"draw_key_abline"
								],
								[
									"scale_discrete_identity\t{ggplot2}",
									"scale_discrete_identity"
								],
								[
									"ScaleDiscrete\t{ggplot2}",
									"ScaleDiscrete"
								],
								[
									"scale_linetype_manual\t{ggplot2}",
									"scale_linetype_manual"
								],
								[
									"scale_linetype\t{ggplot2}",
									"scale_linetype"
								],
								[
									"borders\t{ggplot2}",
									"borders"
								],
								[
									"geom_raster\t{ggplot2}",
									"geom_raster"
								],
								[
									"stat_density2d\t{ggplot2}",
									"stat_density2d"
								],
								[
									"qplot\t{ggplot2}",
									"qplot"
								],
								[
									"resolution\t{ggplot2}",
									"resolution"
								],
								[
									"render_strips\t{ggplot2}",
									"render_strips"
								],
								[
									"guides\t{ggplot2}",
									"guides"
								],
								[
									"scale_color_distiller\t{ggplot2}",
									"scale_color_distiller"
								],
								[
									"theme_linedraw\t{ggplot2}",
									"theme_linedraw"
								],
								[
									"update_labels\t{ggplot2}",
									"update_labels"
								],
								[
									"label_value\t{ggplot2}",
									"label_value"
								],
								[
									"scale_fill_gradient2\t{ggplot2}",
									"scale_fill_gradient2"
								],
								[
									"wrap_dims\t{ggplot2}",
									"wrap_dims"
								],
								[
									"max_width\t{ggplot2}",
									"max_width"
								],
								[
									"StatDensity2d\t{ggplot2}",
									"StatDensity2d"
								],
								[
									"label_context\t{ggplot2}",
									"label_context"
								],
								[
									"geom_count\t{ggplot2}",
									"geom_count"
								],
								[
									"geom_ribbon\t{ggplot2}",
									"geom_ribbon"
								],
								[
									"PositionStack\t{ggplot2}",
									"PositionStack"
								],
								[
									"coord_flip\t{ggplot2}",
									"coord_flip"
								],
								[
									"scale_colour_hue\t{ggplot2}",
									"scale_colour_hue"
								],
								[
									"discrete_scale\t{ggplot2}",
									"discrete_scale"
								],
								[
									"stat_qq_line\t{ggplot2}",
									"stat_qq_line"
								],
								[
									"quos\t{ggplot2}",
									"quos"
								],
								[
									"scale_color_continuous\t{ggplot2}",
									"scale_color_continuous"
								],
								[
									"is.Coord\t{ggplot2}",
									"is.Coord"
								],
								[
									"is.ggplot\t{ggplot2}",
									"is.ggplot"
								],
								[
									"GeomAbline\t{ggplot2}",
									"GeomAbline"
								],
								[
									"Geom\t{ggplot2}",
									"Geom"
								],
								[
									"scale_colour_distiller\t{ggplot2}",
									"scale_colour_distiller"
								],
								[
									"autolayer\t{ggplot2}",
									"autolayer"
								],
								[
									"geom_rug\t{ggplot2}",
									"geom_rug"
								],
								[
									"label_both\t{ggplot2}",
									"label_both"
								],
								[
									"StatBoxplot\t{ggplot2}",
									"StatBoxplot"
								],
								[
									"derive\t{ggplot2}",
									"derive"
								],
								[
									"PositionIdentity\t{ggplot2}",
									"PositionIdentity"
								],
								[
									"remove_missing\t{ggplot2}",
									"remove_missing"
								],
								[
									"PositionFill\t{ggplot2}",
									"PositionFill"
								],
								[
									"margin\t{ggplot2}",
									"margin"
								],
								[
									"GeomDotplot\t{ggplot2}",
									"GeomDotplot"
								],
								[
									"expand_limits\t{ggplot2}",
									"expand_limits"
								],
								[
									"GeomRug\t{ggplot2}",
									"GeomRug"
								],
								[
									"scale_x_binned\t{ggplot2}",
									"scale_x_binned"
								],
								[
									"GeomLine\t{ggplot2}",
									"GeomLine"
								],
								[
									"zeroGrob\t{ggplot2}",
									"zeroGrob"
								],
								[
									"scale_colour_viridis_b\t{ggplot2}",
									"scale_colour_viridis_b"
								],
								[
									"GeomCustomAnn\t{ggplot2}",
									"GeomCustomAnn"
								],
								[
									"cut_number\t{ggplot2}",
									"cut_number"
								],
								[
									"scale_colour_viridis_c\t{ggplot2}",
									"scale_colour_viridis_c"
								],
								[
									"scale_colour_viridis_d\t{ggplot2}",
									"scale_colour_viridis_d"
								],
								[
									"stat_smooth\t{ggplot2}",
									"stat_smooth"
								],
								[
									"scale_color_binned\t{ggplot2}",
									"scale_color_binned"
								],
								[
									"StatYdensity\t{ggplot2}",
									"StatYdensity"
								],
								[
									"scale_color_steps2\t{ggplot2}",
									"scale_color_steps2"
								],
								[
									"cut_interval\t{ggplot2}",
									"cut_interval"
								],
								[
									"lims\t{ggplot2}",
									"lims"
								],
								[
									"expansion\t{ggplot2}",
									"expansion"
								],
								[
									"FacetGrid\t{ggplot2}",
									"FacetGrid"
								],
								[
									"scale_x_time\t{ggplot2}",
									"scale_x_time"
								],
								[
									"transform_position\t{ggplot2}",
									"transform_position"
								],
								[
									"GeomBar\t{ggplot2}",
									"GeomBar"
								],
								[
									"coord_trans\t{ggplot2}",
									"coord_trans"
								],
								[
									"theme_dark\t{ggplot2}",
									"theme_dark"
								],
								[
									"GeomHex\t{ggplot2}",
									"GeomHex"
								],
								[
									"scale_color_grey\t{ggplot2}",
									"scale_color_grey"
								],
								[
									"guide_geom\t{ggplot2}",
									"guide_geom"
								],
								[
									"mean_cl_boot\t{ggplot2}",
									"mean_cl_boot"
								],
								[
									"layer_grob\t{ggplot2}",
									"layer_grob"
								],
								[
									"dup_axis\t{ggplot2}",
									"dup_axis"
								],
								[
									"scale_x_continuous\t{ggplot2}",
									"scale_x_continuous"
								],
								[
									"xlab\t{ggplot2}",
									"xlab"
								],
								[
									"ggplot_add\t{ggplot2}",
									"ggplot_add"
								],
								[
									"layer_data\t{ggplot2}",
									"layer_data"
								],
								[
									"element_render\t{ggplot2}",
									"element_render"
								],
								[
									"GeomFunction\t{ggplot2}",
									"GeomFunction"
								],
								[
									"geom_density2d_filled\t{ggplot2}",
									"geom_density2d_filled"
								],
								[
									"draw_key_text\t{ggplot2}",
									"draw_key_text"
								],
								[
									"geom_bar\t{ggplot2}",
									"geom_bar"
								],
								[
									"StatBin\t{ggplot2}",
									"StatBin"
								],
								[
									"guide_bins\t{ggplot2}",
									"guide_bins"
								],
								[
									"panel_rows\t{ggplot2}",
									"panel_rows"
								],
								[
									"position_nudge\t{ggplot2}",
									"position_nudge"
								],
								[
									"scale_fill_hue\t{ggplot2}",
									"scale_fill_hue"
								],
								[
									"stat_contour\t{ggplot2}",
									"stat_contour"
								],
								[
									"geom_point\t{ggplot2}",
									"geom_point"
								],
								[
									"is.facet\t{ggplot2}",
									"is.facet"
								],
								[
									"ggplot_gtable\t{ggplot2}",
									"ggplot_gtable"
								],
								[
									"update_stat_defaults\t{ggplot2}",
									"update_stat_defaults"
								],
								[
									"should_stop\t{ggplot2}",
									"should_stop"
								],
								[
									"stat_boxplot\t{ggplot2}",
									"stat_boxplot"
								],
								[
									"GeomQuantile\t{ggplot2}",
									"GeomQuantile"
								],
								[
									"geom_jitter\t{ggplot2}",
									"geom_jitter"
								],
								[
									"geom_blank\t{ggplot2}",
									"geom_blank"
								],
								[
									"GeomBoxplot\t{ggplot2}",
									"GeomBoxplot"
								],
								[
									"scale_alpha_ordinal\t{ggplot2}",
									"scale_alpha_ordinal"
								],
								[
									"scale_fill_gradient\t{ggplot2}",
									"scale_fill_gradient"
								],
								[
									"scale_x_date\t{ggplot2}",
									"scale_x_date"
								],
								[
									"scale_x_reverse\t{ggplot2}",
									"scale_x_reverse"
								],
								[
									"geom_abline\t{ggplot2}",
									"geom_abline"
								],
								[
									"scale_x_log10\t{ggplot2}",
									"scale_x_log10"
								],
								[
									"StatQqLine\t{ggplot2}",
									"StatQqLine"
								],
								[
									"CoordFlip\t{ggplot2}",
									"CoordFlip"
								],
								[
									"scale_size_date\t{ggplot2}",
									"scale_size_date"
								],
								[
									"theme_replace\t{ggplot2}",
									"theme_replace"
								],
								[
									"stat_bin_hex\t{ggplot2}",
									"stat_bin_hex"
								],
								[
									"guide_transform\t{ggplot2}",
									"guide_transform"
								],
								[
									"geom_qq_line\t{ggplot2}",
									"geom_qq_line"
								],
								[
									"draw_key_rect\t{ggplot2}",
									"draw_key_rect"
								],
								[
									"guide_none\t{ggplot2}",
									"guide_none"
								],
								[
									"StatQuantile\t{ggplot2}",
									"StatQuantile"
								],
								[
									"label_bquote\t{ggplot2}",
									"label_bquote"
								],
								[
									"scale_colour_gradient2\t{ggplot2}",
									"scale_colour_gradient2"
								],
								[
									"draw_key_blank\t{ggplot2}",
									"draw_key_blank"
								],
								[
									"StatSfCoordinates\t{ggplot2}",
									"StatSfCoordinates"
								],
								[
									"scale_alpha_manual\t{ggplot2}",
									"scale_alpha_manual"
								],
								[
									"scale_size_binned_area\t{ggplot2}",
									"scale_size_binned_area"
								],
								[
									"GeomRibbon\t{ggplot2}",
									"GeomRibbon"
								],
								[
									"GeomSegment\t{ggplot2}",
									"GeomSegment"
								],
								[
									"max_height\t{ggplot2}",
									"max_height"
								],
								[
									"coord_map\t{ggplot2}",
									"coord_map"
								],
								[
									"stat_ydensity\t{ggplot2}",
									"stat_ydensity"
								],
								[
									"scale_colour_fermenter\t{ggplot2}",
									"scale_colour_fermenter"
								],
								[
									"GeomRasterAnn\t{ggplot2}",
									"GeomRasterAnn"
								],
								[
									"scale_color_steps\t{ggplot2}",
									"scale_color_steps"
								],
								[
									"stat_bin_2d\t{ggplot2}",
									"stat_bin_2d"
								],
								[
									"alpha\t{ggplot2}",
									"alpha"
								],
								[
									"coord_sf\t{ggplot2}",
									"coord_sf"
								],
								[
									"last_plot\t{ggplot2}",
									"last_plot"
								],
								[
									"geom_text\t{ggplot2}",
									"geom_text"
								],
								[
									"theme\t{ggplot2}",
									"theme"
								],
								[
									"guide_train\t{ggplot2}",
									"guide_train"
								],
								[
									"scale_size_continuous\t{ggplot2}",
									"scale_size_continuous"
								],
								[
									"flipped_names\t{ggplot2}",
									"flipped_names"
								],
								[
									"scale_color_viridis_c\t{ggplot2}",
									"scale_color_viridis_c"
								],
								[
									"stat_contour_filled\t{ggplot2}",
									"stat_contour_filled"
								],
								[
									"scale_color_manual\t{ggplot2}",
									"scale_color_manual"
								],
								[
									"scale_color_viridis_d\t{ggplot2}",
									"scale_color_viridis_d"
								],
								[
									"guide_colourbar\t{ggplot2}",
									"guide_colourbar"
								],
								[
									"geom_step\t{ggplot2}",
									"geom_step"
								],
								[
									"aes_q\t{ggplot2}",
									"aes_q"
								],
								[
									"theme_grey\t{ggplot2}",
									"theme_grey"
								],
								[
									"labeller\t{ggplot2}",
									"labeller"
								],
								[
									"coord_fixed\t{ggplot2}",
									"coord_fixed"
								],
								[
									"autoplot\t{ggplot2}",
									"autoplot"
								],
								[
									"scale_colour_binned\t{ggplot2}",
									"scale_colour_binned"
								],
								[
									"scale_y_log10\t{ggplot2}",
									"scale_y_log10"
								],
								[
									"StatDensity\t{ggplot2}",
									"StatDensity"
								],
								[
									"scale_shape_continuous\t{ggplot2}",
									"scale_shape_continuous"
								],
								[
									"mean_sdl\t{ggplot2}",
									"mean_sdl"
								],
								[
									"GeomContourFilled\t{ggplot2}",
									"GeomContourFilled"
								],
								[
									"Stat\t{ggplot2}",
									"Stat"
								],
								[
									"scale_shape_manual\t{ggplot2}",
									"scale_shape_manual"
								],
								[
									"sec_axis\t{ggplot2}",
									"sec_axis"
								],
								[
									"GeomPath\t{ggplot2}",
									"GeomPath"
								],
								[
									"GeomErrorbarh\t{ggplot2}",
									"GeomErrorbarh"
								],
								[
									"theme_get\t{ggplot2}",
									"theme_get"
								],
								[
									"GeomSmooth\t{ggplot2}",
									"GeomSmooth"
								],
								[
									"geom_col\t{ggplot2}",
									"geom_col"
								],
								[
									"aes_string\t{ggplot2}",
									"aes_string"
								],
								[
									"geom_freqpoly\t{ggplot2}",
									"geom_freqpoly"
								],
								[
									"scale_fill_stepsn\t{ggplot2}",
									"scale_fill_stepsn"
								],
								[
									"scale_alpha_continuous\t{ggplot2}",
									"scale_alpha_continuous"
								],
								[
									"StatSmooth\t{ggplot2}",
									"StatSmooth"
								],
								[
									"scale_size_discrete\t{ggplot2}",
									"scale_size_discrete"
								],
								[
									"get_element_tree\t{ggplot2}",
									"get_element_tree"
								],
								[
									"waiver\t{ggplot2}",
									"waiver"
								],
								[
									"scale_color_hue\t{ggplot2}",
									"scale_color_hue"
								],
								[
									"CoordSf\t{ggplot2}",
									"CoordSf"
								],
								[
									"scale_color_gradient\t{ggplot2}",
									"scale_color_gradient"
								],
								[
									"continuous_scale\t{ggplot2}",
									"continuous_scale"
								],
								[
									"geom_pointrange\t{ggplot2}",
									"geom_pointrange"
								],
								[
									"Position\t{ggplot2}",
									"Position"
								],
								[
									"vars\t{ggplot2}",
									"vars"
								],
								[
									"scale_color_ordinal\t{ggplot2}",
									"scale_color_ordinal"
								],
								[
									"element_blank\t{ggplot2}",
									"element_blank"
								],
								[
									"facet_null\t{ggplot2}",
									"facet_null"
								],
								[
									"GeomText\t{ggplot2}",
									"GeomText"
								],
								[
									"scale_shape_discrete\t{ggplot2}",
									"scale_shape_discrete"
								],
								[
									"geom_errorbar\t{ggplot2}",
									"geom_errorbar"
								],
								[
									"StatEcdf\t{ggplot2}",
									"StatEcdf"
								],
								[
									"scale_colour_steps2\t{ggplot2}",
									"scale_colour_steps2"
								],
								[
									"Facet\t{ggplot2}",
									"Facet"
								],
								[
									"scale_shape_identity\t{ggplot2}",
									"scale_shape_identity"
								],
								[
									"ggsave\t{ggplot2}",
									"ggsave"
								],
								[
									"scale_y_continuous\t{ggplot2}",
									"scale_y_continuous"
								],
								[
									"scale_fill_binned\t{ggplot2}",
									"scale_fill_binned"
								],
								[
									".pt\t{ggplot2}",
									".pt"
								],
								[
									"stat_unique\t{ggplot2}",
									"stat_unique"
								],
								[
									"geom_function\t{ggplot2}",
									"geom_function"
								],
								[
									"has_flipped_aes\t{ggplot2}",
									"has_flipped_aes"
								],
								[
									"theme_bw\t{ggplot2}",
									"theme_bw"
								],
								[
									"geom_segment\t{ggplot2}",
									"geom_segment"
								],
								[
									"StatCount\t{ggplot2}",
									"StatCount"
								],
								[
									"rel\t{ggplot2}",
									"rel"
								],
								[
									"coord_munch\t{ggplot2}",
									"coord_munch"
								],
								[
									"FacetNull\t{ggplot2}",
									"FacetNull"
								],
								[
									"GeomSpoke\t{ggplot2}",
									"GeomSpoke"
								],
								[
									"element_line\t{ggplot2}",
									"element_line"
								],
								[
									"el_def\t{ggplot2}",
									"el_def"
								],
								[
									"scale_color_gradient2\t{ggplot2}",
									"scale_color_gradient2"
								],
								[
									"quo\t{ggplot2}",
									"quo"
								],
								[
									"benchplot\t{ggplot2}",
									"benchplot"
								],
								[
									"summarise_coord\t{ggplot2}",
									"summarise_coord"
								],
								[
									"scale_fill_brewer\t{ggplot2}",
									"scale_fill_brewer"
								],
								[
									"draw_key_dotplot\t{ggplot2}",
									"draw_key_dotplot"
								],
								[
									"geom_smooth\t{ggplot2}",
									"geom_smooth"
								],
								[
									"stat_quantile\t{ggplot2}",
									"stat_quantile"
								],
								[
									"scale_alpha\t{ggplot2}",
									"scale_alpha"
								],
								[
									"ScaleContinuousIdentity\t{ggplot2}",
									"ScaleContinuousIdentity"
								],
								[
									"scale_size\t{ggplot2}",
									"scale_size"
								],
								[
									"ggproto\t{ggplot2}",
									"ggproto"
								],
								[
									"theme_gray\t{ggplot2}",
									"theme_gray"
								],
								[
									"ScaleDiscreteIdentity\t{ggplot2}",
									"ScaleDiscreteIdentity"
								],
								[
									"scale_colour_gradientn\t{ggplot2}",
									"scale_colour_gradientn"
								],
								[
									"enexprs\t{ggplot2}",
									"enexprs"
								],
								[
									"xlim\t{ggplot2}",
									"xlim"
								],
								[
									"scale_colour_date\t{ggplot2}",
									"scale_colour_date"
								],
								[
									"GeomAnnotationMap\t{ggplot2}",
									"GeomAnnotationMap"
								],
								[
									"draw_key_smooth\t{ggplot2}",
									"draw_key_smooth"
								],
								[
									"scale_colour_steps\t{ggplot2}",
									"scale_colour_steps"
								],
								[
									"GeomStep\t{ggplot2}",
									"GeomStep"
								],
								[
									"geom_vline\t{ggplot2}",
									"geom_vline"
								],
								[
									"CoordCartesian\t{ggplot2}",
									"CoordCartesian"
								],
								[
									"scale_colour_brewer\t{ggplot2}",
									"scale_colour_brewer"
								],
								[
									"CoordPolar\t{ggplot2}",
									"CoordPolar"
								],
								[
									"PositionDodge2\t{ggplot2}",
									"PositionDodge2"
								],
								[
									"position_stack\t{ggplot2}",
									"position_stack"
								],
								[
									"coord_quickmap\t{ggplot2}",
									"coord_quickmap"
								],
								[
									"theme_update\t{ggplot2}",
									"theme_update"
								],
								[
									"ylab\t{ggplot2}",
									"ylab"
								],
								[
									"scale_shape_binned\t{ggplot2}",
									"scale_shape_binned"
								],
								[
									"scale_linetype_identity\t{ggplot2}",
									"scale_linetype_identity"
								],
								[
									"scale_y_reverse\t{ggplot2}",
									"scale_y_reverse"
								],
								[
									"StatContourFilled\t{ggplot2}",
									"StatContourFilled"
								],
								[
									"is.theme\t{ggplot2}",
									"is.theme"
								],
								[
									"PositionJitterdodge\t{ggplot2}",
									"PositionJitterdodge"
								],
								[
									"draw_key_polygon\t{ggplot2}",
									"draw_key_polygon"
								],
								[
									"draw_key_point\t{ggplot2}",
									"draw_key_point"
								],
								[
									"aes_auto\t{ggplot2}",
									"aes_auto"
								],
								[
									"unit\t{ggplot2}",
									"unit"
								],
								[
									"GeomLabel\t{ggplot2}",
									"GeomLabel"
								],
								[
									"calc_element\t{ggplot2}",
									"calc_element"
								],
								[
									"scale_fill_viridis_b\t{ggplot2}",
									"scale_fill_viridis_b"
								],
								[
									"scale_fill_viridis_c\t{ggplot2}",
									"scale_fill_viridis_c"
								],
								[
									"merge_element\t{ggplot2}",
									"merge_element"
								],
								[
									"scale_fill_viridis_d\t{ggplot2}",
									"scale_fill_viridis_d"
								],
								[
									"scale_fill_discrete\t{ggplot2}",
									"scale_fill_discrete"
								],
								[
									"ensyms\t{ggplot2}",
									"ensyms"
								],
								[
									"StatSummary2d\t{ggplot2}",
									"StatSummary2d"
								],
								[
									"scale_colour_gradient\t{ggplot2}",
									"scale_colour_gradient"
								],
								[
									"GeomRect\t{ggplot2}",
									"GeomRect"
								],
								[
									"CoordFixed\t{ggplot2}",
									"CoordFixed"
								],
								[
									"arrow\t{ggplot2}",
									"arrow"
								],
								[
									"scale_fill_ordinal\t{ggplot2}",
									"scale_fill_ordinal"
								],
								[
									"scale_colour_manual\t{ggplot2}",
									"scale_colour_manual"
								],
								[
									"draw_key_boxplot\t{ggplot2}",
									"draw_key_boxplot"
								],
								[
									"FacetWrap\t{ggplot2}",
									"FacetWrap"
								],
								[
									"CoordMap\t{ggplot2}",
									"CoordMap"
								],
								[
									"scale_size_binned\t{ggplot2}",
									"scale_size_binned"
								],
								[
									"stat_density_2d\t{ggplot2}",
									"stat_density_2d"
								],
								[
									"theme_minimal\t{ggplot2}",
									"theme_minimal"
								],
								[
									"layer_sf\t{ggplot2}",
									"layer_sf"
								],
								[
									"layer\t{ggplot2}",
									"layer"
								],
								[
									"enexpr\t{ggplot2}",
									"enexpr"
								],
								[
									"position_jitter\t{ggplot2}",
									"position_jitter"
								],
								[
									"theme_light\t{ggplot2}",
									"theme_light"
								],
								[
									"geom_density2d\t{ggplot2}",
									"geom_density2d"
								],
								[
									"geom_density_2d_filled\t{ggplot2}",
									"geom_density_2d_filled"
								],
								[
									"geom_path\t{ggplot2}",
									"geom_path"
								],
								[
									"scale_fill_identity\t{ggplot2}",
									"scale_fill_identity"
								],
								[
									"scale_alpha_identity\t{ggplot2}",
									"scale_alpha_identity"
								],
								[
									"aes\t{ggplot2}",
									"aes"
								],
								[
									"render_axes\t{ggplot2}",
									"render_axes"
								],
								[
									"GeomPointrange\t{ggplot2}",
									"GeomPointrange"
								],
								[
									"sym\t{ggplot2}",
									"sym"
								],
								[
									"draw_key_pointrange\t{ggplot2}",
									"draw_key_pointrange"
								],
								[
									"position_jitterdodge\t{ggplot2}",
									"position_jitterdodge"
								],
								[
									"scale_y_datetime\t{ggplot2}",
									"scale_y_datetime"
								],
								[
									"stat_bin\t{ggplot2}",
									"stat_bin"
								],
								[
									"scale_fill_continuous\t{ggplot2}",
									"scale_fill_continuous"
								],
								[
									"My\t{graphics}",
									"My"
								],
								[
									".Rprofile\t{graphics}",
									".Rprofile"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"My\t{base}",
									"My"
								],
								[
									".Rprofile\t{base}",
									".Rprofile"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"My\tInstalled Package",
									"My"
								],
								[
									".Rprofile\tInstalled Package",
									".Rprofile"
								],
								[
									"works!\tInstalled Package",
									"works!"
								],
								[
									"\nBH\tInstalled Package",
									"\nBH"
								],
								[
									"Cairo\tInstalled Package",
									"Cairo"
								],
								[
									"CompQuadForm\tInstalled Package",
									"CompQuadForm"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DSI\tInstalled Package",
									"DSI"
								],
								[
									"DSMolgenisArmadillo\tInstalled Package",
									"DSMolgenisArmadillo"
								],
								[
									"DSOpal\tInstalled Package",
									"DSOpal"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"EnvStats\tInstalled Package",
									"EnvStats"
								],
								[
									"FactoMineR\tInstalled Package",
									"FactoMineR"
								],
								[
									"Formula\tInstalled Package",
									"Formula"
								],
								[
									"GGally\tInstalled Package",
									"GGally"
								],
								[
									"GPArotation\tInstalled Package",
									"GPArotation"
								],
								[
									"Hmisc\tInstalled Package",
									"Hmisc"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"MolgenisArmadillo\tInstalled Package",
									"MolgenisArmadillo"
								],
								[
									"MolgenisAuth\tInstalled Package",
									"MolgenisAuth"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"alspac\tInstalled Package",
									"alspac"
								],
								[
									"arrow\tInstalled Package",
									"arrow"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"aws.iam\tInstalled Package",
									"aws.iam"
								],
								[
									"aws.s3\tInstalled Package",
									"aws.s3"
								],
								[
									"aws.signature\tInstalled Package",
									"aws.signature"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bayestestR\tInstalled Package",
									"bayestestR"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"bookdown\tInstalled Package",
									"bookdown"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"conquer\tInstalled Package",
									"conquer"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"dcurver\tInstalled Package",
									"dcurver"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dotCall64\tInstalled Package",
									"dotCall64"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dsBaseClient\tInstalled Package",
									"dsBaseClient"
								],
								[
									"dsHelper\tInstalled Package",
									"dsHelper"
								],
								[
									"dsUpload\tInstalled Package",
									"dsUpload"
								],
								[
									"dtplyr\tInstalled Package",
									"dtplyr"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"effectsize\tInstalled Package",
									"effectsize"
								],
								[
									"ellipse\tInstalled Package",
									"ellipse"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"expm\tInstalled Package",
									"expm"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fields\tInstalled Package",
									"fields"
								],
								[
									"flashClust\tInstalled Package",
									"flashClust"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"forestplot\tInstalled Package",
									"forestplot"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"gargle\tInstalled Package",
									"gargle"
								],
								[
									"gdata\tInstalled Package",
									"gdata"
								],
								[
									"gdtools\tInstalled Package",
									"gdtools"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggraph\tInstalled Package",
									"ggraph"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggridges\tInstalled Package",
									"ggridges"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gmodels\tInstalled Package",
									"gmodels"
								],
								[
									"googledrive\tInstalled Package",
									"googledrive"
								],
								[
									"googlesheets4\tInstalled Package",
									"googlesheets4"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"graphlayouts\tInstalled Package",
									"graphlayouts"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gsubfn\tInstalled Package",
									"gsubfn"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"hrbrthemes\tInstalled Package",
									"hrbrthemes"
								],
								[
									"htmlTable\tInstalled Package",
									"htmlTable"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"ids\tInstalled Package",
									"ids"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"insight\tInstalled Package",
									"insight"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jpeg\tInstalled Package",
									"jpeg"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"kableExtra\tInstalled Package",
									"kableExtra"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"labelled\tInstalled Package",
									"labelled"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"latticeExtra\tInstalled Package",
									"latticeExtra"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"leaps\tInstalled Package",
									"leaps"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lspline\tInstalled Package",
									"lspline"
								],
								[
									"ltm\tInstalled Package",
									"ltm"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"maditr\tInstalled Package",
									"maditr"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"maptools\tInstalled Package",
									"maptools"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"meta\tInstalled Package",
									"meta"
								],
								[
									"metafor\tInstalled Package",
									"metafor"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mirt\tInstalled Package",
									"mirt"
								],
								[
									"mitools\tInstalled Package",
									"mitools"
								],
								[
									"mnormt\tInstalled Package",
									"mnormt"
								],
								[
									"mockery\tInstalled Package",
									"mockery"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"msm\tInstalled Package",
									"msm"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"nortest\tInstalled Package",
									"nortest"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"opalr\tInstalled Package",
									"opalr"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"panelaggregation\tInstalled Package",
									"panelaggregation"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"parameters\tInstalled Package",
									"parameters"
								],
								[
									"parsedate\tInstalled Package",
									"parsedate"
								],
								[
									"pastecs\tInstalled Package",
									"pastecs"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"permute\tInstalled Package",
									"permute"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"png\tInstalled Package",
									"png"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"polycor\tInstalled Package",
									"polycor"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"proto\tInstalled Package",
									"proto"
								],
								[
									"proxy\tInstalled Package",
									"proxy"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"psych\tInstalled Package",
									"psych"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readstata13\tInstalled Package",
									"readstata13"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reshape\tInstalled Package",
									"reshape"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rhub\tInstalled Package",
									"rhub"
								],
								[
									"rio\tInstalled Package",
									"rio"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rspiro\tInstalled Package",
									"rspiro"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"scatterplot3d\tInstalled Package",
									"scatterplot3d"
								],
								[
									"see\tInstalled Package",
									"see"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"showtext\tInstalled Package",
									"showtext"
								],
								[
									"showtextdb\tInstalled Package",
									"showtextdb"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"spam\tInstalled Package",
									"spam"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"statar\tInstalled Package",
									"statar"
								],
								[
									"statmod\tInstalled Package",
									"statmod"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survey\tInstalled Package",
									"survey"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"svglite\tInstalled Package",
									"svglite"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"sysfonts\tInstalled Package",
									"sysfonts"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"tableone\tInstalled Package",
									"tableone"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidygraph\tInstalled Package",
									"tidygraph"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tmvnsim\tInstalled Package",
									"tmvnsim"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"triebeard\tInstalled Package",
									"triebeard"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"urltools\tInstalled Package",
									"urltools"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"uuid\tInstalled Package",
									"uuid"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vegan\tInstalled Package",
									"vegan"
								],
								[
									"viridis\tInstalled Package",
									"viridis"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"webshot\tInstalled Package",
									"webshot"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"whoami\tInstalled Package",
									"whoami"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"methods",
								"stats",
								"grDevices",
								"utils",
								"ggplot2",
								"graphics",
								"base"
							],
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/timcadman/OneDrive - University of Bristol/repos/lc-other/code/testing-dem-splines.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1269,
						"regions":
						{
						},
						"selection":
						[
							[
								15,
								15
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"My\t{methods}",
									"My"
								],
								[
									".Rprofile\t{methods}",
									".Rprofile"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"My\t{stats}",
									"My"
								],
								[
									".Rprofile\t{stats}",
									".Rprofile"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"My\t{dplyr}",
									"My"
								],
								[
									".Rprofile\t{dplyr}",
									".Rprofile"
								],
								[
									"src_local\t{dplyr}",
									"src_local"
								],
								[
									"db_analyze\t{dplyr}",
									"db_analyze"
								],
								[
									"n_groups\t{dplyr}",
									"n_groups"
								],
								[
									"distinct\t{dplyr}",
									"distinct"
								],
								[
									"summarise_\t{dplyr}",
									"summarise_"
								],
								[
									"group_split\t{dplyr}",
									"group_split"
								],
								[
									"group_by_if\t{dplyr}",
									"group_by_if"
								],
								[
									"sample_n\t{dplyr}",
									"sample_n"
								],
								[
									"group_indices_\t{dplyr}",
									"group_indices_"
								],
								[
									"as_tibble\t{dplyr}",
									"as_tibble"
								],
								[
									"nest_join\t{dplyr}",
									"nest_join"
								],
								[
									"any_of\t{dplyr}",
									"any_of"
								],
								[
									"tbl_nongroup_vars\t{dplyr}",
									"tbl_nongroup_vars"
								],
								[
									"is.src\t{dplyr}",
									"is.src"
								],
								[
									"summarize_each\t{dplyr}",
									"summarize_each"
								],
								[
									"cur_group\t{dplyr}",
									"cur_group"
								],
								[
									"order_by\t{dplyr}",
									"order_by"
								],
								[
									"new_grouped_df\t{dplyr}",
									"new_grouped_df"
								],
								[
									"any_vars\t{dplyr}",
									"any_vars"
								],
								[
									"collapse\t{dplyr}",
									"collapse"
								],
								[
									"db_commit\t{dplyr}",
									"db_commit"
								],
								[
									"left_join\t{dplyr}",
									"left_join"
								],
								[
									"cur_column\t{dplyr}",
									"cur_column"
								],
								[
									"matches\t{dplyr}",
									"matches"
								],
								[
									"select_vars\t{dplyr}",
									"select_vars"
								],
								[
									"tbl_df\t{dplyr}",
									"tbl_df"
								],
								[
									"is.tbl\t{dplyr}",
									"is.tbl"
								],
								[
									"compare_tbls2\t{dplyr}",
									"compare_tbls2"
								],
								[
									"group_by_at\t{dplyr}",
									"group_by_at"
								],
								[
									"pull\t{dplyr}",
									"pull"
								],
								[
									"tally_\t{dplyr}",
									"tally_"
								],
								[
									"min_rank\t{dplyr}",
									"min_rank"
								],
								[
									"if_any\t{dplyr}",
									"if_any"
								],
								[
									"progress_estimated\t{dplyr}",
									"progress_estimated"
								],
								[
									"anti_join\t{dplyr}",
									"anti_join"
								],
								[
									"syms\t{dplyr}",
									"syms"
								],
								[
									"db_create_table\t{dplyr}",
									"db_create_table"
								],
								[
									"lag\t{dplyr}",
									"lag"
								],
								[
									"db_desc\t{dplyr}",
									"db_desc"
								],
								[
									"tbl_vars\t{dplyr}",
									"tbl_vars"
								],
								[
									"db_data_type\t{dplyr}",
									"db_data_type"
								],
								[
									"across\t{dplyr}",
									"across"
								],
								[
									"dplyr_col_modify\t{dplyr}",
									"dplyr_col_modify"
								],
								[
									"mutate_if\t{dplyr}",
									"mutate_if"
								],
								[
									"db_create_index\t{dplyr}",
									"db_create_index"
								],
								[
									"ends_with\t{dplyr}",
									"ends_with"
								],
								[
									"arrange_all\t{dplyr}",
									"arrange_all"
								],
								[
									"funs\t{dplyr}",
									"funs"
								],
								[
									"dim_desc\t{dplyr}",
									"dim_desc"
								],
								[
									"check_dbplyr\t{dplyr}",
									"check_dbplyr"
								],
								[
									"src_tbls\t{dplyr}",
									"src_tbls"
								],
								[
									"slice_sample\t{dplyr}",
									"slice_sample"
								],
								[
									"eval_tbls2\t{dplyr}",
									"eval_tbls2"
								],
								[
									"last_col\t{dplyr}",
									"last_col"
								],
								[
									"arrange_if\t{dplyr}",
									"arrange_if"
								],
								[
									".data\t{dplyr}",
									".data"
								],
								[
									"is_grouped_df\t{dplyr}",
									"is_grouped_df"
								],
								[
									"rowwise\t{dplyr}",
									"rowwise"
								],
								[
									"db_write_table\t{dplyr}",
									"db_write_table"
								],
								[
									"do\t{dplyr}",
									"do"
								],
								[
									"n_distinct\t{dplyr}",
									"n_distinct"
								],
								[
									"bind_cols\t{dplyr}",
									"bind_cols"
								],
								[
									"src_df\t{dplyr}",
									"src_df"
								],
								[
									"sql_set_op\t{dplyr}",
									"sql_set_op"
								],
								[
									"top_frac\t{dplyr}",
									"top_frac"
								],
								[
									"group_keys\t{dplyr}",
									"group_keys"
								],
								[
									"rows_patch\t{dplyr}",
									"rows_patch"
								],
								[
									"rows_insert\t{dplyr}",
									"rows_insert"
								],
								[
									"sql_escape_ident\t{dplyr}",
									"sql_escape_ident"
								],
								[
									"mutate_at\t{dplyr}",
									"mutate_at"
								],
								[
									"enquos\t{dplyr}",
									"enquos"
								],
								[
									"enexprs\t{dplyr}",
									"enexprs"
								],
								[
									"sql_select\t{dplyr}",
									"sql_select"
								],
								[
									"tally\t{dplyr}",
									"tally"
								],
								[
									"transmute_\t{dplyr}",
									"transmute_"
								],
								[
									"bind_rows\t{dplyr}",
									"bind_rows"
								],
								[
									"rows_update\t{dplyr}",
									"rows_update"
								],
								[
									"last\t{dplyr}",
									"last"
								],
								[
									"filter_at\t{dplyr}",
									"filter_at"
								],
								[
									"union\t{dplyr}",
									"union"
								],
								[
									"semi_join\t{dplyr}",
									"semi_join"
								],
								[
									"db_drop_table\t{dplyr}",
									"db_drop_table"
								],
								[
									"sample_frac\t{dplyr}",
									"sample_frac"
								],
								[
									"group_vars\t{dplyr}",
									"group_vars"
								],
								[
									"select_all\t{dplyr}",
									"select_all"
								],
								[
									"group_by_\t{dplyr}",
									"group_by_"
								],
								[
									"slice\t{dplyr}",
									"slice"
								],
								[
									"lead\t{dplyr}",
									"lead"
								],
								[
									"vars\t{dplyr}",
									"vars"
								],
								[
									"summarize\t{dplyr}",
									"summarize"
								],
								[
									"summarise_each_\t{dplyr}",
									"summarise_each_"
								],
								[
									"distinct_prepare\t{dplyr}",
									"distinct_prepare"
								],
								[
									"cur_data\t{dplyr}",
									"cur_data"
								],
								[
									"tibble\t{dplyr}",
									"tibble"
								],
								[
									"sql_subquery\t{dplyr}",
									"sql_subquery"
								],
								[
									"sym\t{dplyr}",
									"sym"
								],
								[
									"group_indices\t{dplyr}",
									"group_indices"
								],
								[
									"right_join\t{dplyr}",
									"right_join"
								],
								[
									"expr\t{dplyr}",
									"expr"
								],
								[
									"db_has_table\t{dplyr}",
									"db_has_table"
								],
								[
									"summarise_at\t{dplyr}",
									"summarise_at"
								],
								[
									"ungroup\t{dplyr}",
									"ungroup"
								],
								[
									"cur_group_rows\t{dplyr}",
									"cur_group_rows"
								],
								[
									"add_rownames\t{dplyr}",
									"add_rownames"
								],
								[
									"transmute_all\t{dplyr}",
									"transmute_all"
								],
								[
									"show_query\t{dplyr}",
									"show_query"
								],
								[
									"db_begin\t{dplyr}",
									"db_begin"
								],
								[
									"group_by_drop_default\t{dplyr}",
									"group_by_drop_default"
								],
								[
									"coalesce\t{dplyr}",
									"coalesce"
								],
								[
									"wrap_dbplyr_obj\t{dplyr}",
									"wrap_dbplyr_obj"
								],
								[
									"distinct_at\t{dplyr}",
									"distinct_at"
								],
								[
									"db_create_indexes\t{dplyr}",
									"db_create_indexes"
								],
								[
									"db_list_tables\t{dplyr}",
									"db_list_tables"
								],
								[
									"relocate\t{dplyr}",
									"relocate"
								],
								[
									"compute\t{dplyr}",
									"compute"
								],
								[
									"mutate_\t{dplyr}",
									"mutate_"
								],
								[
									"lst\t{dplyr}",
									"lst"
								],
								[
									"filter\t{dplyr}",
									"filter"
								],
								[
									"mutate\t{dplyr}",
									"mutate"
								],
								[
									"inner_join\t{dplyr}",
									"inner_join"
								],
								[
									"db_query_fields\t{dplyr}",
									"db_query_fields"
								],
								[
									"rename_vars_\t{dplyr}",
									"rename_vars_"
								],
								[
									"case_when\t{dplyr}",
									"case_when"
								],
								[
									"rename_with\t{dplyr}",
									"rename_with"
								],
								[
									"with_groups\t{dplyr}",
									"with_groups"
								],
								[
									"do_\t{dplyr}",
									"do_"
								],
								[
									"type_sum\t{dplyr}",
									"type_sum"
								],
								[
									"distinct_if\t{dplyr}",
									"distinct_if"
								],
								[
									"cummean\t{dplyr}",
									"cummean"
								],
								[
									"auto_copy\t{dplyr}",
									"auto_copy"
								],
								[
									"db_query_rows\t{dplyr}",
									"db_query_rows"
								],
								[
									"n\t{dplyr}",
									"n"
								],
								[
									"group_map\t{dplyr}",
									"group_map"
								],
								[
									"db_save_query\t{dplyr}",
									"db_save_query"
								],
								[
									"nest_by\t{dplyr}",
									"nest_by"
								],
								[
									"num_range\t{dplyr}",
									"num_range"
								],
								[
									"add_count_\t{dplyr}",
									"add_count_"
								],
								[
									"ident\t{dplyr}",
									"ident"
								],
								[
									"sql_semi_join\t{dplyr}",
									"sql_semi_join"
								],
								[
									"intersect\t{dplyr}",
									"intersect"
								],
								[
									"id\t{dplyr}",
									"id"
								],
								[
									"enquo\t{dplyr}",
									"enquo"
								],
								[
									"transmute_at\t{dplyr}",
									"transmute_at"
								],
								[
									"group_nest\t{dplyr}",
									"group_nest"
								],
								[
									"as_data_frame\t{dplyr}",
									"as_data_frame"
								],
								[
									"recode_factor\t{dplyr}",
									"recode_factor"
								],
								[
									"rename_vars\t{dplyr}",
									"rename_vars"
								],
								[
									"select_if\t{dplyr}",
									"select_if"
								],
								[
									"rename_if\t{dplyr}",
									"rename_if"
								],
								[
									"src_postgres\t{dplyr}",
									"src_postgres"
								],
								[
									"dplyr_reconstruct\t{dplyr}",
									"dplyr_reconstruct"
								],
								[
									"sql_join\t{dplyr}",
									"sql_join"
								],
								[
									"group_trim\t{dplyr}",
									"group_trim"
								],
								[
									"if_else\t{dplyr}",
									"if_else"
								],
								[
									"rename_all\t{dplyr}",
									"rename_all"
								],
								[
									"setdiff\t{dplyr}",
									"setdiff"
								],
								[
									"quos\t{dplyr}",
									"quos"
								],
								[
									"with_order\t{dplyr}",
									"with_order"
								],
								[
									"filter_all\t{dplyr}",
									"filter_all"
								],
								[
									"arrange_\t{dplyr}",
									"arrange_"
								],
								[
									"group_data\t{dplyr}",
									"group_data"
								],
								[
									"top_n\t{dplyr}",
									"top_n"
								],
								[
									"nth\t{dplyr}",
									"nth"
								],
								[
									"group_by\t{dplyr}",
									"group_by"
								],
								[
									"src_mysql\t{dplyr}",
									"src_mysql"
								],
								[
									"select_at\t{dplyr}",
									"select_at"
								],
								[
									"rename_at\t{dplyr}",
									"rename_at"
								],
								[
									"add_count\t{dplyr}",
									"add_count"
								],
								[
									"dense_rank\t{dplyr}",
									"dense_rank"
								],
								[
									"count_\t{dplyr}",
									"count_"
								],
								[
									"full_join\t{dplyr}",
									"full_join"
								],
								[
									"cur_data_all\t{dplyr}",
									"cur_data_all"
								],
								[
									"lst_\t{dplyr}",
									"lst_"
								],
								[
									"slice_max\t{dplyr}",
									"slice_max"
								],
								[
									"summarise_each\t{dplyr}",
									"summarise_each"
								],
								[
									"all_of\t{dplyr}",
									"all_of"
								],
								[
									"cumall\t{dplyr}",
									"cumall"
								],
								[
									"group_size\t{dplyr}",
									"group_size"
								],
								[
									"sql_translate_env\t{dplyr}",
									"sql_translate_env"
								],
								[
									"select_var\t{dplyr}",
									"select_var"
								],
								[
									"mutate_all\t{dplyr}",
									"mutate_all"
								],
								[
									"summarize_at\t{dplyr}",
									"summarize_at"
								],
								[
									"slice_\t{dplyr}",
									"slice_"
								],
								[
									"current_vars\t{dplyr}",
									"current_vars"
								],
								[
									"summarise_if\t{dplyr}",
									"summarise_if"
								],
								[
									"data_frame\t{dplyr}",
									"data_frame"
								],
								[
									"compare_tbls\t{dplyr}",
									"compare_tbls"
								],
								[
									"everything\t{dplyr}",
									"everything"
								],
								[
									"tbl_sum\t{dplyr}",
									"tbl_sum"
								],
								[
									"same_src\t{dplyr}",
									"same_src"
								],
								[
									"group_by_prepare\t{dplyr}",
									"group_by_prepare"
								],
								[
									"db_explain\t{dplyr}",
									"db_explain"
								],
								[
									"eval_tbls\t{dplyr}",
									"eval_tbls"
								],
								[
									"location\t{dplyr}",
									"location"
								],
								[
									"arrange_at\t{dplyr}",
									"arrange_at"
								],
								[
									"transmute_if\t{dplyr}",
									"transmute_if"
								],
								[
									"rename_\t{dplyr}",
									"rename_"
								],
								[
									"arrange\t{dplyr}",
									"arrange"
								],
								[
									"mutate_each_\t{dplyr}",
									"mutate_each_"
								],
								[
									"c_across\t{dplyr}",
									"c_across"
								],
								[
									"select_\t{dplyr}",
									"select_"
								],
								[
									"filter_if\t{dplyr}",
									"filter_if"
								],
								[
									"distinct_all\t{dplyr}",
									"distinct_all"
								],
								[
									"summarize_each_\t{dplyr}",
									"summarize_each_"
								],
								[
									"summarise\t{dplyr}",
									"summarise"
								],
								[
									"as_label\t{dplyr}",
									"as_label"
								],
								[
									"group_by_all\t{dplyr}",
									"group_by_all"
								],
								[
									"copy_to\t{dplyr}",
									"copy_to"
								],
								[
									"select_vars_\t{dplyr}",
									"select_vars_"
								],
								[
									"all_equal\t{dplyr}",
									"all_equal"
								],
								[
									"tbl_ptype\t{dplyr}",
									"tbl_ptype"
								],
								[
									"ntile\t{dplyr}",
									"ntile"
								],
								[
									"trunc_mat\t{dplyr}",
									"trunc_mat"
								],
								[
									"sql\t{dplyr}",
									"sql"
								],
								[
									"near\t{dplyr}",
									"near"
								],
								[
									"common_by\t{dplyr}",
									"common_by"
								],
								[
									"db_insert_into\t{dplyr}",
									"db_insert_into"
								],
								[
									"first\t{dplyr}",
									"first"
								],
								[
									"bench_tbls\t{dplyr}",
									"bench_tbls"
								],
								[
									"dplyr_row_slice\t{dplyr}",
									"dplyr_row_slice"
								],
								[
									"summarize_\t{dplyr}",
									"summarize_"
								],
								[
									"src\t{dplyr}",
									"src"
								],
								[
									"filter_\t{dplyr}",
									"filter_"
								],
								[
									"setequal\t{dplyr}",
									"setequal"
								],
								[
									"rename\t{dplyr}",
									"rename"
								],
								[
									"cumany\t{dplyr}",
									"cumany"
								],
								[
									"one_of\t{dplyr}",
									"one_of"
								],
								[
									"desc\t{dplyr}",
									"desc"
								],
								[
									"contains\t{dplyr}",
									"contains"
								],
								[
									"na_if\t{dplyr}",
									"na_if"
								],
								[
									"distinct_\t{dplyr}",
									"distinct_"
								],
								[
									"glimpse\t{dplyr}",
									"glimpse"
								],
								[
									"ensyms\t{dplyr}",
									"ensyms"
								],
								[
									"frame_data\t{dplyr}",
									"frame_data"
								],
								[
									"quo_name\t{dplyr}",
									"quo_name"
								],
								[
									"tbl\t{dplyr}",
									"tbl"
								],
								[
									"slice_min\t{dplyr}",
									"slice_min"
								],
								[
									"group_modify\t{dplyr}",
									"group_modify"
								],
								[
									"data_frame_\t{dplyr}",
									"data_frame_"
								],
								[
									"group_walk\t{dplyr}",
									"group_walk"
								],
								[
									"count\t{dplyr}",
									"count"
								],
								[
									"make_tbl\t{dplyr}",
									"make_tbl"
								],
								[
									"cume_dist\t{dplyr}",
									"cume_dist"
								],
								[
									"is.grouped_df\t{dplyr}",
									"is.grouped_df"
								],
								[
									"group_cols\t{dplyr}",
									"group_cols"
								],
								[
									"add_tally_\t{dplyr}",
									"add_tally_"
								],
								[
									"as.tbl\t{dplyr}",
									"as.tbl"
								],
								[
									"select\t{dplyr}",
									"select"
								],
								[
									"percent_rank\t{dplyr}",
									"percent_rank"
								],
								[
									"validate_grouped_df\t{dplyr}",
									"validate_grouped_df"
								],
								[
									"grouped_df\t{dplyr}",
									"grouped_df"
								],
								[
									"combine\t{dplyr}",
									"combine"
								],
								[
									"add_tally\t{dplyr}",
									"add_tally"
								],
								[
									"row_number\t{dplyr}",
									"row_number"
								],
								[
									"transmute\t{dplyr}",
									"transmute"
								],
								[
									"sql_escape_string\t{dplyr}",
									"sql_escape_string"
								],
								[
									"groups\t{dplyr}",
									"groups"
								],
								[
									"quo\t{dplyr}",
									"quo"
								],
								[
									"changes\t{dplyr}",
									"changes"
								],
								[
									"between\t{dplyr}",
									"between"
								],
								[
									"funs_\t{dplyr}",
									"funs_"
								],
								[
									"collect\t{dplyr}",
									"collect"
								],
								[
									"group_rows\t{dplyr}",
									"group_rows"
								],
								[
									"ensym\t{dplyr}",
									"ensym"
								],
								[
									"mutate_each\t{dplyr}",
									"mutate_each"
								],
								[
									"all_vars\t{dplyr}",
									"all_vars"
								],
								[
									"starts_with\t{dplyr}",
									"starts_with"
								],
								[
									"explain\t{dplyr}",
									"explain"
								],
								[
									"src_sqlite\t{dplyr}",
									"src_sqlite"
								],
								[
									"summarize_all\t{dplyr}",
									"summarize_all"
								],
								[
									"slice_tail\t{dplyr}",
									"slice_tail"
								],
								[
									"if_all\t{dplyr}",
									"if_all"
								],
								[
									"add_row\t{dplyr}",
									"add_row"
								],
								[
									"recode\t{dplyr}",
									"recode"
								],
								[
									"slice_head\t{dplyr}",
									"slice_head"
								],
								[
									"tribble\t{dplyr}",
									"tribble"
								],
								[
									"db_rollback\t{dplyr}",
									"db_rollback"
								],
								[
									"failwith\t{dplyr}",
									"failwith"
								],
								[
									"summarise_all\t{dplyr}",
									"summarise_all"
								],
								[
									"summarize_if\t{dplyr}",
									"summarize_if"
								],
								[
									"cur_group_id\t{dplyr}",
									"cur_group_id"
								],
								[
									"rows_delete\t{dplyr}",
									"rows_delete"
								],
								[
									"union_all\t{dplyr}",
									"union_all"
								],
								[
									"enexpr\t{dplyr}",
									"enexpr"
								],
								[
									"My\t{grDevices}",
									"My"
								],
								[
									".Rprofile\t{grDevices}",
									".Rprofile"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"My\t{utils}",
									"My"
								],
								[
									".Rprofile\t{utils}",
									".Rprofile"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"My\t{graphics}",
									"My"
								],
								[
									".Rprofile\t{graphics}",
									".Rprofile"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"My\t{base}",
									"My"
								],
								[
									".Rprofile\t{base}",
									".Rprofile"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"My\t{purrr}",
									"My"
								],
								[
									".Rprofile\t{purrr}",
									".Rprofile"
								],
								[
									"invoke_map_df\t{purrr}",
									"invoke_map_df"
								],
								[
									"as_vector\t{purrr}",
									"as_vector"
								],
								[
									"is_vector\t{purrr}",
									"is_vector"
								],
								[
									"imap_int\t{purrr}",
									"imap_int"
								],
								[
									"modify\t{purrr}",
									"modify"
								],
								[
									"possibly\t{purrr}",
									"possibly"
								],
								[
									"is_bare_logical\t{purrr}",
									"is_bare_logical"
								],
								[
									"map_dfr\t{purrr}",
									"map_dfr"
								],
								[
									"invoke_map\t{purrr}",
									"invoke_map"
								],
								[
									"invoke_map_dfc\t{purrr}",
									"invoke_map_dfc"
								],
								[
									"map_at\t{purrr}",
									"map_at"
								],
								[
									"pmap_lgl\t{purrr}",
									"pmap_lgl"
								],
								[
									"is_scalar_logical\t{purrr}",
									"is_scalar_logical"
								],
								[
									"list_along\t{purrr}",
									"list_along"
								],
								[
									"is_empty\t{purrr}",
									"is_empty"
								],
								[
									"when\t{purrr}",
									"when"
								],
								[
									"modify2\t{purrr}",
									"modify2"
								],
								[
									"invoke\t{purrr}",
									"invoke"
								],
								[
									"lift_dl\t{purrr}",
									"lift_dl"
								],
								[
									"flatten_dfr\t{purrr}",
									"flatten_dfr"
								],
								[
									"is_scalar_integer\t{purrr}",
									"is_scalar_integer"
								],
								[
									"at_depth\t{purrr}",
									"at_depth"
								],
								[
									"auto_browse\t{purrr}",
									"auto_browse"
								],
								[
									"map\t{purrr}",
									"map"
								],
								[
									"cross_df\t{purrr}",
									"cross_df"
								],
								[
									"map_dfc\t{purrr}",
									"map_dfc"
								],
								[
									"map_raw\t{purrr}",
									"map_raw"
								],
								[
									"modify_if\t{purrr}",
									"modify_if"
								],
								[
									"invoke_map_dfr\t{purrr}",
									"invoke_map_dfr"
								],
								[
									"splice\t{purrr}",
									"splice"
								],
								[
									"flatten_int\t{purrr}",
									"flatten_int"
								],
								[
									"array_branch\t{purrr}",
									"array_branch"
								],
								[
									"prepend\t{purrr}",
									"prepend"
								],
								[
									"zap\t{purrr}",
									"zap"
								],
								[
									"discard\t{purrr}",
									"discard"
								],
								[
									"modify_in\t{purrr}",
									"modify_in"
								],
								[
									"is_bare_integer\t{purrr}",
									"is_bare_integer"
								],
								[
									"flatten_lgl\t{purrr}",
									"flatten_lgl"
								],
								[
									"pmap_dbl\t{purrr}",
									"pmap_dbl"
								],
								[
									"map2_chr\t{purrr}",
									"map2_chr"
								],
								[
									"vec_depth\t{purrr}",
									"vec_depth"
								],
								[
									"invoke_map_lgl\t{purrr}",
									"invoke_map_lgl"
								],
								[
									"compact\t{purrr}",
									"compact"
								],
								[
									"is_numeric\t{purrr}",
									"is_numeric"
								],
								[
									"flatten_dfc\t{purrr}",
									"flatten_dfc"
								],
								[
									"map2\t{purrr}",
									"map2"
								],
								[
									"walk2\t{purrr}",
									"walk2"
								],
								[
									"map2_lgl\t{purrr}",
									"map2_lgl"
								],
								[
									"rdunif\t{purrr}",
									"rdunif"
								],
								[
									"imap_raw\t{purrr}",
									"imap_raw"
								],
								[
									"map_df\t{purrr}",
									"map_df"
								],
								[
									"is_bare_vector\t{purrr}",
									"is_bare_vector"
								],
								[
									"array_tree\t{purrr}",
									"array_tree"
								],
								[
									"map2_df\t{purrr}",
									"map2_df"
								],
								[
									"partial\t{purrr}",
									"partial"
								],
								[
									"invoke_map_int\t{purrr}",
									"invoke_map_int"
								],
								[
									"map_chr\t{purrr}",
									"map_chr"
								],
								[
									"is_rate\t{purrr}",
									"is_rate"
								],
								[
									"set_names\t{purrr}",
									"set_names"
								],
								[
									"lift\t{purrr}",
									"lift"
								],
								[
									"imap_lgl\t{purrr}",
									"imap_lgl"
								],
								[
									"rate_reset\t{purrr}",
									"rate_reset"
								],
								[
									"map2_raw\t{purrr}",
									"map2_raw"
								],
								[
									"list_merge\t{purrr}",
									"list_merge"
								],
								[
									"flatten\t{purrr}",
									"flatten"
								],
								[
									"is_scalar_vector\t{purrr}",
									"is_scalar_vector"
								],
								[
									"keep\t{purrr}",
									"keep"
								],
								[
									"is_character\t{purrr}",
									"is_character"
								],
								[
									"flatten_chr\t{purrr}",
									"flatten_chr"
								],
								[
									"lift_vd\t{purrr}",
									"lift_vd"
								],
								[
									"every\t{purrr}",
									"every"
								],
								[
									"modify_at\t{purrr}",
									"modify_at"
								],
								[
									"map_lgl\t{purrr}",
									"map_lgl"
								],
								[
									"modify_depth\t{purrr}",
									"modify_depth"
								],
								[
									"is_formula\t{purrr}",
									"is_formula"
								],
								[
									"iwalk\t{purrr}",
									"iwalk"
								],
								[
									"accumulate2\t{purrr}",
									"accumulate2"
								],
								[
									"lift_vl\t{purrr}",
									"lift_vl"
								],
								[
									"rate_sleep\t{purrr}",
									"rate_sleep"
								],
								[
									"lmap_at\t{purrr}",
									"lmap_at"
								],
								[
									"invoke_map_dbl\t{purrr}",
									"invoke_map_dbl"
								],
								[
									"insistently\t{purrr}",
									"insistently"
								],
								[
									"is_bare_numeric\t{purrr}",
									"is_bare_numeric"
								],
								[
									"chuck\t{purrr}",
									"chuck"
								],
								[
									"map_int\t{purrr}",
									"map_int"
								],
								[
									"is_integer\t{purrr}",
									"is_integer"
								],
								[
									"imap_dbl\t{purrr}",
									"imap_dbl"
								],
								[
									"rate_backoff\t{purrr}",
									"rate_backoff"
								],
								[
									"has_element\t{purrr}",
									"has_element"
								],
								[
									"exec\t{purrr}",
									"exec"
								],
								[
									"rerun\t{purrr}",
									"rerun"
								],
								[
									"pmap_df\t{purrr}",
									"pmap_df"
								],
								[
									"rate_delay\t{purrr}",
									"rate_delay"
								],
								[
									"pluck\t{purrr}",
									"pluck"
								],
								[
									"is_logical\t{purrr}",
									"is_logical"
								],
								[
									"invoke_map_raw\t{purrr}",
									"invoke_map_raw"
								],
								[
									"slowly\t{purrr}",
									"slowly"
								],
								[
									"invoke_map_chr\t{purrr}",
									"invoke_map_chr"
								],
								[
									"map_dbl\t{purrr}",
									"map_dbl"
								],
								[
									"rbernoulli\t{purrr}",
									"rbernoulli"
								],
								[
									"is_list\t{purrr}",
									"is_list"
								],
								[
									"cross\t{purrr}",
									"cross"
								],
								[
									"is_atomic\t{purrr}",
									"is_atomic"
								],
								[
									"none\t{purrr}",
									"none"
								],
								[
									"map2_dbl\t{purrr}",
									"map2_dbl"
								],
								[
									"transpose\t{purrr}",
									"transpose"
								],
								[
									"is_double\t{purrr}",
									"is_double"
								],
								[
									"map_call\t{purrr}",
									"map_call"
								],
								[
									"compose\t{purrr}",
									"compose"
								],
								[
									"pmap_dfr\t{purrr}",
									"pmap_dfr"
								],
								[
									"as_function\t{purrr}",
									"as_function"
								],
								[
									"imap_chr\t{purrr}",
									"imap_chr"
								],
								[
									"tail_while\t{purrr}",
									"tail_while"
								],
								[
									"as_mapper\t{purrr}",
									"as_mapper"
								],
								[
									"pmap\t{purrr}",
									"pmap"
								],
								[
									"negate\t{purrr}",
									"negate"
								],
								[
									"is_null\t{purrr}",
									"is_null"
								],
								[
									"pmap_int\t{purrr}",
									"pmap_int"
								],
								[
									"lift_lv\t{purrr}",
									"lift_lv"
								],
								[
									"detect_index\t{purrr}",
									"detect_index"
								],
								[
									"is_bare_list\t{purrr}",
									"is_bare_list"
								],
								[
									"map_if\t{purrr}",
									"map_if"
								],
								[
									"assign_in\t{purrr}",
									"assign_in"
								],
								[
									"flatten_df\t{purrr}",
									"flatten_df"
								],
								[
									"flatten_raw\t{purrr}",
									"flatten_raw"
								],
								[
									"update_list\t{purrr}",
									"update_list"
								],
								[
									"reduce2_right\t{purrr}",
									"reduce2_right"
								],
								[
									"pmap_dfc\t{purrr}",
									"pmap_dfc"
								],
								[
									"is_bare_double\t{purrr}",
									"is_bare_double"
								],
								[
									"is_function\t{purrr}",
									"is_function"
								],
								[
									"imodify\t{purrr}",
									"imodify"
								],
								[
									"accumulate\t{purrr}",
									"accumulate"
								],
								[
									"is_scalar_double\t{purrr}",
									"is_scalar_double"
								],
								[
									"reduce\t{purrr}",
									"reduce"
								],
								[
									"is_scalar_list\t{purrr}",
									"is_scalar_list"
								],
								[
									"map_depth\t{purrr}",
									"map_depth"
								],
								[
									"lmap_if\t{purrr}",
									"lmap_if"
								],
								[
									"simplify_all\t{purrr}",
									"simplify_all"
								],
								[
									"is_scalar_atomic\t{purrr}",
									"is_scalar_atomic"
								],
								[
									"lift_ld\t{purrr}",
									"lift_ld"
								],
								[
									"rep_along\t{purrr}",
									"rep_along"
								],
								[
									"cross2\t{purrr}",
									"cross2"
								],
								[
									"map2_dfr\t{purrr}",
									"map2_dfr"
								],
								[
									"cross3\t{purrr}",
									"cross3"
								],
								[
									"imap_dfc\t{purrr}",
									"imap_dfc"
								],
								[
									"done\t{purrr}",
									"done"
								],
								[
									"detect\t{purrr}",
									"detect"
								],
								[
									"simplify\t{purrr}",
									"simplify"
								],
								[
									"cross_d\t{purrr}",
									"cross_d"
								],
								[
									"is_bare_character\t{purrr}",
									"is_bare_character"
								],
								[
									"flatten_dbl\t{purrr}",
									"flatten_dbl"
								],
								[
									"some\t{purrr}",
									"some"
								],
								[
									"accumulate_right\t{purrr}",
									"accumulate_right"
								],
								[
									"attr_getter\t{purrr}",
									"attr_getter"
								],
								[
									"quietly\t{purrr}",
									"quietly"
								],
								[
									"map2_int\t{purrr}",
									"map2_int"
								],
								[
									"is_scalar_character\t{purrr}",
									"is_scalar_character"
								],
								[
									"pmap_raw\t{purrr}",
									"pmap_raw"
								],
								[
									"is_bare_atomic\t{purrr}",
									"is_bare_atomic"
								],
								[
									"walk\t{purrr}",
									"walk"
								],
								[
									"cross_n\t{purrr}",
									"cross_n"
								],
								[
									"imap_dfr\t{purrr}",
									"imap_dfr"
								],
								[
									"is_scalar_numeric\t{purrr}",
									"is_scalar_numeric"
								],
								[
									"map2_dfc\t{purrr}",
									"map2_dfc"
								],
								[
									"imap\t{purrr}",
									"imap"
								],
								[
									"lift_dv\t{purrr}",
									"lift_dv"
								],
								[
									"list_modify\t{purrr}",
									"list_modify"
								],
								[
									"head_while\t{purrr}",
									"head_while"
								],
								[
									"safely\t{purrr}",
									"safely"
								],
								[
									"reduce2\t{purrr}",
									"reduce2"
								],
								[
									"reduce_right\t{purrr}",
									"reduce_right"
								],
								[
									"lmap\t{purrr}",
									"lmap"
								],
								[
									"pwalk\t{purrr}",
									"pwalk"
								],
								[
									"My\t{tibble}",
									"My"
								],
								[
									".Rprofile\t{tibble}",
									".Rprofile"
								],
								[
									"lst\t{tibble}",
									"lst"
								],
								[
									"size_sum\t{tibble}",
									"size_sum"
								],
								[
									"deframe\t{tibble}",
									"deframe"
								],
								[
									"data_frame\t{tibble}",
									"data_frame"
								],
								[
									"enframe\t{tibble}",
									"enframe"
								],
								[
									"obj_sum\t{tibble}",
									"obj_sum"
								],
								[
									"tibble_\t{tibble}",
									"tibble_"
								],
								[
									"repair_names\t{tibble}",
									"repair_names"
								],
								[
									"glimpse\t{tibble}",
									"glimpse"
								],
								[
									"as_data_frame\t{tibble}",
									"as_data_frame"
								],
								[
									"is.tibble\t{tibble}",
									"is.tibble"
								],
								[
									".__C__tbl_df\t{tibble}",
									".__C__tbl_df"
								],
								[
									"rownames_to_column\t{tibble}",
									"rownames_to_column"
								],
								[
									"as_tibble_row\t{tibble}",
									"as_tibble_row"
								],
								[
									"frame_data\t{tibble}",
									"frame_data"
								],
								[
									"has_rownames\t{tibble}",
									"has_rownames"
								],
								[
									"as_tibble_col\t{tibble}",
									"as_tibble_col"
								],
								[
									"type_sum\t{tibble}",
									"type_sum"
								],
								[
									"tribble\t{tibble}",
									"tribble"
								],
								[
									"is_tibble\t{tibble}",
									"is_tibble"
								],
								[
									"tibble\t{tibble}",
									"tibble"
								],
								[
									"new_tibble\t{tibble}",
									"new_tibble"
								],
								[
									"num\t{tibble}",
									"num"
								],
								[
									"view\t{tibble}",
									"view"
								],
								[
									"remove_rownames\t{tibble}",
									"remove_rownames"
								],
								[
									"knit_print.trunc_mat\t{tibble}",
									"knit_print.trunc_mat"
								],
								[
									"as.tibble\t{tibble}",
									"as.tibble"
								],
								[
									"tibble_row\t{tibble}",
									"tibble_row"
								],
								[
									"data_frame_\t{tibble}",
									"data_frame_"
								],
								[
									"frame_matrix\t{tibble}",
									"frame_matrix"
								],
								[
									"char\t{tibble}",
									"char"
								],
								[
									"tidy_names\t{tibble}",
									"tidy_names"
								],
								[
									"column_to_rownames\t{tibble}",
									"column_to_rownames"
								],
								[
									"trunc_mat\t{tibble}",
									"trunc_mat"
								],
								[
									"validate_tibble\t{tibble}",
									"validate_tibble"
								],
								[
									"has_name\t{tibble}",
									"has_name"
								],
								[
									"tbl_sum\t{tibble}",
									"tbl_sum"
								],
								[
									"as_tibble\t{tibble}",
									"as_tibble"
								],
								[
									"add_case\t{tibble}",
									"add_case"
								],
								[
									"rowid_to_column\t{tibble}",
									"rowid_to_column"
								],
								[
									"add_column\t{tibble}",
									"add_column"
								],
								[
									"add_row\t{tibble}",
									"add_row"
								],
								[
									"lst_\t{tibble}",
									"lst_"
								],
								[
									"My\tInstalled Package",
									"My"
								],
								[
									".Rprofile\tInstalled Package",
									".Rprofile"
								],
								[
									"works!\tInstalled Package",
									"works!"
								],
								[
									"\nBH\tInstalled Package",
									"\nBH"
								],
								[
									"Cairo\tInstalled Package",
									"Cairo"
								],
								[
									"CompQuadForm\tInstalled Package",
									"CompQuadForm"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DSI\tInstalled Package",
									"DSI"
								],
								[
									"DSMolgenisArmadillo\tInstalled Package",
									"DSMolgenisArmadillo"
								],
								[
									"DSOpal\tInstalled Package",
									"DSOpal"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"EnvStats\tInstalled Package",
									"EnvStats"
								],
								[
									"FactoMineR\tInstalled Package",
									"FactoMineR"
								],
								[
									"Formula\tInstalled Package",
									"Formula"
								],
								[
									"GGally\tInstalled Package",
									"GGally"
								],
								[
									"GPArotation\tInstalled Package",
									"GPArotation"
								],
								[
									"Hmisc\tInstalled Package",
									"Hmisc"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"MolgenisArmadillo\tInstalled Package",
									"MolgenisArmadillo"
								],
								[
									"MolgenisAuth\tInstalled Package",
									"MolgenisAuth"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"alspac\tInstalled Package",
									"alspac"
								],
								[
									"arrow\tInstalled Package",
									"arrow"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"aws.iam\tInstalled Package",
									"aws.iam"
								],
								[
									"aws.s3\tInstalled Package",
									"aws.s3"
								],
								[
									"aws.signature\tInstalled Package",
									"aws.signature"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bayestestR\tInstalled Package",
									"bayestestR"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"bookdown\tInstalled Package",
									"bookdown"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"conquer\tInstalled Package",
									"conquer"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"dcurver\tInstalled Package",
									"dcurver"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dotCall64\tInstalled Package",
									"dotCall64"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dsBaseClient\tInstalled Package",
									"dsBaseClient"
								],
								[
									"dsHelper\tInstalled Package",
									"dsHelper"
								],
								[
									"dsUpload\tInstalled Package",
									"dsUpload"
								],
								[
									"dtplyr\tInstalled Package",
									"dtplyr"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"effectsize\tInstalled Package",
									"effectsize"
								],
								[
									"ellipse\tInstalled Package",
									"ellipse"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"expm\tInstalled Package",
									"expm"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fields\tInstalled Package",
									"fields"
								],
								[
									"flashClust\tInstalled Package",
									"flashClust"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"forestplot\tInstalled Package",
									"forestplot"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"gargle\tInstalled Package",
									"gargle"
								],
								[
									"gdata\tInstalled Package",
									"gdata"
								],
								[
									"gdtools\tInstalled Package",
									"gdtools"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggraph\tInstalled Package",
									"ggraph"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggridges\tInstalled Package",
									"ggridges"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gmodels\tInstalled Package",
									"gmodels"
								],
								[
									"googledrive\tInstalled Package",
									"googledrive"
								],
								[
									"googlesheets4\tInstalled Package",
									"googlesheets4"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"graphlayouts\tInstalled Package",
									"graphlayouts"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gsubfn\tInstalled Package",
									"gsubfn"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"hrbrthemes\tInstalled Package",
									"hrbrthemes"
								],
								[
									"htmlTable\tInstalled Package",
									"htmlTable"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"ids\tInstalled Package",
									"ids"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"insight\tInstalled Package",
									"insight"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jpeg\tInstalled Package",
									"jpeg"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"kableExtra\tInstalled Package",
									"kableExtra"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"labelled\tInstalled Package",
									"labelled"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"latticeExtra\tInstalled Package",
									"latticeExtra"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"leaps\tInstalled Package",
									"leaps"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lspline\tInstalled Package",
									"lspline"
								],
								[
									"ltm\tInstalled Package",
									"ltm"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"maditr\tInstalled Package",
									"maditr"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"maptools\tInstalled Package",
									"maptools"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"meta\tInstalled Package",
									"meta"
								],
								[
									"metafor\tInstalled Package",
									"metafor"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mirt\tInstalled Package",
									"mirt"
								],
								[
									"mitools\tInstalled Package",
									"mitools"
								],
								[
									"mnormt\tInstalled Package",
									"mnormt"
								],
								[
									"mockery\tInstalled Package",
									"mockery"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"msm\tInstalled Package",
									"msm"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"nortest\tInstalled Package",
									"nortest"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"opalr\tInstalled Package",
									"opalr"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"panelaggregation\tInstalled Package",
									"panelaggregation"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"parameters\tInstalled Package",
									"parameters"
								],
								[
									"parsedate\tInstalled Package",
									"parsedate"
								],
								[
									"pastecs\tInstalled Package",
									"pastecs"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"permute\tInstalled Package",
									"permute"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"png\tInstalled Package",
									"png"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"polycor\tInstalled Package",
									"polycor"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"proto\tInstalled Package",
									"proto"
								],
								[
									"proxy\tInstalled Package",
									"proxy"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"psych\tInstalled Package",
									"psych"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readstata13\tInstalled Package",
									"readstata13"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reshape\tInstalled Package",
									"reshape"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rhub\tInstalled Package",
									"rhub"
								],
								[
									"rio\tInstalled Package",
									"rio"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rspiro\tInstalled Package",
									"rspiro"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"scatterplot3d\tInstalled Package",
									"scatterplot3d"
								],
								[
									"see\tInstalled Package",
									"see"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"showtext\tInstalled Package",
									"showtext"
								],
								[
									"showtextdb\tInstalled Package",
									"showtextdb"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"spam\tInstalled Package",
									"spam"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"statar\tInstalled Package",
									"statar"
								],
								[
									"statmod\tInstalled Package",
									"statmod"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survey\tInstalled Package",
									"survey"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"svglite\tInstalled Package",
									"svglite"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"sysfonts\tInstalled Package",
									"sysfonts"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"tableone\tInstalled Package",
									"tableone"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidygraph\tInstalled Package",
									"tidygraph"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tmvnsim\tInstalled Package",
									"tmvnsim"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"triebeard\tInstalled Package",
									"triebeard"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"urltools\tInstalled Package",
									"urltools"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"uuid\tInstalled Package",
									"uuid"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vegan\tInstalled Package",
									"vegan"
								],
								[
									"viridis\tInstalled Package",
									"viridis"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"webshot\tInstalled Package",
									"webshot"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"whoami\tInstalled Package",
									"whoami"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"methods",
								"stats",
								"dplyr",
								"grDevices",
								"utils",
								"graphics",
								"base",
								"purrr",
								"tibble"
							],
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/timcadman/.Rprofile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 236,
						"regions":
						{
						},
						"selection":
						[
							[
								152,
								152
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 186.0
	},
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "env-pnd.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		]
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 213.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
